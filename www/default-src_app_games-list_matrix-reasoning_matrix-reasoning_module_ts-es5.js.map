{"version":3,"sources":["webpack:///src/app/games-list/matrix-reasoning/matrix-reasoning-routing.module.ts","webpack:///src/app/games-list/matrix-reasoning/matrix-reasoning.module.ts","webpack:///src/app/games-list/matrix-reasoning/matrix-reasoning.page.ts","webpack:///src/app/games-list/matrix-reasoning/matrix-reasoning.page.scss","webpack:///src/app/games-list/matrix-reasoning/matrix-reasoning.page.html"],"names":["routes","path","component","MatrixReasoningPage","MatrixReasoningPageRoutingModule","NgModule","imports","RouterModule","exports","MatrixReasoningPageModule","CommonModule","FormsModule","IonicModule","SharedModule","declarations","router","menu","gameService","eventemitter","alertCtrl","gameno","toGet","threshold","gameHasBegun","startButtonIsDisabled","level","passed","picked","score","maxLevel","multiplier","wrongs","photoaddress","answerArray","gameOn","subscription","Subscription","database","excerciseSet","gameStateSubj","subscribe","value","onStart","console","log","onRestart","onResume","onQuit","onPause","databaseemitter","getLevelScore","levels","array","i","length","j","Math","floor","random","temp","create","header","message","buttons","text","role","handler","createGame","then","alert","present","matrixreasoning","questionNo","question","currentItem","answer","num_choices","x","toString","push","Answer","index","color","disabled","reset","timer","clearTimer","storeLevelScore","levelCheck","close","navigate","unsubscribe","Router","MenuController","GameService","EventemitterService","AlertController","Input","Component","selector","template"],"mappings":"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","file":"default-src_app_games-list_matrix-reasoning_matrix-reasoning_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MatrixReasoningPage } from './matrix-reasoning.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatrixReasoningPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MatrixReasoningPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MatrixReasoningPageRoutingModule } from './matrix-reasoning-routing.module';\n\nimport { MatrixReasoningPage } from './matrix-reasoning.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatrixReasoningPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [MatrixReasoningPage],\n  exports: [MatrixReasoningPage]\n})\nexport class MatrixReasoningPageModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n//import { Riddle } from './trivia.model';\nimport { Answer } from '../trivia/answer.model';\nimport { GameService } from '../../shared/game.service';\nimport { MenuController } from '@ionic/angular';\nimport { EventemitterService } from '../../shared/eventemitter.service';\nimport { Subscription } from 'rxjs';\nimport { AlertController } from '@ionic/angular';\nimport { resetFakeAsyncZone } from '@angular/core/testing';\n\n@Component({\n  selector: 'app-matrix-reasoning',\n  templateUrl: './matrix-reasoning.page.html',\n  styleUrls: ['./matrix-reasoning.page.scss'],\n})\nexport class MatrixReasoningPage implements OnInit {\n  gameno: number = 9;\n  toGet = 0;\n  threshold = 200;\n  gameHasBegun: boolean = false;\n  startButtonIsDisabled = false;\n  question: string;\n  src: string;\n  answer: string;\n  level = 1;\n  index: number;\n  passed = 0;\n  num_choices: number;\n  picked = false;\n  score = 0;\n  maxLevel = 10\n  multiplier = 20;\n  wrongs = 0;\n  photoaddress = \"../../assets/matrix-reasoning/\"\n  currentItem: any;\n  answerArray: Answer[] = []\n  gameOn = false;\n  questionNo: number;\n  subscription = new Subscription();\n  database = new Subscription()\n  @Input('excerciseSet') excerciseSet = false;\n  @Input('levels') levels;\n\n  constructor(\n    private router: Router,\n    private menu: MenuController,\n    private gameService: GameService,\n    private eventemitter: EventemitterService,\n    private alertCtrl: AlertController) {}\n\n  ngOnInit() {\n    this.subscription = this.eventemitter.gameStateSubj.subscribe(value =>{\n      switch(value){\n        case 'start':\n          this.onStart()\n          console.log('start')\n          break\n        case 'restart':\n          this.onRestart()\n          break\n        case 'resume':\n          this.onResume()\n          break\n        case 'quit':\n          this.onQuit()\n          break\n        case 'pause':\n          this.onPause()\n          break\n      }}) \n\n      this.database = this.eventemitter.databaseemitter.subscribe(value => {\n        if (value.level){\n          this.level = value.level}\n        if (value.score){\n          this.score = value.score\n        }\n      })\n\n   this.gameService.getLevelScore(this.gameno, this.excerciseSet)\n\n   if (this.excerciseSet) {\n    this.level = this.levels[0]\n    this.score = 0\n\n    }}\n  \n  shuffle(array) { // Common shuffle algorithm used online\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }    \n    return array;\n    } \n\n  onStart(){\n    this.toGet = this.threshold - this.score\n    this.alertCtrl.create({\n      header: 'Level: ' + this.level,\n      message: 'You need' + ' ' + this.toGet +  ' points to go to the next level',\n      buttons: [{\n        text: 'Continue',\n        role: 'Continue',\n        handler: () => {\n          this.gameHasBegun = true\n          this.gameOn = true\n          this.createGame()\n      }}]}).then(alert=> alert.present())\n  }\n\n  createGame(){\n    \n   this.gameService.matrixreasoning()\n\n   this.questionNo = Math.floor(Math.random() * ((this.level*10) - 1 - ((this.level*10) - 9))) + ((this.level*10) - 9);\n\n   this.database = this.eventemitter.databaseemitter.subscribe(value => {\n    if(value.path){\n    if (this.passed == 0){\n      this.passed++\n      this.question = 'L' + this.level + 'Q' + this.questionNo\n      this.currentItem = 'L' + this.level + 'Q' + (this.questionNo - (this.level-1)*10) + \".jpg\"\n      console.log(this.question)\n      this.answer = (value.value[this.level]['Q' + this.questionNo]['Answer'])\n      console.log(this.answer)\n      this.num_choices = (value.value[this.level]['Q' + this.questionNo]['Num_Choices'])\n\n      for(let i = 1; i <= this.num_choices; i++){\n        let x = i.toString()\n        this.answerArray.push(new Answer(x, 'dark', false))\n      }\n    }\n  }})\n  }\n\n  pick(index: number){\n    console.log(\"Button is picked\")\n    if (this.picked != true){\n    this.picked = true;\n    this.answerArray[index].color = \"light\"\n    this.index = index;\n  \n    for(let x = 0; x<this.num_choices; x++){\n      if(x!=index){\n        this.answerArray[x].disabled = true\n      }\n    }\n  \n    }\n    else {\n      this.picked = false;\n      this.answerArray[index].color = \"dark\"\n  \n      for(let x = 0; x<this.num_choices; x++){ \n        this.answerArray[x].disabled = false\n    }\n  }}\n\n  checker(){\n    if (this.excerciseSet === true) {\n      this.toGet = null\n      if (this.level > this.levels[1]) {\n        this.level++\n        this.reset()\n        this.createGame()\n      }\n    } else {\n      //this.toGet = this.gameService.scoringconstant - this.cardService.getLevelandScore()[1]\n    }\n  \n    if(this.answerArray[this.index].value == this.answer){\n      this.score+=this.multiplier\n      this.toGet = this.threshold - this.score\n      let timer = this.gameService.clearTimer()\n      this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n  \n      this.alertCtrl.create({\n        header: 'Correct!',\n        message: 'Your Score is' + ' ' + this.score + \" points. You need \" + this.toGet + \" points to finish the level\",\n        buttons: [{\n          text: 'Next Question',\n          role: 'Continue',\n          handler: () => {\n            this.reset()\n            console.log(\"Next Question\")\n            this.levelCheck()\n        }}]}).then(alert=> alert.present())}\n      \n    else{\n      this.toGet = this.threshold - this.score\n      this.alertCtrl.create({\n        header: 'Wrong Answer',\n        message: 'You need' + ' ' + this.toGet +  ' points to go to the next level',\n        buttons: [{\n          text: 'Next Question',\n          role: 'Continue',\n          handler: () => {\n            this.reset()\n            this.wrongs++\n            let timer = this.gameService.clearTimer()\n            this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n            console.log(\"Next Question\")\n            this.levelCheck()\n        }}]}).then(alert=> alert.present())\n      }\n  }\n\n  levelCheck(){\n    if(this.score >= this.threshold){\n      if(this.level >= this.maxLevel){\n        this.alertCtrl.create({\n          header: 'GAME COMPLETE!!',\n          message: 'We hope you enjoyed playing Matrix Reasoning. The Game is over. Exiting will reset the game',\n          buttons: [{\n            text: 'Next Question',\n            role: 'Continue',\n            handler: () => {\n              this.level = 1;\n              this.score = 0;\n              let timer = this.gameService.clearTimer()\n              this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n              this.onQuit()\n              console.log(\"Game Over\")\n        \n          }}]}).then(alert=> alert.present())\n      }\n      else{\n      this.level++\n      this.score = 0\n      this.wrongs = 0\n      let timer = this.gameService.clearTimer()\n      this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n       this.alertCtrl.create({\n      header: 'You have completed the level!',\n      message: \"\",\n      buttons: [{\n        text: 'Next Question',\n        role: 'Continue',\n        handler: () => {\n          console.log(\"Next Level/Type\")\n    \n      }}]}).then(alert=> alert.present())\n    }}\n    else{\n    }\n    this.createGame()\n  }\n\n  reset(){\n  this.picked = false\n  this.answerArray = []\n  this.answer = \"\"\n  //this.round = 0\n  this.questionNo = 0\n  this.passed = 0\n  }\n\n  onRestart(){\n    this.alertCtrl.create({\n      header: 'Are you sure you want to restart this level?',\n      buttons: [{\n        text: 'Restart',\n        role: 'Continue',\n        handler: () => {\n          this.reset()\n          this.score = 0\n          this.wrongs = 0\n          let timer = this.gameService.clearTimer()\n          this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-10 , this.level-1)\n          this.createGame()\n    \n      }}]}).then(alert=> alert.present())\n  }\n\n  onResume(){\n    this.menu.close('pause')\n  }\n\n  onQuit(){\n    this.gameOn = false;\n    this.router.navigate(['/home'])\n  }\n\n  onPause(){\n    console.log(\"paused\")\n\n    this.alertCtrl.create({\n      header: 'Game is Paused',\n      message: 'Hope your liking it!',\n      buttons: [{\n        text: 'Resume Game',\n        role: 'Continue',\n        handler: () => {\n          console.log(\"Game Resumed\")\n    \n      }}]}).then(alert=> alert.present())\n  }\n\n  ionViewDidLeave() {\n    this.subscription.unsubscribe()\n  }\n\n}\n","export default \"ion-content.background {\\n  --ion-background-color:#ffff;\\n}\\n\\n.main {\\n  padding: 0 50px;\\n  margin-top: 30px;\\n}\\n\\nion-button {\\n  margin-bottom: 20px;\\n  font-size: 20px;\\n}\\n\\nion-icon {\\n  margin-left: 10px;\\n}\\n\\nh3 {\\n  color: white;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n}\\n\\n.submit {\\n  padding-top: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdHJpeC1yZWFzb25pbmcucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksNEJBQUE7QUFDSjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtBQUFGOztBQUdBO0VBQ0UsbUJBQUE7RUFDQSxlQUFBO0FBQUY7O0FBR0E7RUFDRSxpQkFBQTtBQUFGOztBQUdBO0VBQ0UsWUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUFBRjs7QUFHQTtFQUNFLGlCQUFBO0FBQUYiLCJmaWxlIjoibWF0cml4LXJlYXNvbmluZy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudC5iYWNrZ3JvdW5ke1xuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6I2ZmZmY7ICAgXG4gICAgXG4gIH1cblxuLm1haW57XG4gIHBhZGRpbmc6IDAgNTBweDtcbiAgbWFyZ2luLXRvcDogMzBweDtcbn1cblxuaW9uLWJ1dHRvbntcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG5pb24taWNvbntcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG5cbmgzIHtcbiAgY29sb3I6IHdoaXRlO1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4uc3VibWl0IHtcbiAgcGFkZGluZy10b3A6IDUwcHg7XG59XG5cbiJdfQ== */\";","export default \"<app-header [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-header>\\n<app-description [(gameHasBegun)]=\\\"gameHasBegun\\\" [(startButtonIsDisabled)]=\\\"startButtonIsDisabled\\\" [(gameno)]=\\\"gameno\\\"></app-description>\\n\\n<app-score *ngIf=\\\"gameHasBegun\\\" [(level)]=\\\"level\\\" [(score)]=\\\"score\\\"></app-score>\\n\\n<ion-content>\\n\\n<ion-label color=\\\"dark\\\" *ngIf=\\\"gameHasBegun\\\"><strong>Complete the Pattern with the correct option</strong></ion-label>\\n\\n<img [src]=\\\"photoaddress + currentItem\\\" *ngIf=\\\"gameHasBegun\\\">  \\n\\n<div class=\\\"main\\\">\\n  <ion-button\\n    [disabled] = \\\"answer.disabled\\\"\\n    color = \\\"{{ answer.color }}\\\"\\n    (click) = \\\"pick(ind)\\\"\\n    size = \\\"small\\\"\\n    *ngFor = \\\"let answer of answerArray, index as ind\\\">\\n   {{ answer.value }}\\n  </ion-button>\\n</div>\\n\\n<div class=\\\"submit\\\">\\n  <ion-button\\n    *ngIf = \\\"picked\\\"\\n    class=\\\"main\\\"\\n    color=\\\"warning\\\"\\n    expand = \\\"block\\\"\\n    (click)=\\\"checker()\\\">\\n    Submit  \\n <ion-icon \\n    name=\\\"enter-outline\\\"\\n    size=\\\"large\\\">\\n</ion-icon>\\n</ion-button>\\n</div>\\n\\n</ion-content>\\n\\n<ion-footer>\\n    <app-menu [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-menu>\\n    <app-start [(gameHasBegun)]=\\\"gameHasBegun\\\" [(gameno)]=\\\"gameno\\\"></app-start>\\n  </ion-footer>\\n\";"]}