{"version":3,"sources":["./src/app/games-list/card-span/card-span-routing.module.ts","./src/app/games-list/card-span/card-span.module.ts","./src/app/games-list/card-span/card-span.page.ts","./src/app/games-list/card-span/card-span.service.ts","./src/app/games-list/card-span/card.model.ts","./src/app/games-list/card-span/card-span.page.scss","./src/app/games-list/card-span/card-span.page.html"],"names":[],"mappings":"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","file":"default-src_app_games-list_card-span_card-span_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CardSpanPage } from './card-span.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CardSpanPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CardSpanPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CardSpanPageRoutingModule } from './card-span-routing.module';\n\nimport { CardSpanPage } from './card-span.page';\nimport { CardSpanService } from './card-span.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HttpClientModule,\n    CardSpanPageRoutingModule,\n    SharedModule,\n    \n  ],\n  declarations: [CardSpanPage],\n  providers: [CardSpanService],\n  exports: [CardSpanPage],\n})\nexport class CardSpanPageModule {}\n","import { Component, OnInit, ViewChild, ElementRef, Input, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CardSpanService } from './card-span.service';\nimport { AlertController, AnimationController } from '@ionic/angular';\nimport { Card } from './card.model';\nimport { EventemitterService } from '../../shared/eventemitter.service';\nimport { trigger, style, state, animate, transition } from '@angular/animations';\nimport { Subscription } from 'rxjs';\nimport { GameService } from '../../shared/game.service';\n\n@Component({\n  selector: 'app-card-span',\n  templateUrl: './card-span.page.html',\n  styleUrls: ['./card-span.page.scss'],\n  animations: [\n    trigger('cardFade', [\n      state('bright', style({opacity: 1})),\n      transition('* => faded', [animate(900)]),\n      transition('* => bright', [animate(500)]),\n      state('faded', style({opacity: 0}))\n    ])\n  ]\n})\nexport class CardSpanPage implements OnInit, OnDestroy {\n@ViewChild('currentNumber', { read: ElementRef, static: true}) currentCardView: ElementRef;\n@Input('excerciseSet') excerciseMode = false;\n@Input('levels') levels;\nopacity: string;\ngamename: string;\ngameHasBegun = false;\ncardsRemembered: number = 0;\ncardRoute: string;\ncorrect: boolean = false;\nwrong: boolean = false;\nformIsHidden: boolean = true;\nformSuites: string[] = [\"club\", \"heart\", \"diamond\", \"spade\"]\nselectedCard: string;\ncardsArray: Card[];\nsuiteIsSelected = false;\ncurrentCard: number;\nanswerCards: Card[] = [];\ncardCount: number = 0;\nlost: boolean = false;\nchipsAreDisabled = false\nsubmitIsTrue = false\ncardCountIsHidden = false;\ngameno = 2;\nstartButtonIsDisabled = false;\nisFaded: string = 'faded';\nsubscription = new Subscription();\ncardSubscription = new Subscription();\ndatabase = new Subscription();\n\n  constructor(\n    private router: Router, \n    private cardService: CardSpanService,\n    private animationCtrl: AnimationController,\n    private eventemitter: EventemitterService,\n    private alertCtrl: AlertController,\n    private gameService: GameService\n    // private renderer: Renderer2\n  ) { }\n\n  ngOnInit() {\n\n    // gets a pre-existing level and score if it exists from the database\n    let levelscore = this.gameService.getLevelScore(this.gameno,this.excerciseMode)\n    this.gameService.getLevelScore(this.gameno, this.excerciseMode)\n    this.database = this.eventemitter.databaseemitter.subscribe(value => {\n      if (value.level) {\n        this.cardService.level = value.level\n      }\n      if (value.score) {\n        this.cardService.score = value.score\n      }\n    })\n\n    // gets the call to animate from the service\n    this.eventemitter.animate.subscribe(value => {\n      if (value === 'brighten') {\n        // this.brighten()\n        // setTimeout(() => {\n          // this.isFaded = 'bright'\n          // console.log('bright') \n          setTimeout(() => {\n            this.brighten()  \n          }, 100)   \n    \n        // }, 150)\n      }\n      if (value === 'fade') {\n        setTimeout(() => {\n          this.fade()\n        }, 1000)\n      }\n    })\n\n    // gets the call to shift to the selecting screen from the service\n    this.eventemitter.form.subscribe(value => {\n      if (value === 'disappear') {\n        this.formIsHidden = true\n      }\n      if (value === 'reappear') {\n        this.formIsHidden = false\n        this.gameService.startTimer()\n        this.wrong = false\n        this.correct = false\n      }\n    })\n\n    // gets the current card type from the service for example queen of spades\n    this.cardSubscription = this.eventemitter.CurrentCardRoute.subscribe(value => {\n      console.log(value)\n      this.cardRoute = value \n      setTimeout(() => {\n        this.fade() \n      }, 300)  \n      setTimeout(() => {\n        this.brighten()\n      }, 1000)\n    })\n\n    // gets the different game function calls like start, end game, restart, resume, quit\n    this.subscription = this.eventemitter.gameStateSubj.subscribe(value => {\n      console.log(value)\n      switch (value) {\n        case 'start': \n          this.onStart()\n          break\n        case 'restart':\n          this.startButtonIsDisabled = true\n          this.onEndGame()\n          setTimeout(() => {\n            this.onRestart()\n          }, 700)\n          break\n        case 'resume':\n          this.onResume()\n          break\n        case 'quit':\n          this.onQuit()\n          break\n        case 'pause':\n          this.onPause()\n          break\n        case 'stop':\n          this.onEndGame()\n          break\n      }\n    })\n\n    // sets level if it is in excerciseMode (meaning it is part of excercise set)\n    if (this.excerciseMode) {\n      this.cardService.level = this.levels[0]\n      this.cardService.score = 0\n    }\n  }\n\n  // goes back to home screen\n  onQuit() {\n    this.gameHasBegun = false;\n    this.router.navigate(['/home']);\n  }\n\n  // starts the game with the popup\n  onStart() {\n    console.log(\"cardspanstart\")\n    this.alertCtrl.create({\n      header: 'Level: ' + this.getLevelandScore()[0],\n      message: 'You need ' + (this.gameService.scoringconstant - this.getLevelandScore()[1]) + ' points to go to the next level',\n      buttons: [{\n        text: 'Continue',\n        role: 'Continue',\n        handler: () => {\n          this.gameHasBegun = true\n          this.cardService.generateCards()\n          this.lost = false;\n          this.cardsRemembered = 0;\n          this.cardCountIsHidden = false\n      }}]}).then(alert=> alert.present())\n  }\n\n  // fade animation\n  fade() {\n    // this.opacity = 'fade'\n    this.isFaded = 'bright'\n    // console.log('bright')\n    // const fade = this.animationCtrl.create()\n    // .addElement(this.currentCardView.nativeElement)\n    // .duration(500)\n    // .iterations(1)\n    // .fromTo('opacity', '1', '0');\n\n    // fade.play()\n  }\n\n  // brighten animation\n  brighten() {\n    this.isFaded = 'faded'\n    // console.log('faded')\n    // this.opacity = 'bright'\n    // const brighten = this.animationCtrl.create()\n    // .addElement(this.currentCardView.nativeElement)\n    // .duration(900)\n    // .iterations(1)\n    // .fromTo('opacity', '0', '1');\n    // brighten.play()\n  }\n\n  // pauses game\n  onPause() {\n    this.cardService.onPause()\n    this.gameService.pauseTimer()\n  }\n\n  //resumes game\n  onResume() {\n    this.cardService.onResume(this.formIsHidden)\n    this.gameService.startTimer()\n  }\n\n  // when someone selects a suite then it opens up the options for the suite\n  onSelectCard(suite) {\n    this.selectedCard = suite\n    this.suiteIsSelected = true\n    this.cardsArray = this.cardService.getCards(suite)\n  }\n\n  // when submit is clicked, then the suite near the middle of the screen is reset for the end of the next game\n  onResetSuite() {\n    this.selectedCard = ''\n    this.suiteIsSelected = false\n  }\n\n  // legacy code\n  // checkIfRow(index, number) {\n  //   if (index > number) {\n  //     return false\n  //   } else {\n  //     return true\n  //   }\n  // }\n\n  // what happens when restart button is clicked\n  onRestart() {\n    setTimeout(() => {\n      this.onStart()\n      this.startButtonIsDisabled = false\n    }, 300)\n\n  }\n\n  // when the a card is clicked then it is added to the picked cards area\n  onChipClicked(suite: string, name: string, imgURL: string) {\n    if (this.cardService.ChipsSubmit(this.cardCount) === \"cardCount\") {\n      this.answerCards.push(new Card(imgURL, name, suite))\n      this.cardCount++\n      this.cardCountIsHidden = true\n    }\n    if (!this.cardService.ChipsSubmit(this.cardCount)) {\n      this.answerCards.push(new Card(imgURL, name, suite))\n      this.cardCount++\n    } \n  }\n\n  // when the submit button is clicked then the data is stored in the data base and the score and excercise mode is checked and based on that the level is increased\n  // it also starts a new round\n  onSubmit() {\n    this.cardRoute = ''\n    let timer = this.gameService.clearTimer()\n    console.log(timer)\n    let formCorrect = this.cardService.submitAnswer(this.answerCards, this.cardCount)\n    if (this.excerciseMode !== true) {\n      this.gameService.storeLevelScore(this.gameno, this.cardService.score, this.cardService.level, this.excerciseMode, timer/1000, formCorrect.wrongs, formCorrect.prevscore, formCorrect.prevlevel)\n    }\n    else {\n      this.cardService.level++\n    }\n      this.answerCards = [] \n      this.cardCount = 0\n      this.cardsRemembered++\n      this.cardCountIsHidden = false\n      let scoreneeded;\n      if (this.excerciseMode === true) {\n        scoreneeded = null\n        if (this.cardService.level > this.levels[1]) {\n          this.eventemitter.onRoundFinished({continue: true, score: this.cardService.score})\n        }\n      } else {\n        scoreneeded = this.gameService.scoringconstant - this.cardService.getLevelandScore()[1]\n      }\n      this.alertCtrl.create({\n        header: 'Level: ' + this.getLevelandScore()[0],\n        message: this.cardService.alertmessage + '\\n' + 'You need ' + scoreneeded + ' points to go to the next level',\n        buttons: [{\n          text: 'Continue',\n          role: 'Continue',\n          handler: () => {\n            this.cardService.generateCards()\n        }}]}).then(alert=> alert.present())\n      // this.correct = true\n  }\n\n  // onPopup() {\n  //   this.onPause()\n  //   let scoreneeded = 200 - this.cardService.getLevelandScore()[1]\n  //   this.alertCtrl.create({\n  //     header: 'Level: ' + this.getLevelandScore()[0],\n  //     message: 'You need ' + scoreneeded + ' points to go to the next level',\n  //     buttons: [{\n  //       text: 'Continue',\n  //       role: 'Continue',\n  //       handler: () => {\n  //         this.onResume()\n  //     }}]}).then(alert=> alert.present())\n  // }\n\n  // the game is ended when the person returns to the home screen\n  onEndGame() {\n    this.cardService.endGame()\n    setTimeout(() => {\n      this.answerCards = []\n      this.cardCount = 0\n      this.formIsHidden = true\n      this.gameHasBegun = false\n      this.correct = false\n      this.wrong = false\n      this.suiteIsSelected = false\n      this.cardRoute = null\n      this.onResetSuite()\n    }, 500)\n\n  }\n\n  // returns the color class based on the suite input for the chips\n  getColor(suite: string) {\n    if (suite === 'club' || suite === 'spade') {\n      return 'dark'\n    }\n    if (suite === 'diamond' || suite === 'heart') {\n      return 'danger'\n    }\n  }\n\n  // when a chip is clicked in the picked chips section then it is deleted from the array\n  onDeleteItem(index) {\n    this.answerCards.splice(index, 1)\n    this.cardCount--\n    if (this.cardService.ChipsSubmit(this.cardCount) === \"cardCount\") {\n      this.submitIsTrue = false\n      this.cardCountIsHidden = false\n    }\n  }\n\n  // if the number of chips is right then the submit button is enabled or disabled\n  submitButton() {\n    if (!this.cardService.ChipsSubmit(this.cardCount) || this.cardService.ChipsSubmit(this.cardCount) === \"cardCount\") {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  getI() {\n    return this.cardService.i\n  }\n  // unsubscribes from subscriptions when the component is destroyed\n  ngOnDestroy() {\n    this.subscription.unsubscribe()\n    this.cardSubscription.unsubscribe()\n    // console.log(\"unsubscribed\")\n    // this.cardSubscription.unsubscribe()\n    // this.eventemitter.form.unsubscribe()\n    // this.eventemitter.animate.unsubscribe()\n    // this.eventemitter.CurrentCardRoute.unsubscribe()\n  }\n\n    // unsubscribes from subscriptions when the component is left \n  ionViewDidLeave() {\n    this.subscription.unsubscribe()\n    console.log(\"unsubscribed\")\n    this.cardSubscription.unsubscribe()\n  }\n\n  // gets the level and score from the service \n  getLevelandScore() {\n    return this.cardService.getLevelandScore()\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Card } from './card.model';\nimport { EventemitterService } from '../../shared/eventemitter.service';\nimport { GameService } from '../../shared/game.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardSpanService {\n  cardRoute: string = \"../../assets/cards\";\n  currentCard: string;\n  cardsArrayAnswers: Card[] = [];\n  cardsArrayDisplayed: string[] = []\n  level: number = 1;\n  score: number = 0\n  paused: boolean = false;\n  cards: string[] = [\"A\", \"K\", \"Q\", \"J\", \"10\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"];\n  pausedi: number;\n  i: number;\n  alertmessage: string;\n  \"♦️\"\n\n\n  constructor(\n    private eventemitter: EventemitterService,\n    private gameService: GameService) { }\n\n  // creates a random card and returns it\n  getRandomCard() {\n    let randomSuite = Math.floor(Math.random() * 3)\n    let randomNumber = Math.floor(Math.random() * 12)\n    let cardSuite: string;\n    let cardNumber: string;\n    switch (randomSuite) {\n      case 0:\n        cardSuite = \"club\"\n        break\n      case 1:\n        cardSuite = \"diamond\"\n        break\n      case 2: \n        cardSuite = \"heart\"\n        break\n      case 3:\n        cardSuite = \"spade\"\n        break\n    }\n    switch (randomNumber) {\n      case 0:\n        cardNumber = \"A\"\n        break\n      default:\n        cardNumber = JSON.stringify(randomNumber + 1)\n        break\n      case 10:\n        cardNumber = \"J\"\n        break\n      case 11: \n        cardNumber = \"Q\"\n        break\n      case 12:\n        cardNumber = \"K\"\n        break\n    }\n    let cardFinalRoute = this.cardRoute + '/' + cardSuite + '/' + cardNumber + '.jpg'\n    this.cardsArrayAnswers.push(new Card('/' + cardSuite + '.png', cardNumber, cardSuite))\n    this.cardsArrayDisplayed.push(cardFinalRoute)\n  }\n\n  // starts the timer and clears the previous array\n  generateCards() {\n    this.clearCards()\n    for (let i = 0; i < this.level + 2; i++) {\n      this.getRandomCard()\n      if (this.cardsArrayDisplayed[i] === this.cardsArrayDisplayed[i - 1]) {\n        this.cardsArrayAnswers.splice(i)\n        this.cardsArrayDisplayed.splice(i)\n        i--\n      }\n    }\n    this.i = 0\n    this.runSeries()\n  }\n\n  // starts the series which generates random cards on an interval and tells the component when to animate and when the length is done then it stops\n  runSeries() {\n    this.eventemitter.onForm('disappear')  \n    if (this.paused !== true) {\n      if (this.i <= this.level + 1) {\n        this.eventemitter.onCurrentCardRoute(this.cardsArrayDisplayed[this.i]) \n          // this.eventemitter.onAnimate('brighten') \n          // this.eventemitter.onAnimate('fade')  \n          setTimeout(() => {\n            if (this.i <= this.level) {\n              this.i++  \n              this.runSeries()  \n            } else {\n              setTimeout(() => {\n                this.eventemitter.onAnimate('fade')\n                this.eventemitter.onForm('reappear')\n              }, 600)\n            }\n          }, 2000)\n      } \n      // else {\n\n      // }\n    }\n  }\n\n  // formats the card data and gives it to the component\n  getCards(suite) {\n    let cardsArray: Card[] = []\n    for (let card of this.cards) {\n      cardsArray.push(new Card( '/' + suite + '.png', card, suite))\n    }\n    return cardsArray\n  }\n\n  // deals with level and score when submit is clicked\n  submitAnswer(cardsArray: Card[], cardCount) {\n    if (this.level + 2 === cardCount) {\n      let wrongs = 0\n      let prevscore = this.score\n      let prevlevel = this.level\n      for (let i = 0; i < this.cardsArrayAnswers.length; i++) {\n        if (this.cardsArrayAnswers[i].name !== cardsArray[i].name || this.cardsArrayAnswers[i].suite !== cardsArray[i].suite) {\n          console.log(this.cardsArrayAnswers[i], cardsArray[i])    \n          wrongs++   \n        } \n      }\n      let currentscore = this.gameService.getScore(this.cardsArrayAnswers.length, wrongs)\n      this.score = this.score + currentscore\n      if (this.score >= this.gameService.scoringconstant) {\n        this.level++\n        this.score = 0\n      }\n      if (wrongs === 0) {\n        this.alertmessage = \"Correct!\"\n      }\n      else {\n        let alertstring = '';\n        for (let item of this.cardsArrayAnswers) {\n          let suite = ''\n          switch (item.suite) {\n            case \"club\":\n              suite = \"♣️\"\n              break\n            case \"diamond\":\n              suite = \"♦️\"\n              break\n            case \"spade\":\n              suite = \"♠️\"\n              break\n            case \"heart\":\n              suite = \"♥️\"\n              break\n          }\n          alertstring = alertstring + \" \" + suite + item.name + \",\"\n        }\n        this.alertmessage = \"The correct answers were:\" + alertstring + \".\"\n      }\n      return {beginNewRound: true, wrongs: wrongs, prevscore: currentscore, prevlevel: prevlevel}\n  }\n}\n\n// deals with submit button being disabled and length of the card count\nChipsSubmit(cardCount) {\n  if (cardCount === this.level+ 2) {\n    return true\n  }\n  if (cardCount === this.level + 1){\n    return 'cardCount'\n  } \n}\n\n// clears the cards array\nclearCards() {\n  this.cardsArrayAnswers = []\n  this.cardsArrayDisplayed = []\n}\n\n\nendGame() {\n  this.level = 1\n  this.clearCards() \n  this.currentCard = ''\n}\n\n// pauses the game\nonPause() {\n  this.paused = true\n}\n\n// resumes the game after a pause\nonResume(formIsHidden: boolean) {\n  this.paused = false\n  if (formIsHidden === true) {\n    this.runSeries()\n  }\n\n}\n\n// passes level and score to the component\ngetLevelandScore() {\n  return [this.level, this.score]\n}\n\n}","export class Card {\n    public imgURL: string;\n    public name: string;\n    public suite: string;\n    constructor(imgURL: string, name: string, suite: string) {\n        this.imgURL = imgURL;\n        this.name = name;\n        this.suite = suite;\n    }\n}","export default \".card {\\n  font-family: \\\"Times New Roman\\\", Times, serif;\\n  font-size: large;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcmQtc3Bhbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0JBO0VBQ0ksNENBQUE7RUFDQSxnQkFBQTtBQXJCSiIsImZpbGUiOiJjYXJkLXNwYW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gLmNsdWIge1xuLy8gICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xuLy8gICAgIGZvbnQtc2l6ZTogbGFyZ2U7XG4vLyB9XG5cbi8vIC5kaWFtb25kIHtcbi8vICAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcbi8vICAgICBmb250LXNpemU6IGxhcmdlO1xuLy8gICAgIGNvbG9yOiByZWQ7XG4vLyB9XG5cbi8vIC5oZWFydCB7XG4vLyAgICAgZm9udC1mYW1pbHk6ICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XG4vLyAgICAgZm9udC1zaXplOiBsYXJnZTtcbi8vICAgICBjb2xvcjogcmVkO1xuLy8gfVxuXG4vLyAuc3BhZGUge1xuLy8gICAgIGZvbnQtZmFtaWx5OiAnVGltZXMgTmV3IFJvbWFuJywgVGltZXMsIHNlcmlmO1xuLy8gICAgIGZvbnQtc2l6ZTogbGFyZ2U7XG4vLyB9XG5cbi5jYXJkIHtcbiAgICBmb250LWZhbWlseTogJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcbiAgICBmb250LXNpemU6IGxhcmdlO1xufVxuXG4vLyAuYnJpZ2h0IHtcbi8vICAgICBhbmltYXRpb24tbmFtZTogYnJpZ2h0ZW47XG4vLyAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiA5MDBtcztcbi8vIH1cblxuLy8gLmZhZGUge1xuLy8gICAgIGFuaW1hdGlvbi1uYW1lOiBmYWRlO1xuLy8gICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4vLyB9XG5cbi8vIEBrZXlmcmFtZXMgYnJpZ2h0ZW4ge1xuLy8gICAgIGZyb20ge1xuLy8gICAgICAgICBvcGFjaXR5OiAwO1xuLy8gICAgIH1cblxuLy8gICAgIHRvIHtcbi8vICAgICAgICAgb3BhY2l0eTogMTtcbi8vICAgICB9IFxuLy8gfVxuXG4vLyBAa2V5ZnJhbWVzIGZhZGUge1xuLy8gICAgIGZyb20ge1xuLy8gICAgICAgICBvcGFjaXR5OiAxO1xuLy8gICAgIH1cblxuLy8gICAgIHRvIHtcbi8vICAgICAgICAgb3BhY2l0eTogMDtcbi8vICAgICB9XG4vLyB9XG4iXX0= */\";","export default \"<app-header [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-header>\\n\\n<app-description [(gameHasBegun)]=\\\"gameHasBegun\\\" [(gameno)]=\\\"gameno\\\"></app-description>\\n\\n<app-score *ngIf=\\\"gameHasBegun\\\" [(level)]=\\\"getLevelandScore()[0]\\\" [(score)]=\\\"getLevelandScore()[1]\\\"></app-score>\\n\\n<ion-content *ngIf=\\\"!gameHasBegun && !excerciseMode\\\"></ion-content>\\n\\n<!-- This game is mostly complete but the menu functions need to be tested and figured out. -->\\n\\n<!-- the game itself -->\\n<ion-content *ngIf=\\\"gameHasBegun\\\">\\n\\n    <!-- <ion-item color=\\\"danger\\\" *ngIf=\\\"wrong\\\">\\n      <ion-label class=\\\"ion-text-center\\\">Incorrect Answer!</ion-label>\\n    </ion-item> -->\\n    <!-- <ion-item color=\\\"dark\\\" *ngIf=\\\"correct\\\" >\\n      <ion-label class=\\\"ion-text-center\\\" >Good Job! Correct Answer!</ion-label>\\n    </ion-item> -->\\n\\n    <!-- This part is the selecting screen of the game after the cards are displayed -->\\n    <ion-row *ngIf=\\\"!cardCountIsHidden\\\">\\n      <ion-col class=\\\"ion-text-center\\\">\\n        <ion-label>Card: {{ formIsHidden ? getI() + 1 : cardCount + 1 }}</ion-label>\\n      </ion-col>\\n    </ion-row>\\n  <ion-grid *ngIf=\\\"gameHasBegun && !formIsHidden\\\">\\n      <ion-row>\\n        <ion-col *ngFor=\\\"let suite of formSuites\\\" size-md=\\\"2\\\" offset-md=\\\"0.75\\\" offset-lg=\\\"1.5\\\" size-lg=\\\"1\\\">\\n          <ion-card button=\\\"true\\\" [disabled]=\\\"selectedCard === suite\\\" (click)=\\\"onSelectCard(suite)\\\" >\\n            <img [src]=\\\"'../../assets/cards/card-suites' + '/' + suite + '.png'\\\">            \\n          </ion-card>\\n        </ion-col>\\n      </ion-row>\\n    <div *ngIf=\\\"suiteIsSelected\\\">\\n        <ion-row class=\\\"ion-text-center\\\">\\n          <ion-col *ngFor=\\\"let card of cardsArray\\\"  size-md=\\\"2\\\" offset-md=\\\"0.75\\\">\\n            <div class=\\\"ion-text-center\\\">\\n              <ion-chip [color]=\\\"getColor(card.suite)\\\" outline style=\\\"background-color: white\\\" (click)=\\\"onChipClicked(card.suite, card.name, card.imgURL)\\\">\\n                <!-- <ion-avatar>\\n                  <img [src]=\\\"'../../assets/cards/card-suites/' + card.imgURL\\\"> >\\n                </ion-avatar> -->\\n                <div class=\\\"card\\\">\\n                  <ion-label>{{ card.name }}</ion-label>\\n                </div>                  \\n              </ion-chip>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n        <div class=\\\"ion-text-center\\\">\\n          <ion-row>\\n            <ion-col>\\n              <ion-label>Picked Cards (Click to delete):</ion-label>\\n            </ion-col>\\n          </ion-row>\\n        </div>\\n          <ion-row>\\n            <ion-col (click)=\\\"onDeleteItem(i)\\\" *ngFor=\\\"let card of answerCards; let i = index\\\" size=\\\"3\\\" size-md=\\\"2\\\" offset-md=\\\"0.75\\\">\\n              <ion-chip [color]=\\\"getColor(card.suite)\\\" outline style=\\\"background-color: white\\\">\\n                <ion-avatar>\\n                  <img [src]=\\\"'../../assets/cards/card-suites/' + card.imgURL\\\"> >\\n                </ion-avatar>\\n                <div class=\\\"card\\\">\\n                  <ion-label>{{ card.name }}</ion-label>\\n                </div> \\n                <!-- <ion-icon name=\\\"close-sharp\\\" ></ion-icon>                 -->\\n              </ion-chip>\\n            </ion-col>\\n          </ion-row>    \\n        <ion-row>\\n          <ion-col>\\n            <div class=\\\"ion-text-center\\\">\\n              <ion-button color=\\\"light\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"submitButton()\\\">Submit</ion-button>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n    </div>\\n  </ion-grid>\\n\\n  <!-- This part makes up the cards that are animated through angular animations -->\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col class=\\\"ion-text-center\\\" size=\\\"auto\\\" [class]=\\\"opacity\\\" #currentNumber [@cardFade]=\\\"isFaded\\\" offset=\\\"1\\\" size=\\\"10\\\" size-md=\\\"6\\\" size-lg=\\\"4\\\" >\\n        <div *ngIf=\\\"gameHasBegun && formIsHidden\\\">\\n          <ion-card>\\n            <img  width-md=\\\"480\\\" height-md=\\\"733.5\\\" [src]=\\\"cardRoute\\\">\\n          </ion-card>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\\n<!-- <ion-footer *ngIf=\\\"gameHasBegun\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Level: {{ getLevelandScore()[0] }}; Score: {{ getLevelandScore()[1] }} \\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\"><ion-button (click)=\\\"onPopup()\\\"></ion-button></ion-buttons>\\n    <ion-buttons>\\n      <ion-button (click)=\\\"onPopup()\\\"> </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer> -->\\n\\n<!-- Common element -->\\n<ion-footer>\\n  <app-menu [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-menu>\\n  <app-start [(gameHasBegun)]=\\\"gameHasBegun\\\" [(gameno)]=\\\"gameno\\\"></app-start>\\n</ion-footer>\\n\\n\\n\";"],"sourceRoot":"webpack:///"}