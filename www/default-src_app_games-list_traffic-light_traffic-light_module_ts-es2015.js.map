{"version":3,"sources":["./src/app/games-list/traffic-light/levels.ts","./src/app/games-list/traffic-light/traffic-light-routing.module.ts","./src/app/games-list/traffic-light/traffic-light.module.ts","./src/app/games-list/traffic-light/traffic-light.page.ts","./src/app/games-list/traffic-light/traffic-light.page.scss","./src/app/games-list/traffic-light/traffic-light.page.html"],"names":[],"mappings":"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","file":"default-src_app_games-list_traffic-light_traffic-light_module_ts-es2015.js","sourcesContent":["import { level } from '../stroop-game/level.model'\nimport {Level} from './level'\n\n// this contains the time, ratio of red to green to yellow, the interval between lights and the instructions for each level\n\nexport const Levels: Level[] = [\n    //level 1\n    {\n        instructions: \"Only click if blank appears!\",\n        ratio: [1, 1, 1],\n        interval: 2000,\n        totallength: 30000\n    },\n    //level 2\n    {\n        instructions: \"Only click if blank appears!\",\n        ratio: [5, 2, 2],\n        interval: 2000,\n        totallength: 30000\n    },\n    //level 3\n    {\n        instructions: \"Only click if blank appears!\",\n        ratio: [1, 1, 1],\n        interval: 1000,\n        totallength: 30000\n    },\n    //level 4\n    {\n        instructions: \"Only click if blank appears!\",\n        ratio: [5, 2, 2],\n        interval: 1000,\n        totallength: 30000\n    },\n    //level 5\n    {\n        instructions: \"Only click if blank appears!\",\n        ratio: [1, 1, 1],\n        interval: 2000,\n        totallength: 30000,\n        mode: \"double-up\"\n    },\n    //level 6\n    {\n        instructions: \"Only click if blank appears!\",\n        ratio: [5, 2, 2],\n        interval: 2000,\n        totallength: 30000,\n        mode: \"double-up\"\n    },\n    //level 7\n    {\n        instructions: \"Only click if blank appears!\",\n        ratio: [1, 1, 1],\n        interval: 1000,\n        totallength: 30000,\n        mode: \"double-up\"\n    },\n    //level 8\n    {\n        instructions: \"Only click if blank appears!\",\n        ratio: [5, 2, 2],\n        interval: 1000,\n        totallength: 30000,\n        mode: \"double-up\"\n    },\n    //level 9\n    {\n        instructions: \"Only click if blank appears!\",\n        ratio: [1, 1, 1],\n        interval: 500,\n        totallength: 30000,\n        mode: \"double-up\"\n    },\n    //level 10\n    {\n        instructions: \"Only click if blank appears!\",\n        ratio: [5, 2, 2],\n        interval: 500,\n        totallength: 30000,\n        mode: \"double-up\"\n    },\n]","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TrafficLightPage } from './traffic-light.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TrafficLightPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TrafficLightPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TrafficLightPageRoutingModule } from './traffic-light-routing.module';\n\nimport { TrafficLightPage } from './traffic-light.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TrafficLightPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [TrafficLightPage],\n  exports: [TrafficLightPage],\n})\nexport class TrafficLightPageModule {}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { EventemitterService } from '../../shared/eventemitter.service';\nimport { Levels } from './levels'\nimport { Level } from './level'\nimport { GameService } from 'src/app/shared/game.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-traffic-light',\n  templateUrl: './traffic-light.page.html',\n  styleUrls: ['./traffic-light.page.scss'],\n})\nexport class TrafficLightPage implements OnInit, OnDestroy {\n  gameno = 3\n  gameHasBegun = false\n  path = \"../../assets/traffic-light/\"\n  colors = ['Green', 'Yellow', 'Red']\n  isHidden = false\n  possibilities = []\n  timer = 0\n  current: string;\n  red = \"#BB1E10\"\n  yellow = \"#FAD201\"\n  green = \"#33A532\"\n  grey = \"#8E9291\"\n  currentRed = this.grey\n  currentYellow = this.grey\n  currentGreen = this.grey\n  clicked = false;\n  round = 1\n  interval = 3000\n  totallength = 120000\n  wrong = 0\n  correct = 0\n  subscription = new Subscription()\n  timerfunc;\n  level = 1;\n  score = 0;\n  colorneeded: any;\n  levels: Level[] = Levels\n  countdowntimer: any = 4\n  instructions = this.levels[this.level - 1].instructions\n  countdownTimerIsHidden: boolean = true;\n  possibilitiesnumber: number;\n  instructionsAreHidden: boolean = true\n  doubleupmode = false\n  possibilitiesall: String[];\n  index: number = 0;\n  database = new Subscription()\n  startButtonIsDisabled = false\n  @Input('excerciseSet') excerciseMode = false;\n  @Input('levels') exlevels;\n\n  constructor(\n    private eventemitter: EventemitterService,\n    private gameService: GameService,\n    private router: Router) { }\n\n  ngOnInit() {\n    // gets preexisting level and score data from database\n    this.gameService.getLevelScore(this.gameno, this.excerciseMode)\n    this.database = this.eventemitter.databaseemitter.subscribe(value => {\n      if(value.level) {\n        this.level = value.level\n      }\n      if (value.score) {\n        this.score = value.score\n      }\n    })\n\n    // controls the menu functions\n    this.subscription = this.eventemitter.gameStateSubj.subscribe(value => {\n      switch (value) {\n        case 'start':\n          this.onStart()\n          break\n        case 'restart':\n          this.startButtonIsDisabled = true\n          this.onEndGame()\n          setTimeout(() => {\n            this.onStart()\n            this.startButtonIsDisabled = false\n          }, 300)\n          break\n        case 'quit':\n          this.onEndGame()\n          this.router.navigate(['/home'])\n      }\n    })\n\n    // what to do if it is an exercise set\n    if (this.excerciseMode) {\n      this.level = this.exlevels[0]\n      this.score = 0\n    }\n\n  }\n\n  // ends the game\n  onEndGame() {\n    this.gameHasBegun = false\n    clearInterval(this.timerfunc)\n  }\n\n  // based on level, it determines the ratio of reds to greens to yellow\n  determineRatio() {\n    if (this.doubleupmode === true) {\n      let colors = this.colors.slice(0, this.colors.length);\n      console.log(colors)\n      this.colorneeded = [colors.splice(Math.round(Math.random()*(colors.length - 1)), 1)[0], colors.splice(Math.round(Math.random()*(colors.length - 1)), 1)[0]]\n      colors = this.colors\n      console.log(this.colorneeded)\n      switch (this.colorneeded.join(\" \")) {\n        case \"Green Yellow\":\n          return this.levels[this.level - 1].ratio\n          break\n        case \"Yellow Green\":\n          return this.levels[this.level - 1].ratio\n          break\n        case \"Green Red\":\n          return [this.levels[this.level - 1].ratio[2] , this.levels[this.level - 1].ratio[0], this.levels[this.level - 1].ratio[1]]\n          break\n        case \"Red Green\":\n          return [this.levels[this.level - 1].ratio[2] , this.levels[this.level - 1].ratio[0], this.levels[this.level - 1].ratio[1]]\n          break\n        case \"Red Yellow\":\n          return [this.levels[this.level - 1].ratio[1], this.levels[this.level - 1].ratio[2], this.levels[this.level - 1].ratio[0]]\n          break\n        case \"Yellow Red\":\n          return [this.levels[this.level - 1].ratio[1], this.levels[this.level - 1].ratio[2], this.levels[this.level - 1].ratio[0]]\n          break\n      }\n    } else {\n      this.colorneeded = this.colors[Math.round(Math.random()*(this.colors.length - 1))]\n      let dominantcolor = this.colorneeded\n      switch (dominantcolor) {\n        case \"Green\":\n          return this.levels[this.level - 1].ratio\n          break\n        case \"Yellow\":\n          return [this.levels[this.level - 1].ratio[2] , this.levels[this.level - 1].ratio[0], this.levels[this.level - 1].ratio[1]]\n          break\n        case \"Red\":\n          return [this.levels[this.level - 1].ratio[1], this.levels[this.level - 1].ratio[2], this.levels[this.level - 1].ratio[0]]\n          break\n      }\n    }\n\n  }\n\n  // creates the random array of colors\n  generateColors() {\n    let ratios = this.determineRatio()\n    console.log(this.colorneeded, ratios)\n    let greenratio = ratios[0]\n    let yellowratio = ratios[1]\n    let redratio = ratios[2]\n    let totalratio: number = greenratio + yellowratio + redratio\n    let possibilitiesarr = []\n    let possibilities: number = Math.ceil(this.totallength/this.interval)\n    if (this.doubleupmode) {\n      possibilities = Math.ceil(this.totallength/(2*this.interval))\n    }\n    console.log(possibilities)\n    let length = possibilities\n    this.possibilitiesnumber = possibilities\n    //gets total number of reds yellows and greens    \n    let yellowpossibilities = Math.floor(possibilities*(yellowratio/totalratio))\n    let greenpossibilities = Math.floor(possibilities*(greenratio/totalratio))\n    let redpossibilities = Math.floor(possibilities*(redratio/totalratio))\n    //randomly assigns leftovers to red green or yellow\n    let leftovers = possibilities - (yellowpossibilities + greenpossibilities + redpossibilities) \n    if (leftovers > 0) {\n      for (let i = 0; i < leftovers; i++) {\n        let randnum = Math.round(Math.random()*2)\n        switch (randnum) {\n          case 0:\n            greenpossibilities++\n            break\n          case 1:\n            yellowpossibilities++\n            break\n          case 2: \n            redpossibilities++\n        }\n      }\n    }\n    console.log(yellowpossibilities, greenpossibilities, redpossibilities)\n    let greenyellow;\n    let greenred;\n    let redyellow;\n    if (this.doubleupmode === true) {\n      greenyellow = Math.round(greenpossibilities/2)\n      greenred = Math.round(yellowpossibilities/2)\n      redyellow = Math.round(redpossibilities/2)\n    }\n    //randomly asigns red, green and yellow to different positions in an array\n    for (let i = 0; i < length; i++) {\n      let current: any = \"\"\n      let randnum = Math.round(Math.random()*(possibilities-1))\n      if (randnum < greenpossibilities) {\n        if (this.doubleupmode === true) {\n          let randnum = Math.round(Math.random()*greenpossibilities) + 1\n          if (randnum > greenyellow) {\n            current = [\"Yellow\", \"Green\"]\n          } else {\n            current = [\"Green\", \"Yellow\"]\n            greenyellow--\n          }\n        } else {\n          current = \"Green\"\n        }\n        greenpossibilities--\n      } else if (randnum < yellowpossibilities + greenpossibilities) {\n        if (this.doubleupmode === true) {\n          let randnum = Math.round(Math.random()*greenpossibilities) + 1\n          if (randnum > greenred) {\n            current = [\"Red\", \"Green\"]\n          } else {\n            current = [\"Green\", \"Red\"]\n            greenred--\n          }\n        } else {\n          current = \"Yellow\"\n        }\n        yellowpossibilities--\n      } else if (randnum < possibilities) {\n        if (this.doubleupmode === true) {\n          let randnum = Math.round(Math.random()*greenpossibilities)\n          if (randnum > redyellow) {\n            current = [\"Red\", \"Yellow\"]\n          } else {\n            current = [\"Yellow\", \"Red\"]\n            redyellow--\n          }\n        } else {\n        current = \"Red\"\n        }\n        redpossibilities--\n      }\n      possibilities--\n      if (this.doubleupmode) {\n        for (let item of current) {\n          possibilitiesarr.push(item)\n        }\n        this.possibilitiesall = possibilitiesarr.slice(0, possibilitiesarr.length)\n      } else {\n        possibilitiesarr.push(current)\n      }      \n    }\n    console.log(possibilitiesarr)\n    this.possibilities = possibilitiesarr\n  }\n\n  // creates a random color\n  getRandomColor() {\n    console.log(this.possibilities)\n    this.index++\n    this.current = this.possibilities.splice(0, 1)[0]\n\n    switch (this.current) {\n      case 'Green' :\n        this.currentGreen = this.green\n        break\n      case 'Yellow':\n        this.currentYellow = this.yellow\n        break\n      case 'Red': \n        this.currentRed = this.red\n        break\n    }\n\n  }\n\n  // starts the game and controls the intervals that lights are displayed\n  onStart() {\n    if (this.levels[this.level - 1].mode === \"double-up\") {\n      this.doubleupmode = true\n\n    } else {\n      this.doubleupmode = false\n    }\n    this.interval = this.levels[this.level - 1].interval\n    this.totallength = this.levels[this.level - 1].totallength\n    this.generateColors() \n    this.gameHasBegun = true\n    this.countdownTimerIsHidden = false\n    this.instructionsAreHidden = false\n    let countdown = setInterval(() => {\n      if (this.instructionsAreHidden === false) {\n        this.instructionsAreHidden = true\n      }\n      this.countdowntimer--\n      if (this.countdowntimer === 0) {\n        this.countdowntimer = \"Go!\"\n      }\n    }, 1000)\n    setTimeout(() => {\n      clearInterval(countdown)\n      this.countdownTimerIsHidden = true\n\n      this.timerfunc = setInterval(() => {\n        this.timer = this.timer + this.interval\n        console.log(this.timer)\n        if (this.timer > this.totallength) {\n          clearInterval(this.timerfunc)\n          console.log(this.correct, this.wrong)\n          this.endRound()\n        }\n        this.getRandomColor()\n        setTimeout(() => {\n          this.resetMatch()\n        },this.interval/2)\n      }, this.interval)\n    }, 4900)\n\n  }\n\n  // checks if the light is clicked when its supposed to or is clicked when its not suppossed to be clicked and records that\n  checkIfClicked() {\n    if (this.clicked === false) {\n      if (this.doubleupmode === true) {\n        let array = [this.possibilitiesall[this.index - 2], this.current]\n        console.log(array, this.colorneeded)\n        if (array[0] === this.colorneeded[0] && array[1] === this.colorneeded[1]) {\n          console.log('incorrect, not clicked')\n          this.wrong++\n        }\n      } else {\n        if (this.current === this.colorneeded) {\n          console.log('incorrect, not clicked')\n          this.wrong++\n        }\n      }\n    }\n  }\n\n  // ends the round and figures out the score and the levels\n  endRound() {\n    //score and levels here\n    this.index = 0\n    this.timer = 0\n    this.countdowntimer = 4\n    let currentscore = this.gameService.getScore(this.possibilitiesnumber, Math.round(this.wrong*1.5))\n    this.score = this.score + currentscore\n    if (this.excerciseMode) {\n\n      if (this.level === this.exlevels[1]) {\n        this.eventemitter.onRoundFinished({continue: true, score: this.score})\n      }\n      this.level++\n    } else {\n\n\n      let prevlevel = [this.level].slice(0,1)\n      console.log(this.score)\n      if (this.score > this.gameService.scoringconstant) {\n        this.level++\n        this.score = 0\n      }\n      this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseMode, 120, this.wrong, currentscore, prevlevel[0])\n    }\n    this.onStart()\n  }\n\n  // resets the game to begin the next round\n  resetMatch() {\n    this.round++\n    console.log(this.round)\n    this.checkIfClicked()\n    this.current = \"\"\n    this.resetColor()\n    this.clicked = false\n  }\n\n  // turns all colors back to grey\n  resetColor() {\n    this.currentGreen = this.grey\n    this.currentRed = this.grey\n    this.currentYellow = this.grey\n  }\n\n  // what happens when something is clicked\n  onTap(color: string) {\n    if (this.clicked === false) {\n    if (this.doubleupmode === true) {\n      switch (color) {\n        case this.colorneeded[1]:\n          if (color === this.current) {\n            let previous = this.possibilitiesall[this.index - 2]\n            if (previous === this.colorneeded[0]) {\n              this.correct++\n              console.log('correct')\n            } else {\n              this.wrong++\n            }\n          } else {\n            this.wrong++\n          }\n          break\n        case \"\":\n          console.log('greyclicked')\n          break\n        default:\n          console.log('incorrect', this.current)\n          this.wrong++\n      }\n    } else {\n      switch (color) {\n        case this.colorneeded:\n          if (color === this.current) {\n            console.log('correct')\n            this.correct++\n          } else {\n            this.wrong++\n          }\n          this.current = \"\"\n          break\n        case \"\":\n          console.log('greyclicked')\n          break\n        default:\n          console.log('incorrect', this.current)\n          this.wrong++\n      }\n    }\n    this.resetColor()\n    }\n    this.clicked = true\n  }\n\n  // unsubscribes and clears the timer when the component is left\n  ionViewDidLeave() {\n    this.subscription.unsubscribe()\n    clearInterval(this.timerfunc)\n  }\n\n  // unsubscribes and clears the timer when the component is destroyed\n  ngOnDestroy() {\n    this.subscription.unsubscribe()\n    clearInterval(this.timerfunc)\n  }\n}\n","export default \".image {\\n  size: 10px;\\n}\\n\\n.round {\\n  width: 100px;\\n  height: 100px;\\n  border-radius: 50%;\\n}\\n\\n.text-large {\\n  font-weight: bold;\\n  font-size: 1.5in;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYWZmaWMtbGlnaHQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7RUFDQSxnQkFBQTtBQUNKIiwiZmlsZSI6InRyYWZmaWMtbGlnaHQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmltYWdlIHtcbiAgICBzaXplOiAxMHB4O1xufVxuXG4ucm91bmQge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgfVxuXG4udGV4dC1sYXJnZSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiAxLjVpbjtcbn0iXX0= */\";","export default \"<app-header [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-header>\\n\\n<app-description [(gameHasBegun)]=\\\"gameHasBegun\\\" [(gameno)]=\\\"gameno\\\"></app-description>\\n\\n\\n<!--  the instructions that are shown at the top during the game-->\\n<div class=\\\"ion-text-center\\\" *ngIf=\\\"gameHasBegun && countdownTimerIsHidden\\\">\\n  <ion-label >{{ doubleupmode ? instructions.replace(\\\"blank\\\", colorneeded[0] + \\\" then \\\" + colorneeded[1]) : instructions.replace(\\\"blank\\\", colorneeded) }}</ion-label>\\n</div>\\n\\n<!-- blank ion content needed so UI doesn't get messed up -->\\n<ion-content *ngIf=\\\"!gameHasBegun && !excerciseMode\\\"></ion-content>\\n\\n<!--  instructions and timer that are shown at the start -->\\n<ion-content *ngIf=\\\"!countdownTimerIsHidden && gameHasBegun\\\" scroll-Y=\\\"disabled\\\">\\n  <ion-grid >\\n    <ion-row *ngIf=\\\"!instructionsAreHidden\\\">\\n      <ion-col class=\\\"ion-text-center\\\">\\n        <ion-label style=\\\"font-weight: bold; font-size: 0.5in\\\">{{ doubleupmode ? instructions.replace(\\\"blank\\\", colorneeded[0] + \\\" then \\\" + colorneeded[1]) : instructions.replace(\\\"blank\\\", colorneeded) }}</ion-label>\\n      </ion-col>\\n    </ion-row>\\n    <div style=\\\"display: flex; align-items: center; justify-content: center;\\\" *ngIf=\\\"instructionsAreHidden\\\">\\n      <ion-label class=\\\"text-large\\\">{{ countdowntimer }}</ion-label>\\n    </div>\\n  </ion-grid>\\n\\n</ion-content>\\n\\n<app-score *ngIf=\\\"gameHasBegun && countdownTimerIsHidden\\\" [(level)]=\\\"level\\\" [(score)]=\\\"score\\\"></app-score>\\n\\n<ion-content *ngIf=\\\"gameHasBegun && countdownTimerIsHidden\\\" scroll-Y=\\\"disabled\\\">\\n\\n<!-- The menu functions and testing is required -->\\n\\n  <!-- the traffic light itself -->\\n<ion-grid>\\n  <div style=\\\"display: flex; align-items: top; justify-content: center;\\\">\\n    <ion-card class=\\\"ion-text-center\\\" [ngStyle]=\\\"{'width': '150px'}\\\">\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-center\\\">\\n            <ion-chip (click)=\\\"onTap('Red')\\\" class=\\\"round\\\" size=\\\"medium\\\" [ngStyle]=\\\"{'background-color': currentRed}\\\"></ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-center\\\">\\n            <ion-chip (click)=\\\"onTap('Yellow')\\\" class=\\\"round\\\" size=\\\"medium\\\" [ngStyle]=\\\"{'background-color': currentYellow}\\\"></ion-chip>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-center\\\">\\n            <ion-chip (click)=\\\"onTap('Green')\\\" class=\\\"round\\\" size=\\\"medium\\\" [ngStyle]=\\\"{'background-color': currentGreen}\\\"></ion-chip>\\n          </ion-col>\\n        </ion-row>\\n    </ion-card>\\n  </div>      \\n</ion-grid>\\n</ion-content>\\n\\n<ion-footer>\\n  <app-menu [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-menu>\\n  <app-start [(gameHasBegun)]=\\\"gameHasBegun\\\" [(gameno)]=\\\"gameno\\\"></app-start>\\n</ion-footer>\\n\\n\\n\";"],"sourceRoot":"webpack:///"}