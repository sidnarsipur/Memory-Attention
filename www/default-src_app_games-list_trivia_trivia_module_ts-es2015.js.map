{"version":3,"sources":["./src/app/games-list/trivia/answer.model.ts","./src/app/games-list/trivia/trivia-routing.module.ts","./src/app/games-list/trivia/trivia.model.ts","./src/app/games-list/trivia/trivia.module.ts","./src/app/games-list/trivia/trivia.page.ts","./src/app/games-list/trivia/trivia.page.scss","./src/app/games-list/trivia/trivia.page.html"],"names":[],"mappings":"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","file":"default-src_app_games-list_trivia_trivia_module_ts-es2015.js","sourcesContent":["export class Answer {\n    public value: string;\n    public color: string;\n    public disabled: boolean;\n    \n    constructor(value: string,  color: string, disabled: boolean) {\n        this.value = value;\n        this.color = color;\n        this.disabled = disabled;\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { RiddlesPage } from './trivia.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RiddlesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), \n            CommonModule],\n  exports: [RouterModule],\n})\nexport class RiddlesPageRoutingModule {}\n","export class Riddle {\n    public question: string;\n    public answers: string[];\n    public correct: string;\n    \n    \n    constructor(question: string,  answers: string[], correct: string) {\n        this.question = question;\n        this.answers = answers;\n        this.correct = correct;\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RiddlesPageRoutingModule } from './trivia-routing.module';\n\nimport { RiddlesPage } from './trivia.page';\nimport { from } from 'rxjs';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RiddlesPageRoutingModule,\n    HttpClientModule, \n    SharedModule\n  ],\n  declarations: [RiddlesPage],\n  providers: [],\n  exports: [RiddlesPage],\n})\nexport class TriviaPageModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Riddle } from './trivia.model';\nimport { Answer } from './answer.model';\nimport { GameService } from '../../shared/game.service';\nimport { MenuController } from '@ionic/angular';\nimport { EventemitterService } from '../../shared/eventemitter.service';\nimport { Subscription } from 'rxjs';\nimport { AlertController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-riddles',\n  templateUrl: './trivia.page.html',\n  styleUrls: ['./trivia.page.scss'],\n})\nexport class RiddlesPage implements OnInit {\n  typeArray: string[] = [\"Arithmetic\",\"GK\",\"Similarity\",\"Vocabulary\"]\n  riddleArray = []\n  answerArray: Answer[] = []\n  question: string;\n  choices: string[] = [];\n  answer: string;\n  picked: boolean = false;\n  index: number;\n  threshold = 200; //Number of points to cross a level\n  multiplier = 10; //Number of points each question is worth\n  level: number = 1;\n  lvl: number;\n  maxLevel = 10;\n  database = new Subscription()\n  gameHasBegun = false;\n  gameno: number = 1\n  toGet: number;\n  wrongs: number = 0;\n  score = 0;\n  passed = 0;\n  gameOn = false;\n  startButtonIsDisabled = false;\n  subscription = new Subscription();\n  @Input('excerciseSet') excerciseSet = false;\n  @Input('levels') levels;\n\n  constructor(\n    private router: Router,\n    private menu: MenuController,\n    private gameService: GameService,\n    private eventemitter: EventemitterService,\n    private alertCtrl: AlertController) {}\n\n  ngOnInit() {\n    this.subscription = this.eventemitter.gameStateSubj.subscribe(value =>{\n      switch(value){\n        case 'start':\n          this.onStart()\n          console.log('start')\n          break\n        case 'restart':\n          this.onRestart()\n          break\n        case 'resume':\n          this.onResume()\n          break\n        case 'quit':\n          this.onQuit()\n          break\n        case 'pause':\n          this.onPause()\n          break\n      }}) \n\n      this.database = this.eventemitter.databaseemitter.subscribe(value => {\n        if (value.level){\n          this.level = value.level}\n        if (value.score){\n          this.score = value.score\n        }\n      })\n\n   this.gameService.getLevelScore(this.gameno, this.excerciseSet)\n\n   if (this.excerciseSet) {\n    this.level = this.levels[0]\n    this.score = 0\n    }\n}\n\n  shuffle(array) { // Common shuffle algorithm used online\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }    \n  return array;\n  } \n\n  onStart(){\n    this.toGet = this.threshold - this.score\n    this.alertCtrl.create({\n      header: 'Level: ' + this.level,\n      message: 'You need' + ' ' + this.toGet +  ' points to go to the next level',\n      buttons: [{\n        text: 'Continue',\n        role: 'Continue',\n        handler: () => {\n          this.gameHasBegun = true\n          this.gameOn = true\n          this.createGame()\n      }}]}).then(alert=> alert.present())\n  }\n\n  getLevel(no: number){\n    if(no % 4 == 0){\n      return 3;\n    }\n    if(no % 4 == 3){\n      return 2;\n    }\n    if(no % 4 == 2){\n      return 1;\n    }\n    if(no % 4 == 1){\n      return 0;\n    }\n  }\n\n  createGame(){\n    //let currentLevel = this.level\n   // this.lvl = Math.floor(currentLevel /= 100);\n    //console.log(\"The level is\", this.lvl)\n   // this.round = this.level % 100\n\n   this.lvl = Math.floor(Math.random() * 34) + 1; //Need to add type-based ranges if required\n\n   this.gameService.trivia()\n\n    this.database = this.eventemitter.databaseemitter.subscribe(value => {\n      if(value.path){\n      if (this.passed == 0){\n        this.passed++\n        console.log(this.typeArray[this.getLevel(this.level)])\n        this.question = (value.value[this.typeArray[this.getLevel(this.level)]]['Q'+ this.lvl]['Question'])\n        this.answer = (value.value[this.typeArray[this.getLevel(this.level)]]['Q'+ this.lvl]['Choices']['C1'])\n        for(let i = 1; i < 5; i++){\n            this.choices.push(value.value[this.typeArray[this.getLevel(this.level)]]['Q'+ this.lvl]['Choices']['C'+ i])\n            }\n            this.riddleArray.push(new Riddle(this.question, this.choices, this.answer))\n            this.createAnswers()\n      }\n    }})\n  }\n \n createAnswers(){\n   this.shuffle((this.riddleArray[0].answers))\n   for(let x = 0; x < 4; x++){\n    this.answerArray.push(new Answer(this.riddleArray[0].answers[x], 'dark', false))\n   }\n }\n\n pick(index: number){\n  console.log(\"Button is picked\")\n  if (this.picked != true){\n  this.picked = true;\n  this.answerArray[index].color = \"light\"\n  this.index = index;\n\n  for(let x = 0; x<4; x++){\n    if(x!=index){\n      this.answerArray[x].disabled = true\n    }\n  }\n\n  }\n  else {\n    this.picked = false;\n    this.answerArray[index].color = \"dark\"\n\n    for(let x = 0; x<4; x++){ \n      this.answerArray[x].disabled = false\n  }\n}}\n\nchecker(){\n  if (this.excerciseSet === true) {\n    this.toGet = null\n    if (this.level > this.levels[1]) {\n      this.level++\n      this.reset()\n      this.createGame()\n    }\n  } else {\n    //this.toGet = this.gameService.scoringconstant - this.cardService.getLevelandScore()[1]\n  }\n\n  if(this.answerArray[this.index].value == this.riddleArray[0].correct){\n    this.score+=this.multiplier\n    this.toGet = this.threshold - this.score\n    let timer = this.gameService.clearTimer()\n    this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n\n    this.alertCtrl.create({\n      header: 'Correct!',\n      message: 'Your Score is' + ' ' + this.score + \" points. You need \" + this.toGet + \" points to finish the level\",\n      buttons: [{\n        text: 'Next Question',\n        role: 'Continue',\n        handler: () => {\n          this.reset()\n          console.log(\"Next Question\")\n          this.levelCheck()\n      }}]}).then(alert=> alert.present())}\n    \n  else{\n    this.toGet = this.threshold - this.score\n    this.alertCtrl.create({\n      header: 'Wrong Answer',\n      message: 'You need' + ' ' + this.toGet +  ' points to go to the next level',\n      buttons: [{\n        text: 'Next Question',\n        role: 'Continue',\n        handler: () => {\n          this.reset()\n          this.wrongs++\n          let timer = this.gameService.clearTimer()\n          this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n          console.log(\"Next Question\")\n          this.levelCheck()\n      }}]}).then(alert=> alert.present())\n  }\n    }\n\nlevelCheck(){\n  if(this.score >= this.threshold){\n    if(this.level >= this.maxLevel){\n      this.alertCtrl.create({\n        header: 'GAME COMPLETE!!',\n        message: 'We hope you enjoyed playing Trivia. The Game is over. Exiting will reset the game',\n        buttons: [{\n          text: 'Next Question',\n          role: 'Continue',\n          handler: () => {\n            this.level = 1;\n            this.score = 0;\n            let timer = this.gameService.clearTimer()\n            this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n            this.onQuit()\n            console.log(\"Game Over\")\n      \n        }}]}).then(alert=> alert.present())\n    }\n    else{\n    this.level++\n    this.score = 0\n    this.wrongs = 0\n    console.log(\"new type\")\n    let timer = this.gameService.clearTimer()\n    this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n     this.alertCtrl.create({\n    header: 'You have completed the level!',\n    message: 'We are switching to the ' +  this.typeArray[this.lvl+1] + ' type of questions. Best of luck!',\n    buttons: [{\n      text: 'Next Question',\n      role: 'Continue',\n      handler: () => {\n        console.log(\"Next Level/Type\")\n  \n    }}]}).then(alert=> alert.present())\n  }}\n  else{\n  }\n  this.createGame()\n}\n  \nreset(){\n  this.riddleArray = []\n  this.picked = false\n  this.answerArray = []\n  this.choices = []\n  this.answer = \"\"\n  //this.round = 0\n  this.lvl = 0\n  this.passed = 0\n}\n\n\n  onQuit() {\n    this.gameOn = false;\n    this.router.navigate(['/home'])\n  }\n\n  onRevealHint() {\n    \n  }\n\n  onRestart(){\n    this.reset()\n    this.score = 0\n    this.wrongs = 0\n    let timer = this.gameService.clearTimer()\n    this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-10 , this.level-1)\n    this.createGame()\n  }\n\n  onResume() {\n    this.menu.close('pause')\n  }\n\n  onPause(){\n    console.log(\"paused\")\n\n    this.alertCtrl.create({\n      header: 'Game is Paused',\n      message: 'Hope your liking it!',\n      buttons: [{\n        text: 'Resume Game',\n        role: 'Continue',\n        handler: () => {\n          console.log(\"Game Resumed\")\n    \n      }}]}).then(alert=> alert.present())\n  }\n\n  ngOnDestroy() {\n  }\n\n  ionViewDidLeave() {\n    this.subscription.unsubscribe()\n  }\n}\n","export default \".main {\\n  padding: 0 50px;\\n  margin-top: 30px;\\n}\\n\\nion-button {\\n  margin-bottom: 20px;\\n  font-size: 20px;\\n}\\n\\nion-icon {\\n  margin-left: 10px;\\n}\\n\\nh3 {\\n  margin-left: 10px;\\n  margin-right: 10px;\\n}\\n\\n.submit {\\n  padding-top: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyaXZpYS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7QUFBRjs7QUFHQTtFQUNFLG1CQUFBO0VBQ0EsZUFBQTtBQUFGOztBQUdBO0VBQ0UsaUJBQUE7QUFBRjs7QUFHQTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7QUFBRjs7QUFHQTtFQUNFLGlCQUFBO0FBQUYiLCJmaWxlIjoidHJpdmlhLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1haW57XG4gIHBhZGRpbmc6IDAgNTBweDtcbiAgbWFyZ2luLXRvcDogMzBweDtcbn1cblxuaW9uLWJ1dHRvbntcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG5pb24taWNvbntcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG5cbmgzIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cblxuLnN1Ym1pdCB7XG4gIHBhZGRpbmctdG9wOiA1MHB4O1xufVxuXG4iXX0= */\";","export default \"<app-header [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-header>\\n<app-description [(gameHasBegun)]=\\\"gameHasBegun\\\" [(startButtonIsDisabled)]=\\\"startButtonIsDisabled\\\" [(gameno)]=\\\"gameno\\\"></app-description>\\n\\n<app-score *ngIf=\\\"gameHasBegun\\\" [(level)]=\\\"level\\\" [(score)]=\\\"score\\\"></app-score>\\n\\n<ion-content class=\\\"background\\\" *ngIf=\\\"gameHasBegun\\\">\\n\\n  <h3 style=\\\"text-align: center\\\"><strong>{{ question }}</strong></h3>\\n\\n  <div class=\\\"main\\\">\\n    <ion-button\\n      [disabled] = \\\"answer.disabled\\\"\\n      (click) = \\\"pick(ind)\\\"\\n      color = \\\"{{ answer.color }}\\\"\\n      expand = \\\"block\\\"\\n      *ngFor = \\\"let answer of answerArray, index as ind\\\">\\n     {{ answer.value }}\\n    </ion-button>\\n  </div>\\n\\n  <div class=\\\"submit\\\">\\n    <ion-button\\n      *ngIf = \\\"picked\\\"\\n      class=\\\"main\\\"\\n      color=\\\"warning\\\"\\n      expand = \\\"block\\\"\\n      (click)=\\\"checker()\\\">\\n      Submit  \\n   <ion-icon \\n      name=\\\"enter-outline\\\"\\n      size=\\\"large\\\">\\n  </ion-icon>\\n  </ion-button>\\n</div>\\n\\n</ion-content>\\n\\n\\n\\n<ion-footer>\\n  <app-menu [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-menu>\\n  <app-start [(gameHasBegun)]=\\\"gameHasBegun\\\" [(gameno)]=\\\"gameno\\\"></app-start>\\n</ion-footer>\";"],"sourceRoot":"webpack:///"}