{"version":3,"sources":["webpack:///src/app/games-list/word-to-images/word-to-images-routing.module.ts","webpack:///src/app/games-list/word-to-images/word-to-images.module.ts","webpack:///src/app/games-list/word-to-images/word-to-images.page.ts","webpack:///src/app/games-list/word-to-images/word-to-images.page.scss","webpack:///src/app/games-list/word-to-images/word-to-images.page.html"],"names":["routes","path","component","WordToImagesPage","WordToImagesPageRoutingModule","NgModule","imports","RouterModule","exports","WordToImagesPageModule","CommonModule","FormsModule","IonicModule","SharedModule","declarations","eventemitter","router","gameService","excerciseMode","choosingArray","animals","fullanimal","animalImage","emptyArr","gameHasBegun","formsIsHidden","realGameStart","winScreen","loseScreen","memorize","checked","chosenArray","isDisabled","areSelected","i","copyArray","spliced12","level","aniList","aniList1","aniList2","anime","imgToWord","randy","image_first","image_last","toggle","status","answer1","extraArray","indexAnim","wordArray","arr","asdf","scoring","timeconstant","photoaddress","gameno","subscription","Subscription","database","numberChecked","gameIsPlayed","ctr","scoringCap","getScoringConstant","datapath","tests1","jpe","categoryname","gameinfoget","getLevelScore","databaseemitter","subscribe","value","console","log","score","prevLevel","prevScore","levels","spclVar","categoriesandpaths","gameStateSubj","buttonClick","navigate","job","a","b","Math","random","length","r","floor","indexOf","push","splice","categories","item","round","split","join","runSeries","runSeriesWord","setTimeout","clearaniList","clearAnimals","clearRandomDisplayWords","randImage","randomForImageToWord","answerCreation","displayimglength","displayImg","createValues","index","element","name","isChecked","numberofvalues","totalposs","possibilities","values","seriesRun","array","time","currentItem","currentArray","what","count","valuex","self","counter","wrongs","determineWrongs","currentscore","getScore","storeLevelScore","choices","choice","val","onMemorizedItems","correct","onRoundFinished","answer","response","unsubscribe","EventemitterService","Router","GameService","Input","Component","selector","template","animations","trigger","state","style","opacity","transition","animate"],"mappings":"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","file":"default-src_app_games-list_word-to-images_word-to-images_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WordToImagesPage } from './word-to-images.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WordToImagesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WordToImagesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WordToImagesPageRoutingModule } from './word-to-images-routing.module';\n\nimport { WordToImagesPage } from './word-to-images.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    WordToImagesPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [WordToImagesPage],\n  exports: [WordToImagesPage],\n})\nexport class WordToImagesPageModule {}\n","import { Component, NgModule, OnInit, OnDestroy, Input } from '@angular/core';\n// import { AppComponent } from '../app.component';\n// import { BrowserModule } from '@angular/platform-browser';\n// import { FormsModule } from '@angular/forms';\nimport {trigger, state, style, animate, transition} from '@angular/animations'\nimport { EventemitterService } from '../../shared/eventemitter.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { GameService } from 'src/app/shared/game.service';\n// import { AngularDelegate } from '@ionic/angular';\n// import { Injectable, EventEmitter } from '@angular/core';\n// import { NumberFormatStyle } from '@angular/common';\n\n@Component({\n  selector: 'app-word-to-images',\n  templateUrl: './word-to-images.page.html',\n  styleUrls: ['./word-to-images.page.scss'],\n  animations: [\n    trigger('anime', [\n      state('bright', style({opacity: 1})),\n      transition('* => faded', [animate(500)]),\n      transition('* => bright', [animate(500)]),\n      state('faded', style({opacity: 0}))\n    ])\n  ]\n})\nexport class WordToImagesPage implements OnInit, OnDestroy {\n  @Input('excerciseSet') excerciseMode = false;\n  @Input('spclVar') spclVar;\n  @Input('levels') levels;\n  ImagePath: string; \n  currentArray: string[];\n  choosingArray: any[] = [];\n  animals: any[] = [];\n  fullanimal: any[] = [\"bird\",\"bear\",\"snake\",\"frog\",\"deer\",\"dolphin\",\"tiger\", \"lion\", \"cat\", \"leopard\", \"dog\", \"turtle\"];\n  animalImage: any[] = [\"https://ibb.co/3rhRHMq\"];\n  emptyArr: any[] = [];\n  gameHasBegun = false;\n  formsIsHidden = false; \n  realGameStart = false;\n  winScreen = false;\n  loseScreen  = false;\n  memorize = \"memorize these words\";\n  checked: boolean = false;\n  chosenArray = [];\n  isDisabled: boolean = false;\n  areSelected: any = false;\n  i: any = 0;\n  copyArray: any[] = [];\n  spliced12: any[] = [\"a\", \"b\",\"c\"];\n  counter: 0;\n  value_1:any;\n  value_2:any;\n  value_3:any;\n  value_4:any;\n  value_5:any;\n  level = 1;\n  aniList: string[] = [];\n  aniList1: string[] = [];\n  aniList2: string[] = [];\n  randImage: any[];\n  anime: string = \"faded\";\n  currentItem: any;\n  imgToWord: boolean = true;\n  randy: number = 0;\n  image_first: boolean = true;\n  image_last: boolean = true;\n  toggle = true;\n  status = 'Enable'; \n  answer1: string = \"\";\n  extraArray: string[] = [];\n  indexAnim: number= 0;\n  currWord: any;\n  wordArray: any[] = [];\n  arr: any[] = [];\n  asdf:any[] = [];\n  scoring:number = 0;\n  timeconstant = 2000;\n  prevLevel;\n  prevScore;\n  // arrgs = [\n  //   { name: \"birds\",val: 'birds',vals: '0.jpg', isChecked: false },\n  //   { name: \"bear\",val: 'bear',vals: '1.jpg', isChecked: false },\n  //   { name: \"cow\",val: 'cow',vals: '2.jpg', isChecked: false },\n  //   { name: \"frog\",val: 'frog',vals: '3.jpg', isChecked: false },\n  //   { name: \"deer\",val: 'deer',vals: '4.jpg', isChecked: false },\n  //   { name: \"dolphin\",val: 'dolphin',vals: '5.jpg', isChecked: false },\n  //   { name: \"tiger\",val: 'tiger',vals: '6.jpg', isChecked: false },\n  //   { name: \"lion\",val: 'lion',vals: '7.jpg', isChecked: false }, \n  //   { name: \"cat\",val: 'cat',vals: '8.jpg', isChecked: false },\n  //   { name: \"leopard\",val: 'leopard',vals: '9.jpg', isChecked: false },\n  //   { name: \"dog\",val: 'dog',vals: '10.jpg', isChecked: false },\n  //   { name: \"turtle\",val: 'turtle',vals: '11.jpg', isChecked: false }\n  // ];\n  photoaddress = \"../assets/word-to-images/\"\n  gameno = 6\n  subscription = new Subscription();\n  database = new Subscription();\n  numberChecked = 0\n  gameIsPlayed = false\n  ctr = 0\n  scoringCap = this.gameService.getScoringConstant();\n  datapath = \"WordtoImages/words\"\n  tests1 = []\n  jpe = \".jpeg\"\n  categoryname = \"Animals\"\n  categoriesandpaths;\n  // paths = \"gs://memoryattention-1.appspot.com/WordToImages/Animals/Ant.jpeg\"\n\n  constructor(\n    private eventemitter: EventemitterService, \n    private router: Router,\n    private gameService: GameService) { }\n\n  ngOnInit() {\n    this.gameService.gameinfoget(this.datapath)\n    this.gameService.getLevelScore(this.gameno, this.excerciseMode)\n    this.database = this.eventemitter.databaseemitter.subscribe(value => {\n      console.log(value)\n      console.log(\"value level and score    \" + value.level + \"        \" + value.score)\n      if (!this.excerciseMode) {\n        if (value.level) {\n          this.level = value.level\n          this.prevLevel = this.level\n          console.log(\"Level:\" , this.level)\n        }\n        if (value.score) {\n          this.scoring = value.score\n          this.prevScore = this.scoring\n          console.log(\"Score:\" , this.scoring)\n        }\n      }\n      if (this.excerciseMode) {\n        this.level = this.levels[this.spclVar]\n        console.log(this.levels, this.level)\n      }\n\n\n\n      if (value.value) {\n        this.categoriesandpaths = value.value\n        console.log(this.categoriesandpaths)\n        // switch(this.level) {\n        //   case 1:\n        //     if (value.value.Animals){\n        //     console.log(value.value.Animals)\n        //     this.tests1 = Object.values(value.value.Animals)\n        //     console.log(this.tests1, \" <--------- test if database got stuff\")\n        //     }\n        //     break;\n        //   case 2: \n        //     if(value.value.Clothing){\n        //       console.log(value.value.Clothing)\n        //       this.tests1 = Object.values(value.value.Clothing)\n        //       console.log(this.tests1, \" <--------- test if database got stuff\")\n        //     }\n        //     break;\n        //   case 3: \n        //     if(value.value.Colors){\n        //       console.log(value.value.Colors)\n        //       this.tests1 = Object.values(value.value.Colors)\n        //       console.log(this.tests1, \" <--------- test if database got stuff\")\n        //     }\n        //   break;\n        //   case 4: if(value.value.Emotions){\n        //     console.log(value.value.Emotions)\n        //     this.tests1 = Object.values(value.value.Emotions)\n        //     console.log(this.tests1, \" <--------- test if database got stuff\")\n        //   }\n        //   break;\n        //   case 5: if(value.value.Flowers){\n        //     console.log(value.value.Flowers)\n        //     this.tests1 = Object.values(value.value.Flowers)\n        //     console.log(this.tests1, \" <--------- test if database got stuff\")\n        //   }\n        //   break;\n        //   case 6: if(value.value.Fruits){\n        //     console.log(value.value.Fruits)\n        //     this.tests1 = Object.values(value.value.Fruits)\n        //     console.log(this.tests1, \" <--------- test if database got stuff\")\n        //   }\n        //   break;\n        //   case 7: if(value.value.Grocery){\n        //     console.log(value.value.Grocery)\n        //     this.tests1 = Object.values(value.value.Grocery)\n        //     console.log(this.tests1, \" <--------- test if database got stuff\")\n        //   }\n        //   break;\n        //   //Case 8 needs to have an underscore in the database so it will work\n        //   case 8: if(value.value.Household_Items){\n        //     console.log(value.value.Household_Items)\n        //     this.tests1 = Object.values(value.value.Household_Items)\n        //     console.log(this.tests1, \" <--------- test if database got stuff\")\n        //   }\n        //   break;\n        //   case 9: if(value.value.Parts_of_Body){\n        //     console.log(value.value.Parts_of_Body)\n        //     this.tests1 = Object.values(value.value.Parts_of_Body)\n        //     console.log(this.tests1, \" <--------- test if database got stuff\")\n        //   }\n        //   break;\n        // }\n      } \n    })\n    this.subscription = this.eventemitter.gameStateSubj.subscribe(value => {\n      console.log(value)\n      switch (value) {\n        case 'start': \n          this.buttonClick()\n          break\n        case 'restart':\n          break\n        case 'resume':\n          break\n        case 'quit':\n          this.router.navigate(['/home'])\n          break\n        case 'pause':\n          break\n      //   case 'stop':\n      //     this.onEndGame()\n      //     break\n      }\n    })\n\n\n  }\n\n\n  enableDisableRule(job) {\n    this.toggle = !this.toggle;\n    //this.status = this.toggle ? 'Enable ' : 'Disable ';\n    this.status = this.toggle ? 'green ' : 'red ';\n  }\n\n  testClick()\n  {\n    console.log(\"Testing the Click\");\n  }\n\n  func(a, b) {  \n    return 0.64 - Math.random();\n  }  \n\n  random_Images(){\n    let arr = [];\n    while(arr.length < 8){\n      let r = Math.floor(Math.random() * 12);\n      if(arr.indexOf(r) === -1) arr.push(r);\n    }\n    console.log(arr);\n    return arr;\n  }\n\n  changeImgToWord()\n  {\n    if(this.imgToWord == true)\n    {\n      this.imgToWord = false;\n      console.log(\"shows words then choose the image\");\n    }\n    else\n    {\n      this.imgToWord = true;\n      console.log(\"shows images then choose the words\");\n    }\n  }\n\n  randomForImageToWord()\n  {\n    console.log(\"this is randy - \" + this.randy);\n    this.randy = Math.floor(Math.random() * (5-1) + 1);\n    if (this.excerciseMode) {\n      this.randy = (this.levels[this.spclVar] + 3) % 4 + 1\n    }\n    console.log(\"this is randy - \" + this.randy);\n    switch (this.randy) {\n      case 1:\n        this.image_first = true;\n        this.image_last = false;\n        break\n      case 2:\n        this.image_first = false;\n        this.image_last = true;\n        break\n      case 3:\n        this.image_first = false;\n        this.image_last = false;\n        break\n      case 4:\n        this.image_first = true;\n        this.image_last = true;\n        break\n    }\n    console.log(this.imgToWord+ \"    the IMg to word is      this is randy - \" + this.randy);\n\n  //   if(this.randy == 1)\n  //   {\n  //     //this.imgToWord = true;\n  //     this.image_first = true;\n  //     this.image_last = false;\n      \n  //   }\n  //   else if(this.randy == 2){\n  //     //this.imgToWord = false;\n  //     this.image_first = false;\n  //     this.image_last = true;\n      \n  //   }\n  //   else if(this.randy == 3){\n  //     //this.imgToWord = false;\n  //     this.image_first = true;\n  //     this.image_last = true;\n      \n  //   }\n  //   else {\n  //     //this.imgToWord = false;\n  //     this.image_first = false;\n  //     this.image_last = false;\n  //     console.log(this.imgToWord+ \"    the IMg to word is      this is randy - \" + this.randy);\n  //   }\n  }\n\n  clearAnimals(){\n    this.animals = [];\n  }\n\n  clearRandomDisplayWords(){\n    this.choosingArray = [];\n    this.choosingArray.length = 0;\n    this.choosingArray.splice(0,this.choosingArray.length);\n  }\n\n  clearaniList(){\n    this.aniList = [];\n    this.aniList.length = 0;\n    this.aniList.splice(0,this.aniList.length);\n  }\n\n  buttonClick()\n  {\n    this.categoryname = \"\"\n    let categories = []\n    for (let item in this.categoriesandpaths) {\n      categories.push(item)\n    }\n    console.log(categories)\n    this.categoryname = categories[Math.round(Math.random()*categories.length) - 1]\n    this.tests1 = this.categoriesandpaths[this.categoryname]\n    this.categoryname = this.categoryname.split(\" \").join(\"_\")\n\n    console.log(this.tests1)\n    this.numberChecked = 0\n\n    this.realGameStart = false;\n    \n   if(this.ctr > 0)\n   {\n    // console.log(\"THE WOOOORD\")\n    // if(this.level >= 1 && this.level < 2) \n    // {\n      console.log(\"Not a whole number to stay the same\");\n      this.gameHasBegun = true;\n      this.loseScreen = false;\n      this.winScreen = false;\n      this.formsIsHidden = true;\n      this.realGameStart = true;\n      if(this.randy === 1 || this.randy === 2 || this.randy === 3|| this.randy === 4)\n      {\n        this.formsIsHidden = false;\n        if(this.randy === 1 || this.randy === 3)\n        {\n          this.runSeries(0);\n        }\n        else\n        {\n          this.runSeriesWord(0)\n        }\n        setTimeout(() => {\n          this.formsIsHidden = true;\n          console.log(\"forms is hidden = false\")\n        }, this.timeconstant*(this.level + 2));\n        \n      }\n    }\n    else {\n    console.log(\"BUSSSSSSSSS\")\n      this.clearaniList();\n      this.clearAnimals();\n      this.clearRandomDisplayWords();\n\n      this.animals = [];\n      this.animals.length = 0;\n      this.animals.splice(0,this.animals.length);\n      this.arr = [];\n      this.aniList = [];\n      this.randImage = [];\n      this.gameHasBegun = true;\n      this.loseScreen = false;\n      this.winScreen = false; \n      this.randomForImageToWord();\n      // if(this.level === 1)\n      // {\n      if (this.level > 1) {\n        this.animals = [];\n        this.animals.length = 0;\n        this.animals.splice(0,this.animals.length);\n      }\n      this.answerCreation()\n      setTimeout(() => {\n      console.log(this.aniList + \"  <---- anilist array\");\n      console.log(this.animals + \"  <---- animals array\");\n      \n      this.formsIsHidden = true;\n      }, this.timeconstant*(this.level + 2));\n      this.realGameStart = true;\n      console.log(this.arr + \"<--- arr array\")\n    }\n  }  \n\n answerCreation() {\n  console.log(\"level is equal to 1\")\n  console.log(this.tests1.length + \" length\")\n  console.log(this.tests1 + \" tests1\")\n  let displayimglength = this.level*2 + 4\n  if (displayimglength > this.tests1.length) {\n    displayimglength = this.tests1.length\n  }\n  console.log(displayimglength)\n  let displayImg:any[] = this.createValues(displayimglength, this.tests1.length);\n  this.asdf = this.createValues(this.level + 2, displayimglength);\n  // let displayImg:any[] = this.createValues(this.level*2 + 4, this.tests1.length);\n  // this.asdf = this.createValues(this.level + 2, this.tests1.length);\n  for(let item of this.asdf)\n  {\n    this.arr.push(this.tests1[displayImg[item]])\n    //console.log(this.arr.push(this.arrgs[displayImg[item]]))\n  }\n  for(let i = 0; i < displayImg.length;i++)\n  {\n    displayImg[i] = this.tests1[displayImg[i]]\n    //console.log(this.arrgs[displayImg[i]])\n  }\n  for (let index = 0; index < displayImg.length; index++) {\n    const element = displayImg[index];\n    this.choosingArray.push({name: element, isChecked: false})\n    \n  }\n  this.randImage = this.arr;\n  // this.choosingArray = displayImg\n  console.log(displayImg, \"  displayimg\")\n  console.log(this.arr + \"<-- arr\")\n  console.log(this.choosingArray )\n\n  console.log(\"value 1 be \" + this.tests1[this.asdf[0]], \"  \" + this.asdf[0]);\n  console.log(\"value 2 be \" + this.tests1[this.asdf[1]], \"  \" + this.asdf[1]);\n  console.log(\"value 3 be \" + this.tests1[this.asdf[2]], \"  \" + this.asdf[2]);   \n  for(let i = 0; i < this.arr.length; i++)\n  {\n    this.animals.push(this.arr[i])\n    //console.log(this.arr[i].name)\n  }\n  for(let i = 0; i < this.arr.length; i++)\n  {\n    this.aniList.push(this.arr[i])\n    //console.log( this.aniList.push(this.arr[i].name))\n  }\n  console.log(\"Animals is \"+ this.animals);\n  console.log(this.randImage)\n  if(this.randy === 1 || this.randy === 3)\n  {\n    this.runSeries(0);\n  }\n  else\n  {\n    this.runSeriesWord(0)\n  }\n}\n\n  getClass(i) {\n    if (this.choosingArray[i].isChecked === true) {\n      return false\n    } \n    if (this.choosingArray[i].isChecked === false) {\n      return true\n    }\n  }\n\n  onClick(index) {\n    if (this.choosingArray[index].isChecked === true) {\n      this.choosingArray[index].isChecked = false\n      this.numberChecked-- \n    }\n    else if (this.numberChecked < this.level + 2 && this.choosingArray[index].isChecked === false) {\n      this.numberChecked++\n      this.choosingArray[index].isChecked = !this.choosingArray[index].isChecked\n    }\n  }\n\n  createValues(numberofvalues, totalposs) {\n    let possibilities: number[] = []\n    let values: number[] = []\n    for (let i = 0; i < totalposs; i++) {\n      possibilities.push(i)\n    }\n    for (let i = 0; i < numberofvalues; i++) {\n      let value = Math.floor(Math.random()*possibilities.length)\n      values.push(possibilities[value])\n      possibilities.splice(value, 1)\n    }\n    console.log(values)\n    return values\n  }\n\n  runSeries(i) {\n    console.log(this.aniList)\n    // this.seriesRun(i, this.aniList, 1900 - 400*(this.level - 1))\n    this.seriesRun(i, this.aniList, this.timeconstant)\n  }\n\n  runSeriesWord(i) {\n    // this.seriesRun(i, this.animals, 1900 - 400*(this.level - 1))\n    this.seriesRun(i, this.animals, this.timeconstant)\n  }\n\n  seriesRun(i, array, time) {\n    console.log(this.currentItem)\n    if (i < array.length) {\n      console.log(i)\n      this.currentItem = array[i];\n      console.log(this.currentItem)\n      setTimeout(() => {\n        this.anime = \"brighten\";\n      }, 100);\n      setTimeout(() => {\n        this.anime = \"faded\";\n      }, 1000)\n      setTimeout(() => {\n        i++\n        this.seriesRun(i, array, time)\n      }, time);\n    } \n  }\n\n \n  \n  \n  startGame()\n  {\n    this.loseScreen = false;\n    this.winScreen = false;\n    //var s = this.arrgs.sort(this.func); \n    //var szz = this.imgzz.sort(this.func); \n    this.gameHasBegun = true;\n    this.currentArray = this.animals;\n    this.memorize;\n\n    setTimeout(() => {\n     this.currentArray = this.emptyArr;  \n     //this.choosingArray = s; \n     console.log(this.choosingArray + \"  <---- choosing array\");\n     //this.randImage = szz;\n     this.formsIsHidden = true;\n      }, 3000);\n    this.realGameStart = true;\n    \n  }\n\n  countInArray(array, what) \n  {\n    var count = 0;\n    for (var i = 0; i < array.length; i++) {\n        if (array[i] === what) {\n            count++;\n        }\n    }\n    return count;\n  }\n\n  onlyUnique(valuex, index, self) { \n    return self.indexOf(valuex) === index;\n  }\n\n  sign()\n  {\n    this.chosenArray = [];\n    this.chosenArray.length = 0;\n    this.chosenArray.splice(0,this.chosenArray.length);\n    console.log(this.asdf.length + \"<-- asdf length \")\n    let counter = 0;\n    console.log(this.chosenArray.length + \" <---length is    counter is---->\" + counter)\n    for(let i = 0; i<this.choosingArray.length; i++) \n    {\n      if(this.choosingArray[i].isChecked === true)\n      {\n        this.chosenArray.push(this.choosingArray[i])\n      }\n    } \n  \n    console.log(this.chosenArray + \" is chosen array\")\n    // if(this.asdf.length != this.chosenArray.length)\n    // {\n    //   this.areSelected = false;\n    //   console.log(\"the asdf length is not equal to chosen array length\")\n    //   console.log(\"You Lost\")\n    //   this.formsIsHidden = false;\n    //   this.loseScreen = true;\n    //   this.level = 1;\n    //   this.animals = []\n    //   this.aniList = []\n    //   this.scoring = 0;\n    //   return\n    // }\n    let wrongs = 0\n    wrongs = this.determineWrongs()\n    console.log(wrongs)\n    let currentscore = 0\n    if (!this.excerciseMode) {\n      currentscore = this.gameService.getScore(this.level + 2, wrongs)\n      this.scoring = this.scoring + currentscore\n      console.log(\"score --->\" + this.scoring)\n      if(this.scoring >= this.scoringCap)\n      {\n        this.scoring = 0\n        this.level++;\n      }\n        this.gameService.storeLevelScore(this.gameno, this.scoring, this.level, this.excerciseMode)\n    }\n    console.log(this.gameService.getScore(this.animals, wrongs) + \" < -------- --- --- -- --\")\n\n    wrongs = 0\n    // for(let i = 0; i < this.chosenArray.length; i++)\n    // {\n    //   if(this.chosenArray.includes(this.arr[i].name))\n    //   {\n    //     counter++\n    //     console.log(counter)\n    //     // console.log(this.chosenArray.length + \" <---length is    counter is---->\" + counter)\n    //     if(counter = this.chosenArray.length)\n    //     {\n    //       this.areSelected = true;\n    //       this.scoring = this.scoring + 33.33333333333333333333333333333333333333333333;\n    //     }\n    //   }\n    //   else if(this.chosenArray.includes(this.animals[i].name))\n    //   {\n    //     this.areSelected = true;\n    //     this.scoring = this.scoring + 33.33333333333333333333333333333333333333333333;\n    //     console.log(\"ANIMALS AND CHOSEN ARRAY WORK\");\n    //   }\n    //   else{\n    //     this.areSelected = false;\n    //   }\n    // }\n    \n\n\n    for(let i = 0; i < this.choosingArray.length; i++)\n    {\n      this.choosingArray[i].isChecked = false\n    }\n\n    // if(this.areSelected)\n    // {\n    //   console.log(\"WIIIIIIIIIIIIIIIN\")\n      this.formsIsHidden = false;\n      this.winScreen = true;\n      //this.level = this.level + 1;\n    //   console.log(this.level + \"<----level \");\n    // }\n    // else{\n    //   console.log(\"LOOOOOOOOSSSSEEEEEE\")\n    //   this.formsIsHidden = false;\n    //   this.loseScreen = true;\n      //this.level = 1;\n    // }\n\n    if (this.excerciseMode === true) {\n      this.ctr++\n      console.log(this.ctr)\n      if (this.ctr > 0) {\n        let choices = []\n        if (this.image_last === true) {\n          for (let choice of this.choosingArray) {\n            choices.push({name: choice.name, val: this.categoryname + '/' + choice.name + \".jpeg\"})\n          }\n        }\n        if (this.image_last === false) {\n          for (let choice of this.choosingArray) {\n            choices.push({name: choice.name, val: choice.name})\n          }\n        }\n        this.eventemitter.onMemorizedItems({correct: this.animals, choices: choices})\n        this.eventemitter.onRoundFinished({continue: true})\n      }\n    }\n\n    // if (this.excerciseMode === true && this.ctr > 2) {\n    //   this.eventemitter.onMemorizedItems({correct: this.animals, choices: this.choosingArray})\n    //   this.eventemitter.onRoundFinished(true)\n    // }\n\n\n  }\n\n  determineWrongs() {\n    let wrongs = 0\n    for (let answer of this.animals) {\n      wrongs++\n      for (let response of this.chosenArray) {\n        console.log(answer, response)\n        if (answer === response.name) {\n          wrongs--\n        }\n      }\n    }\n    return wrongs\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe()\n    this.database.unsubscribe()\n  }\n\n  ionViewDidLeave() {\n    this.subscription.unsubscribe()\n    this.database.unsubscribe()\n  }\n}\n\n","export default \".maxopacity {\\n  opacity: 0.25;\\n}\\n\\n.displaycontainer {\\n  position: relative;\\n}\\n\\n.bottomright {\\n  position: absolute;\\n  right: 0;\\n  bottom: 0;\\n}\\n\\n.footer {\\n  position: fixed;\\n  left: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  color: white;\\n  text-align: center;\\n  background-color: #ffffff;\\n}\\n\\n.button {\\n  font-weight: bold;\\n  font-size: 20px;\\n  line-height: 10px;\\n  letter-spacing: 0.25em;\\n  color: #FFFDFD;\\n}\\n\\n.fonts {\\n  font-family: \\\"Lato-Light\\\";\\n  font-weight: \\\"Bold\\\";\\n  text-transform: capitalize;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmQtdG8taW1hZ2VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUFDSjs7QUFFRTtFQUNFLGtCQUFBO0FBQ0o7O0FBRUU7RUFDRSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FBQ0o7O0FBRUU7RUFDRSxlQUFBO0VBQ0EsT0FBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0VBQ0EsMkJBQUE7RUFBQSx3QkFBQTtFQUFBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7QUFDSjs7QUFFRTtFQUNFLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0Esc0JBQUE7RUFFQSxjQUFBO0FBQUo7O0FBRUk7RUFDRSx5QkFBQTtFQUNGLG1CQUFBO0VBQ0EsMEJBQUE7QUFDSiIsImZpbGUiOiJ3b3JkLXRvLWltYWdlcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF4b3BhY2l0eSB7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuICBcbiAgLmRpc3BsYXljb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICBcbiAgLmJvdHRvbXJpZ2h0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICB9XG5cbiAgLmZvb3RlciB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDpmaXQtY29udGVudDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIH1cblxuICAuYnV0dG9uIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDEwcHg7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMjVlbTtcbiAgICBcbiAgICBjb2xvcjogI0ZGRkRGRDtcbiAgICB9XG4gICAgLmZvbnRze1xuICAgICAgZm9udC1mYW1pbHk6ICdMYXRvLUxpZ2h0JztcbiAgICBmb250LXdlaWdodDogJ0JvbGQnO1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgIH0iXX0= */\";","export default \"<!-- <ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Words to Images\\n    </ion-title>  \\n  </ion-toolbar>\\n</ion-header> -->\\n\\n<app-header [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"realGameStart\\\" ></app-header>\\n\\n<app-score *ngIf=\\\"gameHasBegun\\\" [(level)]=\\\"level\\\" [(score)]=\\\"scoring\\\"></app-score>\\n\\n<ion-content>\\n  <!-- <input type=\\\"image\\\" style=\\\"width: 125px; height: 125px;\\\" src = \\\"../assets/word-to-images/1_Animals/Lion.jpeg\\\"/> Restart -->\\n  <app-description [(gameno)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"realGameStart\\\" ></app-description>\\n  <ion-grid>\\n    <!-- <div>\\n      <ion-row *ngIf=\\\"!realGameStart\\\">\\n        <ion-col>\\n          <ion-item button (click)=\\\"buttonClick()\\\">\\n            <ion-label>\\n              Start \\n            </ion-label>\\n          </ion-item>\\n          <ion-item button (click)=\\\"changeImgToWord()\\\">\\n            <ion-label>Change the image to words</ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n    -->\\n    <div *ngIf=\\\"gameHasBegun && !formsIsHidden && image_first && !winScreen\\\">\\n      <ion-row>\\n        <ion-col [@anime]=\\\"anime\\\" class=\\\"ion-text-center\\\">\\n          <!-- <ion-card >\\n            <ion-text color = danger>\\n             <ion-card-content>  -->\\n              <img [src]=\\\"photoaddress + categoryname + '/' + currentItem + jpe\\\" height=\\\"180\\\">  \\n              <!-- </ion-card-content> -->\\n            <!-- </ion-text>  -->\\n          <!-- </ion-card> -->\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n\\n    <!-- <div #currentWord>\\n      <ion-label class=\\\"ion-text-center\\\" *ngIf=\\\"gameHasBegun && !formsIsHidden && !image_first\\\">\\n        <h1 class=\\\"text-large\\\">{{ currentWord }}</h1>\\n      </ion-label>\\n    </div> -->\\n\\n    <!-- other option would be currentWord for the animations alse try ani list instead of animals in the runSeriesWord -->\\n    <div *ngIf=\\\"gameHasBegun && !formsIsHidden && !image_first && !winScreen\\\">\\n      <ion-row > \\n        <ion-col [@anime]=\\\"anime\\\" class=\\\"ion-text-center\\\"> \\n          <ion-label class =\\\"fonts\\\" color=\\\"danger\\\"> <h1>{{currentItem.split(\\\"_\\\").join(\\\" \\\")}}</h1></ion-label>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n    \\n    \\n\\n\\n    <div *ngIf=\\\"formsIsHidden && image_last\\\">\\n      <ion-row >\\n        <ion-col size=\\\"4\\\" offset=\\\"0\\\" *ngFor=\\\"let entry of choosingArray; index as i\\\" (click)=\\\"onClick(i)\\\">\\n          <div>\\n            <img [src]=\\\"photoaddress + categoryname + '/' + entry.name + jpe\\\"  [class]=\\\"getClass(i) === true ? '' : 'maxopacity'\\\">\\n            <div class=\\\"container bottomright\\\" *ngIf=\\\"getClass(i) === true ? false : true\\\"><ion-icon name=\\\"checkmark-circle\\\"></ion-icon></div>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-row >\\n        <ion-col *ngFor = \\\"let entry of choosingArray\\\" size = \\\"6\\\">\\n          <ion-card>\\n            <ion-list>\\n              <ion-item>\\n                <img [src]=\\\"'../../assets/photos' + '/' + entry.vals \\\" height = \\\"100\\\" width = \\\"120\\\">  \\n                <ion-checkbox slot=\\\"end\\\" (ionChange)=\\\"onChange(entry.name)\\\" ></ion-checkbox>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card>\\n        </ion-col>\\n      </ion-row> -->\\n      <ion-row>\\n        <ion-col class=\\\"ion-text-center\\\">\\n          <ion-button color=\\\"danger\\\" (click)=\\\"sign()\\\">Submit</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n\\n    <div *ngIf=\\\"formsIsHidden && !image_last\\\">\\n      <ion-row >\\n        <ion-col size=\\\"4\\\" offset=\\\"0\\\" *ngFor=\\\"let item of choosingArray; index as i\\\">\\n          <div>\\n            <!-- <label class = \\\"fonts\\\" (click)=\\\"onClick(i)\\\" [class]=\\\"getClass(i) === true ? '' : 'maxopacity'\\\">{{entry.val}}</label> -->\\n            <h3 class = \\\"fonts\\\" [class]=\\\"getClass(i) === true ? '' : 'maxopacity'\\\"  (click)=\\\"onClick(i)\\\">{{item.name.split(\\\"_\\\").join(\\\" \\\")}}</h3>\\n            <div class=\\\"container bottomright\\\" *ngIf=\\\"getClass(i) === true ? false : true\\\">\\n              <ion-icon name=\\\"checkmark-circle\\\"></ion-icon>\\n            </div>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <!-- <ion-row >\\n        <ion-col *ngFor = \\\"let entry of choosingArray \\\" size = \\\"6\\\">\\n            <ion-list>\\n                <ion-item>\\n                  <ion-label>{{entry.val}}</ion-label>\\n                <ion-checkbox (ionChange)=\\\"onChange(entry.val)\\\" ></ion-checkbox>\\n                </ion-item>\\n            </ion-list>\\n        </ion-col>\\n      </ion-row> -->\\n      <ion-row>\\n        <ion-col class=\\\"ion-text-center\\\">\\n          <ion-button color=\\\"danger\\\" (click)=\\\"sign()\\\">Submit</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"winScreen\\\"> \\n      <ion-row> \\n        <ion-col class=\\\"ion-text-center\\\"> \\n          <ion-button (click)=\\\"buttonClick()\\\">Next Round</ion-button>  \\n        </ion-col> \\n      </ion-row>\\n    </div> \\n    <!-- <div *ngIf=\\\"loseScreen\\\"> \\n      <ion-row> \\n        <ion-col> \\n          <ion-item button (click)=\\\"buttonClick()\\\">\\n            <ion-label>\\n              Start\\n            </ion-label>\\n          </ion-item>\\n        </ion-col> \\n      </ion-row>\\n    </div> -->\\n  </ion-grid>\\n</ion-content>\\n\\n\\n<ion-footer>\\n  <app-menu [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"realGameStart\\\" ></app-menu>\\n  <app-start [(gameno)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"realGameStart\\\" ></app-start>\\n</ion-footer>\\n\\n<!-- <div class=\\\"footer\\\" *ngIf=\\\"!gameHasBegun\\\">\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"11\\\" offset=\\\"0.5\\\" size-md=\\\"8\\\" offset-md=\\\"2\\\">\\n        <ion-button  color=\\\"start\\\" size= expand=\\\"full\\\" (click)=\\\"onStart()\\\">START</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n    \\n</div> -->\\n\";"]}