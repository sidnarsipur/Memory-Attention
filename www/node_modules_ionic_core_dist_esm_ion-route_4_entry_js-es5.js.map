{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","r","ionRouteDataChanged","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","chainToPath","chain","route","segment","param","params","slice","push","writePath","history","root","useHash","direction","state","queryString","parsePath","undefined","pushState","replaceState","removePrefix","prefix","i","readPath","loc","pathname","hash","removeQueryString","split","map","trim","printRoutes","routes","console","group","forEach","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","componentOnReady","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","Promise","resolve","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","input","expected","routeRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","a","b","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readRedirects","Array","children","el","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","component","Error","componentProps","beforeLeave","beforeEnter","prop","hasAttribute","getAttribute","nodes","flattenNode","sub","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","onRoutesChanged","onRedirectChanged","bind","historyDirection","getPath","runGuards","canProceed","writeNavStateRoot","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","setPath","waitPromise","warn","safeWriteNavState","win","title","redirectFrom","lock","unlock","p","toChain","fromChain","beforeEnterHook","beforeLeaveHook","canLeave","canEnter","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","o","routerAnimation","mode","attrs","rel","target","h","H","c","color","style"],"mappings":"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","file":"node_modules_ionic_core_dist_esm_ion-route_4_entry_js-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nimport { k as debounce } from './helpers-47d562d2.js';\nimport { o as openURL, c as createColorClasses } from './theme-5641d27f.js';\n\nconst Route = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n        /**\n         * Relative path that needs to match in order for this route to apply.\n         *\n         * Accepts paths similar to expressjs so that you can define parameters\n         * in the url /foo/:bar where bar would be available in incoming props.\n         */\n        this.url = '';\n    }\n    onUpdate(newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    }\n    onComponentProps(newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        const keys1 = newValue ? Object.keys(newValue) : [];\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (const key of keys1) {\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    }\n    connectedCallback() {\n        this.ionRouteDataChanged.emit();\n    }\n    static get watchers() { return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n    }; }\n};\n\nconst RouteRedirect = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n    }\n    propDidChange() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    connectedCallback() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    static get watchers() { return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n    }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\n    const path = segments\n        .filter(s => s.length > 0)\n        .join('/');\n    return '/' + path;\n};\nconst chainToPath = (chain) => {\n    const path = [];\n    for (const route of chain) {\n        for (const segment of route.path) {\n            if (segment[0] === ':') {\n                const param = route.params && route.params[segment.slice(1)];\n                if (!param) {\n                    return null;\n                }\n                path.push(param);\n            }\n            else if (segment !== '') {\n                path.push(segment);\n            }\n        }\n    }\n    return path;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n    let url = generatePath([\n        ...parsePath(root),\n        ...path\n    ]);\n    if (useHash) {\n        url = '#' + url;\n    }\n    if (queryString !== undefined) {\n        url = url + '?' + queryString;\n    }\n    if (direction === ROUTER_INTENT_FORWARD) {\n        history.pushState(state, '', url);\n    }\n    else {\n        history.replaceState(state, '', url);\n    }\n};\nconst removePrefix = (prefix, path) => {\n    if (prefix.length > path.length) {\n        return null;\n    }\n    if (prefix.length <= 1 && prefix[0] === '') {\n        return path;\n    }\n    for (let i = 0; i < prefix.length; i++) {\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\n            return null;\n        }\n    }\n    if (path.length === prefix.length) {\n        return [''];\n    }\n    return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n    let pathname = loc.pathname;\n    if (useHash) {\n        const hash = loc.hash;\n        pathname = (hash[0] === '#')\n            ? hash.slice(1)\n            : '';\n    }\n    const prefix = parsePath(root);\n    const path = parsePath(pathname);\n    return removePrefix(prefix, path);\n};\nconst parsePath = (path) => {\n    if (path == null) {\n        return [''];\n    }\n    const removeQueryString = path.split('?')[0];\n    const segments = removeQueryString.split('/')\n        .map(s => s.trim())\n        .filter(s => s.length > 0);\n    if (segments.length === 0) {\n        return [''];\n    }\n    else {\n        return segments;\n    }\n};\n\nconst printRoutes = (routes) => {\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\n    for (const chain of routes) {\n        const path = [];\n        chain.forEach(r => path.push(...r.path));\n        const ids = chain.map(r => r.id);\n        console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n    }\n    console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n    for (const redirect of redirects) {\n        if (redirect.to) {\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\n        }\n    }\n    console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n    try {\n        // find next navigation outlet in the DOM\n        const outlet = searchNavNode(root);\n        // make sure we can continue interacting the DOM, otherwise abort\n        if (index >= chain.length || !outlet) {\n            return changed;\n        }\n        await outlet.componentOnReady();\n        const route = chain[index];\n        const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n        // if the outlet changed the page, reset navigation to neutral (no direction)\n        // this means nested outlets will not animate\n        if (result.changed) {\n            direction = ROUTER_INTENT_NONE;\n            changed = true;\n        }\n        // recursively set nested outlets\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n        // once all nested outlets are visible let's make the parent visible too,\n        // using markVisible prevents flickering\n        if (result.markVisible) {\n            await result.markVisible();\n        }\n        return changed;\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nconst readNavState = async (root) => {\n    const ids = [];\n    let outlet;\n    let node = root;\n    // tslint:disable-next-line:no-constant-condition\n    while (true) {\n        outlet = searchNavNode(node);\n        if (outlet) {\n            const id = await outlet.getRouteId();\n            if (id) {\n                node = id.element;\n                id.element = undefined;\n                ids.push(id);\n            }\n            else {\n                break;\n            }\n        }\n        else {\n            break;\n        }\n    }\n    return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n    if (searchNavNode(document.body)) {\n        return Promise.resolve();\n    }\n    return new Promise(resolve => {\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\n    });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n    if (!root) {\n        return undefined;\n    }\n    if (root.matches(QUERY)) {\n        return root;\n    }\n    const outlet = root.querySelector(QUERY);\n    return outlet ? outlet : undefined;\n};\n\nconst matchesRedirect = (input, route) => {\n    const { from, to } = route;\n    if (to === undefined) {\n        return false;\n    }\n    if (from.length > input.length) {\n        return false;\n    }\n    for (let i = 0; i < from.length; i++) {\n        const expected = from[i];\n        if (expected === '*') {\n            return true;\n        }\n        if (expected !== input[i]) {\n            return false;\n        }\n    }\n    return from.length === input.length;\n};\nconst routeRedirect = (path, routes) => {\n    return routes.find(route => matchesRedirect(path, route));\n};\nconst matchesIDs = (ids, chain) => {\n    const len = Math.min(ids.length, chain.length);\n    let i = 0;\n    for (; i < len; i++) {\n        if (ids[i].toLowerCase() !== chain[i].id) {\n            break;\n        }\n    }\n    return i;\n};\nconst matchesPath = (inputPath, chain) => {\n    const segments = new RouterSegments(inputPath);\n    let matchesDefault = false;\n    let allparams;\n    for (let i = 0; i < chain.length; i++) {\n        const path = chain[i].path;\n        if (path[0] === '') {\n            matchesDefault = true;\n        }\n        else {\n            for (const segment of path) {\n                const data = segments.next();\n                // data param\n                if (segment[0] === ':') {\n                    if (data === '') {\n                        return null;\n                    }\n                    allparams = allparams || [];\n                    const params = allparams[i] || (allparams[i] = {});\n                    params[segment.slice(1)] = data;\n                }\n                else if (data !== segment) {\n                    return null;\n                }\n            }\n            matchesDefault = false;\n        }\n    }\n    const matches = (matchesDefault)\n        ? matchesDefault === (segments.next() === '')\n        : true;\n    if (!matches) {\n        return null;\n    }\n    if (allparams) {\n        return chain.map((route, i) => ({\n            id: route.id,\n            path: route.path,\n            params: mergeParams(route.params, allparams[i])\n        }));\n    }\n    return chain;\n};\nconst mergeParams = (a, b) => {\n    if (!a && b) {\n        return b;\n    }\n    else if (a && !b) {\n        return a;\n    }\n    else if (a && b) {\n        return Object.assign(Object.assign({}, a), b);\n    }\n    return undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n    let match = null;\n    let maxMatches = 0;\n    const plainIDs = ids.map(i => i.id);\n    for (const chain of chains) {\n        const score = matchesIDs(plainIDs, chain);\n        if (score > maxMatches) {\n            match = chain;\n            maxMatches = score;\n        }\n    }\n    if (match) {\n        return match.map((route, i) => ({\n            id: route.id,\n            path: route.path,\n            params: mergeParams(route.params, ids[i] && ids[i].params)\n        }));\n    }\n    return null;\n};\nconst routerPathToChain = (path, chains) => {\n    let match = null;\n    let matches = 0;\n    for (const chain of chains) {\n        const matchedChain = matchesPath(path, chain);\n        if (matchedChain !== null) {\n            const score = computePriority(matchedChain);\n            if (score > matches) {\n                matches = score;\n                match = matchedChain;\n            }\n        }\n    }\n    return match;\n};\nconst computePriority = (chain) => {\n    let score = 1;\n    let level = 1;\n    for (const route of chain) {\n        for (const path of route.path) {\n            if (path[0] === ':') {\n                score += Math.pow(1, level);\n            }\n            else if (path !== '') {\n                score += Math.pow(2, level);\n            }\n            level++;\n        }\n    }\n    return score;\n};\nclass RouterSegments {\n    constructor(path) {\n        this.path = path.slice();\n    }\n    next() {\n        if (this.path.length > 0) {\n            return this.path.shift();\n        }\n        return '';\n    }\n}\n\nconst readRedirects = (root) => {\n    return Array.from(root.children)\n        .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n        .map(el => {\n        const to = readProp(el, 'to');\n        return {\n            from: parsePath(readProp(el, 'from')),\n            to: to == null ? undefined : parsePath(to),\n        };\n    });\n};\nconst readRoutes = (root) => {\n    return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (root, node = root) => {\n    return Array.from(node.children)\n        .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n        .map(el => {\n        const component = readProp(el, 'component');\n        if (component == null) {\n            throw new Error('component missing in ion-route');\n        }\n        return {\n            path: parsePath(readProp(el, 'url')),\n            id: component.toLowerCase(),\n            params: el.componentProps,\n            beforeLeave: el.beforeLeave,\n            beforeEnter: el.beforeEnter,\n            children: readRouteNodes(root, el)\n        };\n    });\n};\nconst readProp = (el, prop) => {\n    if (prop in el) {\n        return el[prop];\n    }\n    if (el.hasAttribute(prop)) {\n        return el.getAttribute(prop);\n    }\n    return null;\n};\nconst flattenRouterTree = (nodes) => {\n    const routes = [];\n    for (const node of nodes) {\n        flattenNode([], routes, node);\n    }\n    return routes;\n};\nconst flattenNode = (chain, routes, node) => {\n    const s = chain.slice();\n    s.push({\n        id: node.id,\n        path: node.path,\n        params: node.params,\n        beforeLeave: node.beforeLeave,\n        beforeEnter: node.beforeEnter\n    });\n    if (node.children.length === 0) {\n        routes.push(s);\n        return;\n    }\n    for (const sub of node.children) {\n        flattenNode(s, routes, sub);\n    }\n};\n\nconst Router = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        /**\n         * By default `ion-router` will match the routes at the root path (\"/\").\n         * That can be changed when\n         *\n         */\n        this.root = '/';\n        /**\n         * The router can work in two \"modes\":\n         * - With hash: `/index.html#/path/to/page`\n         * - Without hash: `/path/to/page`\n         *\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\n         *\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n         * requires additional server-side configuration in order to properly work.\n         *\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n         *\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\n         */\n        this.useHash = true;\n    }\n    async componentWillLoad() {\n        console.debug('[ion-router] router will load');\n        await waitUntilNavNode();\n        console.debug('[ion-router] found nav');\n        await this.onRoutesChanged();\n    }\n    componentDidLoad() {\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n    async onPopState() {\n        const direction = this.historyDirection();\n        let path = this.getPath();\n        const canProceed = await this.runGuards(path);\n        if (canProceed !== true) {\n            if (typeof canProceed === 'object') {\n                path = parsePath(canProceed.redirect);\n            }\n            return false;\n        }\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    onBackButton(ev) {\n        ev.detail.register(0, processNextHandler => {\n            this.back();\n            processNextHandler();\n        });\n    }\n    /** @internal */\n    async canTransition() {\n        const canProceed = await this.runGuards();\n        if (canProceed !== true) {\n            if (typeof canProceed === 'object') {\n                return canProceed.redirect;\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    async push(url, direction = 'forward', animation) {\n        if (url.startsWith('.')) {\n            url = (new URL(url, window.location.href)).pathname;\n        }\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n        let path = parsePath(url);\n        let queryString = url.split('?')[1];\n        const canProceed = await this.runGuards(path);\n        if (canProceed !== true) {\n            if (typeof canProceed === 'object') {\n                path = parsePath(canProceed.redirect);\n                queryString = canProceed.redirect.split('?')[1];\n            }\n            else {\n                return false;\n            }\n        }\n        this.setPath(path, direction, queryString);\n        return this.writeNavStateRoot(path, direction, animation);\n    }\n    /**\n     * Go back to previous page in the window.history.\n     */\n    back() {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n    async printDebug() {\n        console.debug('CURRENT PATH', this.getPath());\n        console.debug('PREVIOUS PATH', this.previousPath);\n        printRoutes(readRoutes(this.el));\n        printRedirects(readRedirects(this.el));\n    }\n    /** @internal */\n    async navChanged(direction) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\n            return false;\n        }\n        const { ids, outlet } = await readNavState(window.document.body);\n        const routes = readRoutes(this.el);\n        const chain = routerIDsToChain(ids, routes);\n        if (!chain) {\n            console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n            return false;\n        }\n        const path = chainToPath(chain);\n        if (!path) {\n            console.warn('[ion-router] router could not match path because some required param is missing');\n            return false;\n        }\n        console.debug('[ion-router] nav changed -> update URL', ids, path);\n        this.setPath(path, direction);\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n        return true;\n    }\n    onRedirectChanged() {\n        const path = this.getPath();\n        if (path && routeRedirect(path, readRedirects(this.el))) {\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n        }\n    }\n    onRoutesChanged() {\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n    historyDirection() {\n        const win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n        }\n        const state = win.history.state;\n        const lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState || (state >= lastState && lastState > 0)) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        else if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        else {\n            return ROUTER_INTENT_NONE;\n        }\n    }\n    async writeNavStateRoot(path, direction, animation) {\n        if (!path) {\n            console.error('[ion-router] URL is not part of the routing set');\n            return false;\n        }\n        // lookup redirect rule\n        const redirects = readRedirects(this.el);\n        const redirect = routeRedirect(path, redirects);\n        let redirectFrom = null;\n        if (redirect) {\n            this.setPath(redirect.to, direction);\n            redirectFrom = redirect.from;\n            path = redirect.to;\n        }\n        // lookup route chain\n        const routes = readRoutes(this.el);\n        const chain = routerPathToChain(path, routes);\n        if (!chain) {\n            console.error('[ion-router] the path does not match any route');\n            return false;\n        }\n        // write DOM give\n        return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n    }\n    async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n        const unlock = await this.lock();\n        let changed = false;\n        try {\n            changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    async lock() {\n        const p = this.waitPromise;\n        let resolve;\n        this.waitPromise = new Promise(r => resolve = r);\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    }\n    async runGuards(to = this.getPath(), from = parsePath(this.previousPath)) {\n        if (!to || !from) {\n            return true;\n        }\n        const routes = readRoutes(this.el);\n        const toChain = routerPathToChain(to, routes);\n        const fromChain = routerPathToChain(from, routes);\n        const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n        const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n        const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n        if (canLeave === false || typeof canLeave === 'object') {\n            return canLeave;\n        }\n        const canEnter = beforeEnterHook ? await beforeEnterHook() : true;\n        if (canEnter === false || typeof canEnter === 'object') {\n            return canEnter;\n        }\n        return true;\n    }\n    async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, transition was cancelled');\n            return false;\n        }\n        this.busy = true;\n        // generate route event and emit will change\n        const routeEvent = this.routeChangeEvent(path, redirectFrom);\n        if (routeEvent) {\n            this.ionRouteWillChange.emit(routeEvent);\n        }\n        const changed = await writeNavState(node, chain, direction, index, false, animation);\n        this.busy = false;\n        if (changed) {\n            console.debug('[ion-router] route changed', path);\n        }\n        // emit did change\n        if (routeEvent) {\n            this.ionRouteDidChange.emit(routeEvent);\n        }\n        return changed;\n    }\n    setPath(path, direction, queryString) {\n        this.state++;\n        writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n    }\n    getPath() {\n        return readPath(window.location, this.root, this.useHash);\n    }\n    routeChangeEvent(path, redirectFromPath) {\n        const from = this.previousPath;\n        const to = generatePath(path);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n        return {\n            from,\n            redirectedFrom,\n            to,\n        };\n    }\n    get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n        };\n    }\n    render() {\n        const mode = getIonMode(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel,\n            target: this.target\n        };\n        return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n                [mode]: true,\n                'ion-activatable': true\n            }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]}