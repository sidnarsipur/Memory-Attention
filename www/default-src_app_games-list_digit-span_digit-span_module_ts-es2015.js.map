{"version":3,"sources":["./src/app/games-list/digit-span/digit-span-routing.module.ts","./src/app/games-list/digit-span/digit-span.module.ts","./src/app/games-list/digit-span/digit-span.page.ts","./src/app/games-list/digit-span/digit-span.service.ts","./src/app/games-list/digit-span/digit-span.page.scss","./src/app/games-list/digit-span/digit-span.page.html"],"names":[],"mappings":"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","file":"default-src_app_games-list_digit-span_digit-span_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DigitSpanPage } from './digit-span.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DigitSpanPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DigitSpanPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DigitSpanPageRoutingModule } from './digit-span-routing.module';\n\nimport { DigitSpanPage } from './digit-span.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DigitSpanPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [DigitSpanPage],\n  exports: [DigitSpanPage],\n})\nexport class DigitSpanPageModule {}\n","import { Component, OnInit, ViewChild, ElementRef, Input, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MenuController, AnimationController, AlertController } from '@ionic/angular';\nimport { GameService } from '../../shared/game.service';\nimport { DigitSpanService } from './digit-span.service';\nimport { EventemitterService } from '../../shared/eventemitter.service';\nimport { Subscription } from 'rxjs';\nimport { trigger, style, state, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'app-digit-span',\n  templateUrl: './digit-span.page.html',\n  styleUrls: ['./digit-span.page.scss'],\n  animations: [\n    trigger('cardFade', [\n      state('bright', style({opacity: 1})),\n      transition('* => faded', [animate(900)]),\n      transition('* => bright', [animate(500)]),\n      state('faded', style({opacity: 0}))\n    ])\n  ]\n})\n\n\nexport class DigitSpanPage implements OnInit, OnDestroy {\n  @ViewChild('currentNumber', { read: ElementRef, static: true}) currentNum: ElementRef;\n  @Input('excerciseSet') excerciseMode = false;\n  @Input('levels') levels;\n  numarray = [1,2,3,4,5,6,7,8,9]\n  gameHasBegun = false;\n  paused = false;\n  answer: string = '';\n  wrongcount: number = 0;\n  wrong = false;\n  lost = false;\n  currentIndex: number = 0;\n  formIsHidden: boolean = false;\n  numbersRemembered: number;\n  gamename: string;\n  correct = false;\n  currNum: string;\n  gameno = 0;\n  startButtonIsDisabled = false;\n  subscription = new Subscription();\n  database = new Subscription();\n  isFaded: string = 'faded';\n\n  constructor(\n    private router: Router,\n    private menu: MenuController,\n    private animationCtrl: AnimationController,\n    private gameService: GameService,\n    private digitSpanService: DigitSpanService,\n    private eventemitter: EventemitterService,\n    private alertCtrl: AlertController,\n    ) { }\n\n  ngOnInit() {\n    // Setup for game getting information from gameservice\n    this.gamename = this.gameService.getGames()[0].name\n    this.gameService.getLevelScore(this.gameno, this.excerciseMode)\n    console.log(this.excerciseMode)\n\n    // gets any pre-existing level and score information from database\n    this.database = this.eventemitter.databaseemitter.subscribe(value => {\n      console.log(value)\n      if (value.level) {\n        this.digitSpanService.level = value.level\n      }\n      if (value.score) {\n        this.digitSpanService.score = value.score\n      }\n      if (this.excerciseMode === true) {\n        this.digitSpanService.level = this.levels[0]\n        this.digitSpanService.score = 0\n      }\n    })\n\n    // call from the service to animate the number\n    this.digitSpanService.animate.subscribe(value => {\n      if (value === 'brighten') {\n        // this.brighten()\n        // setTimeout(() => {\n          // this.isFaded = 'bright'\n          // console.log('bright') \n          setTimeout(() => {\n            this.isFaded = 'faded'\n          }, 100)   \n    \n        // }, 150)\n      }\n      if (value === 'fade') {\n        setTimeout(() => {\n          this.isFaded = 'bright'\n        }, 1000)\n      }\n    })\n\n    // for the menu functions from the start component\n    this.subscription = this.eventemitter.gameStateSubj.subscribe(value => {\n      console.log(value)\n      switch (value) {\n        case 'start': \n          this.onStart()\n          break\n        case 'restart':\n          this.startButtonIsDisabled = true\n          this.onEndGame()\n          setTimeout(() => {\n            this.onRestart()\n          }, 700)\n          break\n        case 'resume':\n          this.onResume()\n          break\n        case 'quit':\n          this.onQuit()\n          break\n        case 'pause':\n          this.onPause()\n          break\n        case 'stop':\n          this.onEndGame()\n          break\n      }\n    })\n\n    // emitter that controls when the form with the selecting numbers is displayed or not\n    this.digitSpanService.form.subscribe(value => {\n      if (value === 'disappear') {\n        this.formIsHidden = true\n      }\n      if (value === 'reappear') {\n        this.formIsHidden = false\n        this.wrong = false\n        this.correct = false\n      }\n    })\n\n    // Gets the number from the service\n    this.digitSpanService.CurrentNumber.subscribe(value => {\n      this.currNum = JSON.parse(value)\n      setTimeout(() => {\n        this.isFaded = 'bright'\n      }, 100)   \n      setTimeout(() => {\n        this.isFaded = 'faded'\n      }, 1000)\n    })\n\n  }\n\n  // just returns level and score from the service\n  getLevelandScore() {\n    return [this.digitSpanService.level, this.digitSpanService.score]\n  }\n\n  // starts the game when the button is clicked\n  onStart() {\n    console.log(\"digitspanstart\")\n    this.presentAlert()\n  }\n\n  // takes the answer and places the next number that is input to the end\n  addNum(number: number) {\n    this.answer = this.answer + JSON.stringify(number)\n  }\n\n  // pauses the game (idk if this works)\n  onPause() {\n    this.paused = true;\n    this.digitSpanService.pause();\n  }\n  \n  // disables the submit button if no answer is there\n  disableSubmit() {\n    if(this.answer === '') {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  // removes a number from the answer\n  onDelete() {\n    this.answer = this.answer.slice(0, this.answer.length - 1)\n    //delete\n  }\n\n  // resets the answer\n  onReset() {\n    this.answer = ''\n  }\n\n  // starts the game and shows the popup\n  presentAlert() {\n    let scoreneeded = this.gameService.scoringconstant - this.digitSpanService.score\n    this.alertCtrl.create({\n      header: 'Level: ' + this.getLevelandScore()[0],\n      message: this.digitSpanService.alertmessage + 'You need ' + scoreneeded + ' points to go to the next level.',\n      buttons: [{\n        text: 'Continue',\n        role: 'Continue',\n        handler: () => {\n          this.digitSpanService.generateNumbers()\n          this.gameHasBegun = true;\n          this.gameService.startTimer()\n      }}]}).then(alert=> alert.present())\n  }\n\n  // other type of animation\n  // fade(finalopacity: string, startopacity) {\n  //   const fade = this.animationCtrl.create()\n  //   .addElement(this.currentNum.nativeElement)\n  //   .duration(600)\n  //   .iterations(1)\n  //   .fromTo('opacity', startopacity, finalopacity);\n  //   fade.play()\n  // }\n\n  // brighten() {\n  //   const brighten = this.animationCtrl.create()\n  //   .addElement(this.currentNum.nativeElement)\n  //   .duration(900)\n  //   .iterations(1)\n  //   .fromTo('opacity', '0.05', '1');\n  //   brighten.play()\n  // }\n\n  // generates a random number from 1-9 (legacy)\n  // randomNumber() {\n  //   let randomnum = Math.floor(Math.random() * 9)\n  //   return randomnum\n  // }\n\n  // the timer is stopped and the level and score are figured out when the answer is submitted\n  onSubmitAnswer() {\n    let timer = this.gameService.timer\n    let submitanswer = this.digitSpanService.submitAnswer(this.answer)\n    this.gameService.clearTimer()\n    if (this.excerciseMode === true) {\n      this.digitSpanService.level = this.digitSpanService.level + 1\n      if (this.digitSpanService.level > this.levels[1]) {\n        this.eventemitter.onRoundFinished({continue: true, score: this.digitSpanService.score})\n      }\n      else {\n        this.presentAlert()\n      }\n    } else {\n\n      this.gameService.storeLevelScore(this.gameno, this.digitSpanService.score, this.digitSpanService.level, this.excerciseMode, timer/1000, submitanswer.wrongs, submitanswer.prevscore, submitanswer.prevlevel)\n      this.presentAlert()\n    }\n    console.log(this.answer)\n    this.answer = ''\n    // if (submitReturned === true) {\n      // this.correct = true;\n      // this.wrongcount = 0\n      // this.wrong = false\n    // } \n    // if (submitReturned === false) {\n    //   this.correct = false\n    //   this.wrongcount++;\n    //   this.wrong = true;\n    //   let endgame = this.digitSpanService.checkWrongs(this.wrongcount)\n    //   if (endgame) {\n    //     console.log(endgame)\n    //     this.lost = true\n    //     this.numbersRemembered = endgame - 1\n    //     this.onEndGame()\n    //   }\n    // }\n  }\n\n  // ends the game\n  onEndGame() {\n    this.gameHasBegun = false;\n    this.correct = false\n    this.wrong = false;\n    this.wrongcount = 0;\n    this.digitSpanService.clearLevels()\n  }\n\n  // quits to the home\n  onQuit() {\n    this.gameHasBegun = false;\n    this.digitSpanService.unpause();\n    this.paused = false;\n    console.log('quit')\n    this.onEndGame();\n    this.router.navigate(['/home']);\n  }\n\n  // restarts the game\n  onRestart() {\n    setTimeout(() => {\n      this.onStart()\n      this.startButtonIsDisabled = false\n    }, 300)\n  }\n\n  // maybe the function is to be added???\n  getColor() {\n    \n  }\n\n  // resumes the game\n  onResume() {\n    this.paused = false\n    this.digitSpanService.unpause();\n  }\n\n  // closes the menu in other words it unpauses the game (legacy)\n  // onMenuClosed() {\n  //     this.paused = false;\n  //     this.digitSpanService.unpause();\n  // }\n\n  // unsubscribes from subscriptions when the component is destroyed\n  ngOnDestroy() {\n    this.subscription.unsubscribe()\n    this.database.unsubscribe()\n    // this.eventemitter.gameState.unsubscribe()\n    // this.digitSpanService.animate.unsubscribe()\n    // this.digitSpanService.form.unsubscribe()\n    // this.digitSpanService.CurrentNumber.unsubscribe()\n  }\n\n  // unsubscribes when the user leaves the screen\n  ionViewDidLeave() {\n    this.subscription.unsubscribe()\n    this.database.unsubscribe()\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { GameService } from '../../shared/game.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DigitSpanService {\n  numbersArray: number[] = [];\n  level: number = 1;\n  levelExp: number = 1;\n  currentNumber: number;\n  paused: boolean = false;\n  pausedi: number;\n  score: number = 0\n  i: number;\n  alertmessage: string = \"\";\n\n  animate = new EventEmitter<string>(); \n  CurrentNumber = new EventEmitter<string>();\n  form = new EventEmitter<string>();\n\n  constructor(private gameService: GameService) { }\n\n  // deals with level and score when the answer is submitted\n  submitAnswer(answer) {\n    // if (+answer === +this.numbersArray.join(\"\")) { \n    //   this.checkLevel()\n    //   return true;\n    // }\n    // else {\n    //   this.levelExp = 1\n    //   return false;\n    // }\n    let prevlevel = [this.level].slice(0, 1)\n    let answerarray = answer.split(\"\")\n    let wrongs = 0\n    let i = 0\n    console.log(answerarray, answer)\n    for (let item of this.numbersArray) {\n      if (JSON.stringify(item) !== answerarray[i]) {\n        wrongs++\n      }\n      i++\n    }\n    let currentscore = this.gameService.getScore(this.numbersArray.length, wrongs)\n    this.score = this.score + currentscore\n    if (this.score >= this.gameService.scoringconstant) {\n      this.level++\n      this.score = 0\n    }\n\n    if (wrongs > 0) {\n      this.alertmessage = \"The correct answer was \" + this.numbersArray.join(\"\") + \". \"\n    }\n    else {\n      this.alertmessage = \"Correct! \"\n    }\n    return {wrongs: wrongs, prevscore: currentscore, prevlevel: prevlevel[0]}\n  }\n\n  // checkWrongs(wrongcount) {\n  //   if (wrongcount === 2) {\n  //     return this.level\n  //   } else {\n  //     this.generateNumbers();\n  //   }\n  // }\n\n  // clears the levels\n  clearLevels() {\n    this.level = 1\n    this.levelExp = 1\n    this.numbersArray = []\n  }\n\n  // creates the random numbers\n  generateNumbers() {\n    this.numbersArray = []\n    for (let i = 0; i < this.level + 2; i++) {\n      this.numbersArray.push(this.randomNumber())\n      if (this.numbersArray[i] === this.numbersArray[i - 1]) {\n        this.numbersArray.splice(i)\n        i--\n      }\n    }\n    this.form.emit('disappear')\n    this.i = 0\n    this.runSeries()\n  }\n\n  // runs the game it has the info for when to animate, measures for pause, and what happens when the numbers are done\n  runSeries() {\n    if (this.paused !== true) {\n      if (this.i < this.level + 2) {\n      // this.animate.emit('fade')\n      this.currentNumber = this.numbersArray[this.i]\n      this.CurrentNumber.emit(JSON.stringify(this.currentNumber))\n      // this.animate.emit('brighten')\n      // this.animate.emit('fade')\n      setTimeout(() => {\n        this.i++  \n        this.runSeries()\n        return        \n      }, 2000)\n    } else {\n      // this.animate.emit('fade')\n      setTimeout(() => {\n        this.form.emit('reappear')\n      }, 600)\n    }\n    }\n  }\n\n  // creates a random number from 1-9\n  randomNumber() {\n    let randomnum = Math.floor(Math.random() * 9)\n    return randomnum\n  }\n\n  // pauses the game\n  pause() {\n    this.paused = true;\n  }\n\n  // unpauses the game\n  unpause() {\n    this.paused = false;\n    this.runSeries()\n  }\n}\n\n","export default \".text-large {\\n  font-weight: bold;\\n  font-size: 1.5in;\\n}\\n\\n.shadow {\\n  font-weight: \\\"Bold\\\";\\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\\n  border-radius: 20px;\\n  text-transform: capitalize;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpZ2l0LXNwYW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUVBO0VBRUksbUJBQUE7RUFFQSwyQ0FBQTtFQUNBLG1CQUFBO0VBQ0EsMEJBQUE7QUFESiIsImZpbGUiOiJkaWdpdC1zcGFuLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXh0LWxhcmdlIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDEuNWluO1xufVxuXG4uc2hhZG93e1xuICAgIC8vIGZvbnQtZmFtaWx5OiAnTGF0by1MaWdodCc7XG4gICAgZm9udC13ZWlnaHQ6ICdCb2xkJztcbiAgICBcbiAgICBib3gtc2hhZG93OiAwcHggNHB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59Il19 */\";","export default \"<app-header [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-header>\\n\\n<app-description [(gameHasBegun)]=\\\"gameHasBegun\\\" [(gameno)]=\\\"gameno\\\"></app-description>\\n\\n<app-score *ngIf=\\\"gameHasBegun\\\" [(level)]=\\\"getLevelandScore()[0]\\\" [(score)]=\\\"getLevelandScore()[1]\\\"></app-score>\\n\\n<!-- This game is mostly done except for menu functions testing and also get color might be added -->\\n\\n<!-- is needed because UI gets messed up when there is no ion content -->\\n<ion-content *ngIf=\\\"!gameHasBegun && !excerciseMode\\\"></ion-content>\\n\\n<ion-content *ngIf=\\\"gameHasBegun\\\">\\n  <!-- <ion-list *ngIf=\\\"gameHasBegun && correct || wrong\\\">\\n    <ion-item color=\\\"danger\\\" *ngIf=\\\"wrong\\\">\\n      <ion-label class=\\\"ion-text-center\\\">Incorrect Answer!</ion-label>\\n    </ion-item>\\n    <ion-item color=\\\"success\\\" *ngIf=\\\"correct\\\" >\\n      <ion-label class=\\\"ion-text-center\\\" >Good Job! Correct Answer!</ion-label>\\n    </ion-item>\\n  </ion-list> -->\\n  <!-- <form #f (ngSubmit)=\\\"onSubmitAnswer(); f.reset()\\\" *ngIf=\\\"gameHasBegun && !formIsHidden\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col> \\n        </ion-col>\\n      </ion-row>\\n      <div class=\\\"form-group\\\">\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label for=\\\"answer\\\" position=\\\"floating\\\">Type the numbers you saw.</ion-label>\\n              <ion-input\\n              id=\\\"answer\\\"\\n              type=\\\"number\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"answer\\\"\\n              name=\\\"answer\\\"\\n              required\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row> \\n      </div> \\n      <div class=\\\"form-group\\\">      \\n        <ion-row>\\n          <ion-col>\\n            <ion-button type=\\\"submit\\\" class=\\\"ion-text-center\\\" [disabled]=\\\"disableSubmit()\\\">Submit</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </div> \\n    </ion-grid>\\n  </form> -->\\n\\n  <!-- This is the selection screen where they can choose what numbers they saw in what order -->\\n  <ion-grid *ngIf=\\\"gameHasBegun && !formIsHidden\\\" class=\\\"ion-text-center\\\">\\n    <ion-row>\\n      <ion-col class=\\\"ion-text-center\\\">\\n        <ion-label><h1>{{ answer }}</h1></ion-label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row >\\n      <ion-col size=\\\"3\\\" offset=\\\"0.75\\\" *ngFor=\\\"let item of numarray\\\" >\\n        <ion-button color=\\\"light\\\" class=\\\"shadow\\\" style=\\\"width: 80%\\\" size=\\\"large\\\" (click)=\\\"addNum(item)\\\">{{ item }}</ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\" offset=\\\"0.75\\\" class=\\\"ion-text-center\\\">\\n        <ion-button color=\\\"light\\\" class=\\\"shadow\\\" style=\\\"width: 80%\\\" size=\\\"large\\\" (click)=\\\"onDelete()\\\"><ion-icon name=\\\"backspace-outline\\\"></ion-icon></ion-button>\\n      </ion-col>\\n      <ion-col size=\\\"3\\\" offset=\\\"0.75\\\" class=\\\"ion-text-center\\\">\\n        <ion-button color=\\\"light\\\" class=\\\"shadow\\\" style=\\\"width: 80%\\\" size=\\\"large\\\" (click)=\\\"addNum(0)\\\">0</ion-button>\\n      </ion-col>\\n      <ion-col size=\\\"3\\\" offset=\\\"0.75\\\" class=\\\"ion-text-center\\\">\\n        <ion-button color=\\\"light\\\" class=\\\"shadow\\\" style=\\\"width: 80%\\\" size=\\\"large\\\" (click)=\\\"onReset()\\\"><ion-icon name=\\\"refresh-outline\\\"></ion-icon></ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col class=\\\"ion-text-center\\\">\\n        <ion-button (click)=\\\"onSubmitAnswer()\\\" size=\\\"large\\\" type=\\\"submit\\\" color=\\\"warning\\\" style=\\\"width: 80%;\\\" class=\\\"ion-text-center shadow\\\" [disabled]=\\\"disableSubmit()\\\">Submit</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <!-- The animated number -->\\n  <div #currentNumber [@cardFade]=\\\"isFaded\\\">\\n    <ion-label class=\\\"ion-text-center\\\" *ngIf=\\\"gameHasBegun && formIsHidden\\\">\\n      <h1 class=\\\"text-large\\\" [style]=\\\"'color: ' + getColor()\\\">{{ currNum }}</h1>\\n    </ion-label>\\n  </div>\\n\\n</ion-content>\\n\\n<ion-footer>\\n  <app-menu [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-menu>\\n  <app-start [(gameHasBegun)]=\\\"gameHasBegun\\\" [(gameno)]=\\\"gameno\\\"></app-start>\\n</ion-footer>\\n\\n\\n\";"],"sourceRoot":"webpack:///"}