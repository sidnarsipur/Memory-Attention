{"version":3,"sources":["./src/app/games-list/sort-them/sort-them-routing.module.ts","./src/app/games-list/sort-them/sort-them.module.ts","./src/app/games-list/sort-them/sort-them.page.ts","./src/app/games-list/sort-them/sort-them.service.ts","./src/app/games-list/sort-them/sort-them.page.scss","./src/app/games-list/sort-them/sort-them.page.html"],"names":[],"mappings":"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","file":"default-src_app_games-list_sort-them_sort-them_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SortThemPage } from './sort-them.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SortThemPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SortThemPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SortThemPageRoutingModule } from './sort-them-routing.module';\n\nimport { SortThemPage } from './sort-them.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SortThemPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [SortThemPage],\n  exports: [SortThemPage],\n})\nexport class SortThemPageModule {}\n","import { Component, OnInit, ViewChild, ElementRef, Input, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController, Platform } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { EventemitterService } from '../../shared/eventemitter.service';\nimport { GameService } from '../../shared/game.service';\nimport { SortThemService } from './sort-them.service';\n\n\n@Component({\n  selector: 'app-sort-them',\n  templateUrl: './sort-them.page.html',\n  styleUrls: ['./sort-them.page.scss'],\n})\nexport class SortThemPage implements OnInit, OnDestroy {\n  gameHasBegun = false;\n  paused = false;\n  wrongcount: number = 0;\n  lost = false;\n  currentIndex: number = 0;\n  numbersRemembered: number;\n  gameno = 4;\n  startButtonIsDisabled = false;\n  numberofchips = 20\n  array = []\n  clickedcards = []\n  currentindex = 0 \n  wrongselected = []\n  height: number;\n  width: number;\n  top: number[];\n  left: number[];\n  times: number[] = [];\n  timerfunc = setInterval(() => {\n    this.timer = this.timer + 1000\n  }, 1000)\n  timer = 0\n  inittime: number;\n  pausetimer: number;\n  score = 0\n  gamewrongs = 0\n  instructionsarray = [\"Tap the numbers from 1-20\", \"Tap the letters from A-T\", \"Tap the letters from a-t\", \"Tap the letters from earliest to last\", \"Tap the numbers then letters 1, A, 2, B...\", \"Tap the lowest number then lowest letter then up to the highest\", \"Tap the lowest number and increase in multiples\", \"Tap the lowest number and increase in multiples\", \"1Aa2Bb...\", \"12Ab34Bc...\" ]\n  subscription = new Subscription()\n  database = new Subscription()\n  gamescore: number;\n  level = 1\n  @Input('excerciseSet') excerciseMode = false;\n  @Input('levels') levels;\n\n  constructor(\n    private eventemitter: EventemitterService,\n    private platform: Platform,\n    private sortThemService: SortThemService,\n    private router: Router,\n    private alertCtrl: AlertController,\n    private gameService: GameService) { }\n\n  ngOnInit() {\n\n    // gets existing level and score from the database\n    this.gameService.getLevelScore(this.gameno, this.excerciseMode)\n    this.database = this.eventemitter.databaseemitter.subscribe(value => {\n      if (value.level) {\n        this.sortThemService.level = value.level\n      }\n      if (value.score) {\n        this.score = value.score\n      }\n    })\n\n    // based on the size of the device, the size of the buttons changes and this function just gets the height and width of the device\n    this.height = +this.platform.height()\n    this.width = +this.platform.width()\n    console.log(this.height, this.width)\n\n    // emitter to get menu function calls from the start component\n    this.subscription = this.eventemitter.gameStateSubj.subscribe(value => {\n      console.log(value)\n      switch (value) {\n        case 'start': \n          this.onStart()\n          break\n        case 'restart':\n          this.startButtonIsDisabled = true\n          this.onEndGame()\n          setTimeout(() => {\n            this.startButtonIsDisabled = false\n            this.onStart()\n          }, 700)\n          break\n        case 'resume':\n          this.onResume()\n          break\n        case 'quit':\n          this.onQuit()\n          break\n        case 'pause':\n          this.onPause()\n          break\n        case 'stop':\n          this.onEndGame()\n          break\n      }\n    })\n\n    if (this.excerciseMode === true) {\n      this.sortThemService.level = this.levels[0]\n      this.score = 0\n    }\n  }\n\n  // starts the game and shows the popup\n  onStart() {\n    let topleft = this.sortThemService.generateCoordinates()\n    this.alertCtrl.create({\n      header: 'Level: ' + this.sortThemService.getLevel(),\n      message: 'You need ' + (this.gameService.scoringconstant - this.score) + ' points to go to the next level',\n      buttons: [{\n        text: 'Continue',\n        role: 'Continue',\n        handler: () => {\n          this.startRound(topleft)\n          this.gameHasBegun = true\n      }}]}).then(alert=> alert.present())\n  }\n\n  // begins the timer\n  startTimer() {\n    this.inittime = this.timer\n  }\n\n  // figures out the radius of the buttons\n  getRadius() {\n    return this.sortThemService.getRadiusConstant()\n  }\n\n  // fetches the lvel from the service\n  getLevel() {\n    return [this.sortThemService.level]\n  }\n\n  // async presentAlert(message) {\n  //   const alert = await this.alertCtrl.create({\n  //     header: 'Score:' + this.score,\n  //     message: 'You need' + message + 'points to go to the next level',\n  //     buttons: ['Continue']\n  //   })\n  //   await alert.present()\n  // }\n\n  // ends the game\n  onEndGame() {\n    this.gameHasBegun = false\n    this.sortThemService.endGame()\n    this.score = 0\n  }\n\n\n  // resumes the game\n  onResume() {\n    this.timer = this.pausetimer\n  }\n\n  // quits to the home page\n  onQuit() {\n    this.onEndGame()\n    this.inittime = 0\n    this.router.navigate([\"/home\"])\n  }\n\n  // pauses the game timer\n  onPause() {\n    this.pausetimer = this.timer\n  }\n\n  // begins the round with information from the service\n  startRound(topleft) {\n    this.gamewrongs = 0\n    this.top = topleft.top\n    this.left = topleft.left\n    this.array = topleft.array\n    this.startTimer()\n    console.log(this.array)\n    console.log(\"top: \" + this.top)\n    console.log(\"left: \" + this.left)\n  }\n\n  // what happens when a button is clicked and the color change and ends game if all answers are selected\n  onClickChip(chip, index) {\n    let currentcard = this.array[this.currentIndex].text\n    console.log(currentcard, chip)\n    if (chip === currentcard) {\n      console.log(chip, currentcard)\n      this.clickedcards.push(chip)   \n      this.array[this.currentIndex].color = \"success\" \n      this.currentIndex++\n      if (this.currentIndex === this.numberofchips) {\n        this.allAnswersSelected()\n      }\n    } if (chip != currentcard) {\n      this.wrongChipSelected(index, chip)\n    }\n    console.log(this.currentIndex)\n  }\n\n  // stops the timer and ends the game and starts a new round when all the answers are selected\n  allAnswersSelected() {\n    let endingtime = this.timer\n    let prevelevel = [this.sortThemService.level].slice(0, 1)\n    this.determineScore()\n    this.times.push(endingtime - this.inittime)\n    let increaselevel = this.sortThemService.increaseLevel(this.score)\n    if (increaselevel === true) {\n      console.log(this.times)\n      this.gameHasBegun = false\n    } else {\n      if(this.score >= this.gameService.scoringconstant) {\n        this.score = 0\n      }\n      let topleft = this.sortThemService.generateCoordinates()\n      let pointsneeded = null\n      if (this.excerciseMode === true) {\n        if (this.sortThemService.level === this.levels[1]) {\n          this.eventemitter.onRoundFinished({continue: true, score: this.score})\n        }\n        this.sortThemService.level++\n      } else {\n        pointsneeded = this.gameService.scoringconstant - this.score\n        this.gameService.storeLevelScore(this.gameno, this.score, this.sortThemService.level, this.excerciseMode, (endingtime - this.inittime)/1000, this.gamewrongs, this.gamescore, prevelevel[0])\n      }\n      const alert = this.alertCtrl.create({\n        header: 'Level: ' + this.sortThemService.getLevel(),\n        message: 'You need ' + pointsneeded + ' points to go to the next level',\n        buttons: [{\n          text: 'Continue',\n          role: 'Continue',\n          handler: () => {\n            this.startRound(topleft)\n            this.clickedcards = []\n            this.currentIndex = 0\n        }}]}).then(alert=> alert.present())\n    }\n  }\n\n  // what happens when a wrong button is selected\n  wrongChipSelected(index, chip) {\n    this.gamewrongs++\n    let currentcolor = this.array[index].color\n    this.array[index].color = \"danger\"  \n    this.wrongselected.push(chip) \n    setTimeout(() => {\n      this.array[index].color = currentcolor\n    }, 300)\n  }\n\n  // figures out the score after a round\n  determineScore() {\n    this.gamescore = this.gameService.getScore(20, this.gamewrongs)\n    if (this.gamescore < 0) {\n      this.gamescore = 0\n    }\n    console.log(this.gamescore)\n    this.score = this.score + this.gamescore\n  }\n\n  // disables a correct chip\n  isDisabled(chip) {\n    for (let card of this.clickedcards) {\n      if (chip === card) {\n        return true\n      }\n    }\n    return false\n  }\n\n  // unsubscribes when destroyed\n  ngOnDestroy() {\n    this.subscription.unsubscribe()\n    this.database.unsubscribe()\n  }\n\n  // unsubscribes when leave\n  ionViewDidLeave() {\n    this.subscription.unsubscribe()\n    this.database.unsubscribe()\n  }\n}","import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SortThemService {\n  numberofchips = 20\n  height: number;\n  width: number;\n  level: number = 1;\n  alphabet = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]\n  smallalphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\",\"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n  radiusconstant = 55\n  heightconstant = 70\n  bottomconstant = 55\n  colors = [\"primary\", \"secondary\", \"tertiary\", \"warning\", \"danger\", \"dark\", \"medium\", \"light\"]\n  prevscore = 0\n\n  // figures out the dimensions of the screen when the service is created\n  constructor(private platform: Platform) { \n    this.getDimensions()\n  }\n\n  // figures out the radius and returns it\n  getRadiusConstant() {\n    return this.radiusconstant\n  }\n\n  // returns the game level\n  getLevel() {\n    return this.level\n  }\n\n  // figures out the button size from the screen size\n  getDimensions() {\n    this.height = +this.platform.height()\n    this.width = +this.platform.width()\n    let mode = this.platform.platforms()\n    console.log(mode)\n    let platform:string;\n    for (let item of mode) {\n      if (item === \"ios\") {\n        this.heightconstant = 110\n        platform = \"ios\"\n      }\n      if (item === \"android\") {\n        this.heightconstant = 130\n        this.bottomconstant = 75\n        platform = \"android\"\n      }\n    }\n    if (this.width*this.height >= 250126) {\n      if (platform === \"ios\") {\n        this.bottomconstant = 125\n        if(this.width*this.height >= 786432) {\n          this.bottomconstant = 175\n        }\n      }\n    }\n\n  }\n\n  // makes the radius from the height of the screen\n  generateRadiusConstant() {\n    let height = this.height - this.heightconstant - this.bottomconstant\n    let radconst = height/10\n    if (radconst > 75) {\n      radconst = 75\n    }\n    this.radiusconstant = radconst\n    console.log(this.radiusconstant)\n  }\n\n\n  // generates coordinates for the buttons \n  generateCoordinates() {\n    this.getDimensions()\n    this.generateRadiusConstant()\n    let top = []\n    let left = []\n    let array = []\n    let toppossibilities: number[] = [];\n    for (let tops = this.heightconstant; tops < this.height - this.bottomconstant;) {\n      toppossibilities.push(tops)\n      tops = tops + this.radiusconstant\n    }\n    let currenttoplength = toppossibilities.length\n    for (let i = 1; i < this.numberofchips + 1; i++) {\n      array.push({text: 1, color: \"light\", shape: \"round\"})\n      let currentop = Math.round(Math.random()*(toppossibilities.length - 1))\n      let currentleft = Math.round(Math.random()*(this.width - 80))\n      top.push(toppossibilities[currentop])\n      left.push(currentleft)\n      console.log(toppossibilities, currentop, toppossibilities[currentop], toppossibilities[1])\n      toppossibilities.splice(currentop, 1)\n    }\n    let topleft = this.seriesFixArray(currenttoplength, top, left)\n    top = topleft.top\n    left = topleft.left\n    array = this.getArray(array)\n    return {top: top, left: left, array: array}\n  }\n\n  // fixes the array if too many or too few coordinates are generated\n  seriesFixArray(currenttoplength, top, left) {\n    console.log(currenttoplength)\n    if (currenttoplength < this.numberofchips) {\n      let topleft = this.fixArray(currenttoplength, top, left)\n      top = topleft.top\n      left = topleft.left\n      let tobefixed = top.length\n      // for (let item of top) {\n      //   if (item === undefined) {\n      //     tobefixed = tobefixed - 1\n      //   }\n      // }\n      // if (tobefixed < top.length) {\n      //   let lefttop = this.seriesFixArray(tobefixed, top, left)\n      //   top = lefttop.top\n      //   left = lefttop.left\n      // }\n    }\n    return {top, left}\n  }\n\n  // part of the series fix array function that generates new coordinates if the number of necessary buttons is greater than the number of coordinates generated\n  fixArray(currenttoplength, top, left) {\n      let numtobefixed = top.length - currenttoplength\n      top.splice(top.length - numtobefixed, numtobefixed)\n      left.splice(left.length - numtobefixed, numtobefixed)\n      let i = 0\n      let possibilities = []\n      for (let coordinate of left) {\n        if (coordinate + this.radiusconstant*2 < this.width - 80) {\n          possibilities.push({top: top[i], left: coordinate + this.radiusconstant + 25 + Math.round(Math.random()*(this.width - 80 - (coordinate + this.radiusconstant*2)))})\n        }\n        if (coordinate - this.radiusconstant*2 > 0) {\n          possibilities.push({top: top[i], left: coordinate - this.radiusconstant - 25 - Math.round(Math.random()*(coordinate - this.radiusconstant*2))})\n        }\n        i++\n      }\n      for (let i = 0; i < numtobefixed; i++) {\n        let currenttopleft = possibilities.splice(possibilities.length - 1, 1)\n        // if (currenttopleft.length === 0) {\n        //   currenttopleft = [{top: undefined, left: undefined}]\n        // }\n        top.push(currenttopleft[0].top)\n        left.push(currenttopleft[0].left)\n      }\n    return {top, left}\n  }\n\n  // based on level this function makes the proper array of numbers/ letters\n  getArray(array: any[]) {\n    let startindex = 0\n    let numbersorletters = 0\n    let multiple = 1\n    let sevenoreight: boolean = this.level === 7 || this.level === 8\n    if (this.level === 4) {\n      numbersorletters = Math.round(Math.random()) + 1\n    }\n    if (sevenoreight) {\n      numbersorletters = 1\n      multiple = Math.round(Math.random()*5) + multiple + 1\n    }\n    if (this.level === 4 || sevenoreight) {\n      if (numbersorletters === 1) {\n        startindex = Math.round(Math.random()*10)\n      }\n      if (numbersorletters === 2) {\n        startindex = Math.round(Math.random()*6)\n      }\n    }\n    if (this.level === 6 || this.level === 9) {\n      startindex = Math.round(Math.random()*6)\n    }\n    if (this.level === 10) {\n      startindex = 2*Math.round(Math.random()*3)\n    }\n    console.log(array)\n    for (let i = 1; i < array.length + 1; i++) {\n      if (this.level === 1 || numbersorletters === 1) {\n          array[i - 1].text = multiple*(i) + startindex\n      }\n      if (this.level === 2 || numbersorletters === 2) {\n        array[i - 1].text = this.alphabet[i - 1 + startindex]\n      }\n      if (this.level === 3) {\n        array[i - 1].text = this.smallalphabet[i - 1 + startindex]\n      }\n      if (this.level === 5 || this.level === 6) {\n        if (i % 2 === 1) {\n          array[i - 1].text = (i + 1)/2 + startindex\n        }\n        if (i % 2 === 0) {\n          array[i - 1].text = this.alphabet[i/2 - 1 + startindex]\n        }\n      }\n      if (this.level === 9) {\n        switch(i % 3) {\n          case 1:\n            array[i - 1].text = (i - 1)/3 + startindex + 1\n            break\n          case 2: \n            array[i - 1].text = this.alphabet[(i - 2)/3 + startindex]\n            break\n          case 0: \n            array[i - 1].text = this.smallalphabet[(i - 3)/3 + startindex]\n            break\n        }\n      }\n      if (this.level === 10) {\n        console.log(i % 4)\n        switch (i % 4) {\n          case 1:\n            array[i - 1].text = (0.5*i) + 0.5 + startindex\n            break\n          case 2:\n            array[i - 1].text = (0.5*i) + 1 + startindex\n            break\n          case 3:\n            array[i - 1].text = this.alphabet[0.5*(i - 3) +startindex]\n            break\n          case 0:\n            array[i - 1].text = this.smallalphabet[0.5*i - 1 + startindex]\n            break\n        }\n      }\n      if (this.level === 6 || this.level > 7) {\n        array[i - 1].color = this.colors[Math.round(Math.random()*this.colors.length - 1)]\n      }\n    }\n    console.log(array)\n    return array\n  }\n\n  // level scenarios when it is level 10 or the score reaches 200\n  increaseLevel(score) {\n    if (this.level === 10) {\n      return true\n    }\n    if (score >= 200) {\n      this.level++\n    }\n  }\n\n  // resets level\n  endGame() {\n    this.level = 1\n  }\n}\n","export default \".absolute {\\n  position: fixed;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvcnQtdGhlbS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0FBQ0oiLCJmaWxlIjoic29ydC10aGVtLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hYnNvbHV0ZSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xufSJdfQ== */\";","export default \"\\n<app-header [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-header>\\n\\n<app-description [(gameHasBegun)]=\\\"gameHasBegun\\\"  [(gameno)]=\\\"gameno\\\"></app-description>\\n\\n<app-score *ngIf=\\\"gameHasBegun\\\" [(score)]=\\\"score\\\" [(level)]=\\\"this.getLevel()[0]\\\"></app-score>\\n\\n<ion-content *ngIf=\\\"!gameHasBegun && !excerciseMode\\\"></ion-content>\\n\\n<!-- the menu functions and UI needs to be tested for this gamme -->\\n\\n<!-- 20 Buttons -->\\n<!-- <ion-content *ngIf=\\\"gameHasBegun\\\">\\n    <ion-button \\n        mode=\\\"ios\\\"\\n        style=\\\"text-transform: none;\\\"\\n        [color]=\\\"item.color\\\" \\n        shape=\\\"round\\\" \\n        *ngFor=\\\"let item of array; index as i\\\" \\n        (click)=\\\"onClickChip(item.text, i)\\\" \\n        [disabled]=\\\"isDisabled(item.text)\\\" \\n        class=\\\"absolute\\\" \\n        [ngStyle]=\\\"{'top': top[i] + 'px','left': left[i] + 'px','width': getRadius() + 10 + 'px', 'height': getRadius() + 'px', 'font-size': getRadius()/3.5 + 'px'}\\\">\\n        {{ item.text }}\\n    </ion-button>\\n    <ion-label><p class=\\\"ion-text-center\\\">{{ instructionsarray[getLevel()[0] - 1] }}</p></ion-label>\\n\\n</ion-content> -->\\n\\n<!-- This part is the main code that codes for all 20 buttons. It is an ngFor and has many customizable aspects -->\\n<ion-content *ngIf=\\\"gameHasBegun\\\" scrollY=\\\"false\\\">\\n    <ion-grid>\\n        <ion-row>\\n            <ion-col *ngFor=\\\"let item of array; index as i\\\" >\\n                <ion-button\\n                mode=\\\"ios\\\"\\n                style=\\\"text-transform: none;\\\"\\n                [color]=\\\"item.color\\\" \\n                shape=\\\"round\\\" \\n                (click)=\\\"onClickChip(item.text, i)\\\" \\n                [disabled]=\\\"isDisabled(item.text)\\\" \\n                class=\\\"absolute\\\" \\n                [ngStyle]=\\\"{'top': top[i] + 'px','left': left[i] + 'px','width': getRadius() + 10 + 'px', 'height': getRadius() + 'px', 'font-size': (getRadius()/3.5 + 4) + 'px'}\\\">\\n                    {{ item.text }}\\n                </ion-button>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\\n<!-- <ion-footer *ngIf=\\\"gameHasBegun\\\" translucent=\\\"true\\\">\\n    <ion-toolbar>\\n        <ion-title>\\n            Level: {{getLevel()}}; Score: {{score}}\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-footer> -->\\n\\n<!-- <app-score *ngIf=\\\"gameHasBegun\\\" [(level)]=\\\"getLevel()\\\" [(score)]=\\\"score\\\"></app-score> -->\\n\\n<ion-footer>\\n    <app-menu [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-menu>\\n    <app-start [(gameHasBegun)]=\\\"gameHasBegun\\\" [(gameno)]=\\\"gameno\\\"></app-start>\\n</ion-footer>\\n\\n\";"],"sourceRoot":"webpack:///"}