{"version":3,"sources":["webpack:///src/app/games-list/word-pairs/word-pairs-routing.module.ts","webpack:///src/app/games-list/word-pairs/word-pairs.module.ts","webpack:///src/app/games-list/word-pairs/word-pairs.page.ts","webpack:///src/app/games-list/word-pairs/word-pairs.page.scss","webpack:///src/app/games-list/word-pairs/word-pairs.page.html"],"names":["routes","path","component","WordPairsPage","WordPairsPageRoutingModule","NgModule","imports","RouterModule","exports","WordPairsPageModule","CommonModule","FormsModule","IonicModule","SharedModule","declarations","eventemitter","gameService","alertCtrl","router","gameno","gameHasBegun","subscription","Subscription","corrArr","allArr","animals","gameWillBegin","formsIsHidden","str","anime","level","scoring","dis","tryStopClick","winScreen","loseScreen","inputForAnswer","holder","xqc","variation","randyVar","doneWithWordPairs","wordsShow","scoringCap","getScoringConstant","datapath","datasubscription","level1","compatibleBase","compatibleName","val1","wrongs","roundChecker","incompatibleBase","currentWordPair","numOfWordPairs","compatibility","stopDouble","database","gotWrong","gotRight","excerciseMode","incompatible","compatible","gameStateSubj","subscribe","value","randStart","gameinfoget","getLevelScore","databaseemitter","console","log","score","prevLevel","prevScore","Compat1","Object","values","index","length","name","val","toString","substr","indexOf","substring","push","Incompat1","levels","startTimer","randy","Math","floor","random","spclVar","onButtonClick","arrChoose","randImage","choosingArray","timetoshow","levelsMaker","numberofvalues","totalposs","possibilities","i","splice","arrChoosed","amountOfMemorizedWords","amountOfPossibilities","timeHidden","displayImg","createValues","item","element","runSeriesWord","setTimeout","seriesRun","array","time","currentItem","pair1","pair2","seriesRunzz","event","detail","selectedRadioGroup","selectedRadioItem","inputOff","getScore","right","pointsneeded","alert","create","header","message","buttons","text","role","handler","then","present","timer","clearTimer","storeLevelScore","sameRound","remain","checked","navigate","unsubscribe","EventemitterService","GameService","AlertController","Router","Input","Component","selector","template","animations","trigger","state","style","opacity","transition","animate"],"mappings":"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","file":"default-src_app_games-list_word-pairs_word-pairs_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WordPairsPage } from './word-pairs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WordPairsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WordPairsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WordPairsPageRoutingModule } from './word-pairs-routing.module';\n\nimport { WordPairsPage } from './word-pairs.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    WordPairsPageRoutingModule,\n    SharedModule\n  ],\n  declarations: [WordPairsPage],\n  exports: [WordPairsPage],\n})\nexport class WordPairsPageModule {}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { EventemitterService } from '../../shared/eventemitter.service';\nimport {trigger, state, style, animate, transition} from '@angular/animations'\nimport { Router } from '@angular/router';\nimport { AlertController, Platform } from '@ionic/angular';\nimport { WordToImagesPage } from '../word-to-images/word-to-images.page';\nimport { WordToImagesPageRoutingModule } from '../word-to-images/word-to-images-routing.module';\nimport { GameService } from 'src/app/shared/game.service';\n\n@Component({\n  selector: 'app-word-pairs',\n  templateUrl: './word-pairs.page.html',\n  styleUrls: ['./word-pairs.page.scss'],\n  animations: [\n    trigger('anime', [\n      state('bright', style({opacity: 1})),\n      transition('* => faded', [animate(500)]),\n      transition('* => bright', [animate(500)]),\n      state('faded', style({opacity: 0}))\n    ])\n  ]\n})\nexport class WordPairsPage implements OnInit, OnDestroy {\n  gameno = 5\n  gameHasBegun = false;\n  subscription = new Subscription();\n  corrArr:any[] = [];\n  allArr= [];\n  randImage: any[];\n  choosingArray: any[];\n  animals: any[] = [];\n  currentItem: any;\n  gameWillBegin = true;\n  formsIsHidden = false;\n  str: String = \"\"; \n  anime: string = \"faded\";\n  level:number = 1;\n  scoring:number = 0;\n  selectedRadioGroup:any;\n  selectedRadioItem:any\n  dis:boolean = false;\n  tryStopClick:any[] = [];\n  winScreen = false\n  loseScreen = false;\n  inputForAnswer = false;\n  holder:number = 0;\n  //xqc: any[] = [];\n  xqc = \"\"\n  variation: boolean = false;\n  randyVar:number = 0;\n  doneWithWordPairs: boolean = false;\n  wordsShow: boolean = false;\n  scoringCap = this.gameService.getScoringConstant();\n  datapath = \"Word_Pair/words\"\n  datasubscription = new Subscription();\n  level1 = []\n  compatibleBase = []\n  compatibleName = []\n  val1 = \"\"\n  wrongs = 0;\n  roundChecker = 0;\n  incompatibleBase = []\n  currentWordPair = 0;\n  numOfWordPairs = 0\n  compatibility = 0;\n  prevLevel;\n  prevScore;\n  timer;\n  stopDouble = []\n  database = new Subscription()\n  gotWrong = false\n  gotRight = false\n  /*compatiblezz = [\n    {pair1: 'Salt', pair2: 'Pepper', option1: 'chilli', option2: 'mustard', option3: 'cumin'},\n    {pair1: 'Salt111', pair2: 'Pepper111', option1: 'chilli', option2: 'mustard', option3: 'cumin'},\n    {pair1: 'Salt2222', pair2: 'Pepper2222', option1: 'chilli', option2: 'mustard', option3: 'cumin'},\n    {pair1: 'Salt333', pair2: 'Pepper333', option1: 'chilli', option2: 'mustard', option3: 'cumin'},\n    {pair1: 'Salt44', pair2: 'Pepper44', option1: 'chilli', option2: 'mustard', option3: 'cumin'},\n    {pair1: 'Salt555', pair2: 'Pepper555', option1: 'chilli', option2: 'mustard', option3: 'cumin'},\n    {pair1: 'Salt6666', pair2: 'Pepper6666', option1: 'chilli', option2: 'mustard', option3: 'cumin'},\n\n\n  ];*/\n  @Input('excerciseSet') excerciseMode = false;\n  @Input('spclVar') spclVar;\n  @Input('levels') levels;\n  // getWordPairs(numOfPairs, type)\n  // {\n    // array1\n    //     for (int i=0; i < numOfPairs; i++)\n    //       array1[i] = compatible[i];\n\n  //   return array of \n  // }\n  incompatible = []\n  //   { name: \"Salt --- Pepper\",val: 'Salt',vals: 'Pepper', checked: false },\n  //   { name: \"Jelly --- Peanut Butter\",val: 'Jelly',vals: 'Peanut Butter', checked: false },\n  //   { name: \"Batman --- Robin\",val: 'Batman',vals: 'Robin', checked: false},\n  //   { name: \"Macaroni --- Cheese\",val: 'Macaroni',vals: 'Cheese', checked: false },\n  //   { name: \"King --- Queen\",val: 'King',vals: 'Queen', checked: false },\n  //   { name: \"Cat --- Mouse\",val: 'Cat',vals: 'Mouse', checked: false },\n  //   { name: \"Bread --- Butter\",val: 'Bread',vals: 'Butter', checked: false },\n  //   { name: \"Milk --- Cookies\",val: 'Milk',vals: 'Cookies', checked: false}, \n  //   { name: \"Fork --- Knife\",val: 'Fork',vals: 'Knife', checked: false },\n  //   { name: \"Biscuits --- Gravy\",val: 'Biscuits',vals: 'Gravy', checked: false },\n  //   { name: \"Hammer --- Nail\",val: 'Hammer',vals: 'Nail',checked: false },\n  //   { name: \"Fish --- Chips\",val: 'Fish',vals: 'Chips', checked: false}\n  // ];\n  compatible = []\n\n    /*{ name: \"Salt --- Pepperzz\",val: 'Salt',vals: 'Pepper', checked: false },\n    { name: \"Jelly --- Peanut Butterzz\",val: 'Jelly',vals: 'Peanut Butter', checked: false },\n    { name: \"Batman --- Robinzz\",val: 'Batman',vals: 'Robin', checked: false},\n    { name: \"Macaroni --- Cheesezz\",val: 'Macaroni',vals: 'Cheese', checked: false },\n    { name: \"King --- Queenzz\",val: 'King',vals: 'Queen', checked: false },\n    { name: \"Cat --- Mousezz\",val: 'Cat',vals: 'Mouse', checked: false },\n    { name: \"Bread --- Butterzz\",val: 'Bread',vals: 'Butter', checked: false },\n    { name: \"Milk --- Cookieszz\",val: 'Milk',vals: 'Cookies', checked: false}, \n    { name: \"Fork --- Knifezz\",val: 'Fork',vals: 'Knife', checked: false },\n    { name: \"Biscuits --- Gravyzz\",val: 'Biscuits',vals: 'Gravy', checked: false },\n    { name: \"Hammer --- Nailzz\",val: 'Hammer',vals: 'Nail',checked: false },\n    { name: \"Fish --- Chipszz\",val: 'Fish',vals: 'Chips', checked: false}*/\n\n\n\n  constructor(private eventemitter:EventemitterService, \n    private gameService: GameService,\n    private alertCtrl: AlertController,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.subscription = this.eventemitter.gameStateSubj.subscribe(value => {\n      switch (value) {\n        case 'start': \n        this.randStart()\n          break\n        case 'restart':\n          break\n        case 'resume':\n          break\n        case 'quit':\n          break\n        case 'pause':\n          break\n      // case 'stop':\n      //   break\n      }\n    })\n\n\n    this.gameService.gameinfoget(this.datapath)\n\n    this.gameService.getLevelScore(this.gameno, false)\n    this.database = this.eventemitter.databaseemitter.subscribe(value => {\n      console.log(value)\n      console.log(\"value level and score    \" + value.level + \"        \" + value.score)\n      if (value.level) {\n        this.level = value.level\n        this.prevLevel = this.level\n        console.log(this.prevLevel + \" ------- prevLevel --------\")\n      }\n      if (value.score) {\n        this.scoring = value.score\n        this.prevScore = this.scoring\n        console.log(this.prevScore + \" ------- prevScore --------\")\n      }\n      if(value.path === this.datapath){\n        console.log(\"path is good\")\n      \n       if(value.value.Compat1){\n       console.log(this.datapath + \"  <-- datapath\")\n      console.log(value.Compat1 + \"  <--- console.loging the comp1\")\n      //this.compatibleBase = Object.keys(value.value.Compatible).map(key =>  value.value.Compatible[key])\n      this.compatibleBase = Object.values(value.value.Compat1)\n      console.log(this.compatibleBase, \" compatBAse works and runs properly\")\n\n      for (let index = 0; index < this.compatibleBase.length; index++) {\n        let name: string;\n        let val: string;\n        // this.val1 = this.compatibleBase[index].toString();\n        this.val1 = this.compatibleBase[index].toString();\n        name = this.val1.substr(0, this.val1.indexOf(\":\"));\n        val = this.val1.substring(this.val1.indexOf(\":\")+1)\n        this.compatible.push({name: name, val: val})\n\n      \n      console.log(this.compatible);\n      }\n    }\n    \n    \n    if(value.value.Incompat1)\n    {\n      console.log(value.value.Incompat1)\n        //this.compatibleBase = Object.keys(value.value.Compatible).map(key =>  value.value.Compatible[key])\n        this.incompatibleBase = Object.values(value.value.Incompat1)\n  \n        for (let index = 0; index < this.incompatibleBase.length; index++) {\n          let name: string;\n          let val: string;\n          this.val1 = this.incompatibleBase[index].toString();\n          name = this.val1.substr(0, this.val1.indexOf(\":\"));\n          val = this.val1.substring(this.val1.indexOf(\":\")+1)\n          this.incompatible.push({name: name, val: val})\n  \n        }\n      \n        console.log(this.incompatible);\n    }\n  }\n  console.log(\"ending the script\")\n    })\n   \n    //this.gameService.gameinfoget(this.datapath)\n\n    // this.datasubscription = this.eventemitter.databaseemitter.subscribe(value => {\n    //   console.log(value.value.Compatible)\n    //   //this.compatibleBase = Object.keys(value.value.Compatible).map(key =>  value.value.Compatible[key])\n    //   this.compatibleBase = Object.values(value.value.Compatible)\n    //   console.log(this.compatibleBase)\n    //   this.compatibleName = Object.values(value.name.Compatible)\n    //   console.log(this.compatibleName + \"  [ [ [[ [] ][ ][\")\n    //   //this.compatibleBase.push(value.value.Compatible)\n    //   console.log(this.compatibleBase)\n    // })\n\n    this.val1 = \"\"\n    //this.xqc = \"\"\n    console.log(this.xqc + \"     whoooooo\")\n\n\n\n\n\n    // this.datasubscription = this.eventemitter.databaseemitter.subscribe(pairsList => {\n    //   console.log(pairsList.value.Comp1)\n    //   //this.compatibleBase = Object.keys(value.value.Compatible).map(key =>  value.value.Compatible[key])\n    //   this.compatibleBase = Object.values(pairsList.value.Comp1)\n\n    //   for (let index = 0; index < this.compatibleBase.length; index++) {\n    //     let name: string;\n    //     let val: string;\n    //     this.val1 = this.compatibleBase[index].toString();\n    //     name = this.val1.substr(0, this.val1.indexOf(\":\"));\n    //     val = this.val1.substring(this.val1.indexOf(\":\")+1)\n    //     this.compatible.push({name: name, val: val})\n\n    //   }\n    //   console.log(this.compatible);\n    // })\n\n\n\n\n\n\n    //   this.datasubscription = this.eventemitter.databaseemitter.subscribe(pairsLists => {\n    //     console.log(pairsLists.value.Incomp1)\n    //     //this.compatibleBase = Object.keys(value.value.Compatible).map(key =>  value.value.Compatible[key])\n    //     this.incompatibleBase = Object.values(pairsLists.value.Incomp1)\n  \n    //     for (let index = 0; index < this.incompatibleBase.length; index++) {\n    //       let name: string;\n    //       let val: string;\n    //       this.val1 = this.incompatibleBase[index].toString();\n    //       name = this.val1.substr(0, this.val1.indexOf(\":\"));\n    //       val = this.val1.substring(this.val1.indexOf(\":\")+1)\n    //       this.incompatible.push({name: name, val: val})\n  \n    //     }\n      \n    //     console.log(this.incompatible);\n    //   })\n\n    \n\n\n      \n  \n      //console.log(this.compatibleBase)\n     \n      //this.compatibleBase.push(value.value.Compatible)\n    \n\n    // Set<String> set = new HashSet<String>();\n    // Iterator i = dataSnapshot.getChildren().iterator();\n\n    // while (i.hasNext()) {\n    //     set.add(((DataSnapshot) i.next()).getKey());\n    // }\n\n    // key = (((DataSnapshot) i.next()).getKey());\n    //         value = ((dataSnapshot).child(key).getValue().toString());\n    //         set.add(key+\" \"+value);\n    \n\n\n    // this.datasubscription = this.eventemitter.databaseemitter.subscribe(value => {\n    //   console.log(value.value.Incompatible)\n    //   this.incompatible === value.value.Incompatible\n    //   console.log(this.incompatible.values)\n    // })\n\n    if (this.excerciseMode === true) {\n      this.level = this.levels[0]\n      this.scoring = 0\n    }\n  }\n  randStart()\n  { \n    this.gameService.startTimer();\n    let randy = Math.floor(Math.random() * (2));\n    console.log(randy + \"    start of the randStart\")\n    if(this.scoring >= this.scoringCap)\n    {\n      this.scoring = 0\n      this.prevLevel = this.level;\n      this.level++;\n    }\n    this.compatibility = this.level % 2\n    if (this.excerciseMode === true) {\n      this.compatibility = this.spclVar\n    } \n    \n    console.log(this.compatibility + \" <--- compatibility\")\n    //this.compatibility = 0\n    if(this.compatibility == 0)\n    {\n      console.log(\" GOING INTO INCOMPATIABLE  \",this.level )\n      this.onButtonClick(this.incompatible)\n    }\n    else if(this.compatibility == 1)\n    {\n      console.log(\" GOING INTO COMPATIABLE   \",this.level )\n      this.onButtonClick(this.compatible)\n    }\n    // if(randy === 3)\n    // {\n    //   this.onButtonClick(this.compatiblezz)\n    // }\n\n  }\nonButtonClick(arrChoose)\n{\n  this.xqc = \"\"\n  this.randyVar = Math.floor(Math.random() * (2));\n  //this.randyVar = 0\n  console.log(\"randyVar is \" + this.randyVar)\n  if(this.randyVar === 1){\n    this.variation = false\n  }\n  else{\n    this.variation = true;\n  }\n  if(2 % 2 === 0)\n  {\n    console.log(\"aggagaghddhdfuufufufu\")\n  }\n  if(1 % 2 === 0)\n  {\n    console.log(\"TIRED YYAYAYYAAA\")\n  }\n  if(this.scoring >= this.scoringCap)\n    {\n      this.scoring = 0\n      this.prevLevel = this.level;\n      this.level++;\n    }\n  //   if(this.scoring < this.scoringCap)//&& this.scoring > 0\n  // {\n  //   this.winScreen = false;\n  //   this.loseScreen = false;\n  //   this.gameHasBegun = true;\n  //   this.formsIsHidden = false;\n  //   console.log(\"allarr length \" + this.allArr.length)\n  //   if(this.randyVar === 1)\n  //   {\n  //     for (let index = 0; index < this.allArr.length; index++) {\n  //       const element = this.allArr[index].name;\n  //       console.log(\"element \" + element + \" index  \" + index)\n  //       console.log(\"str \" + this.str, \"  978908789008790\")\n  //       if(this.str === element)\n  //       {\n  //         this.allArr.splice(index, 1);\n  //         console.log(\" WORK???? YES \" + this.allArr.length)\n  //         // if(this.allArr.length !== 0)\n  //         //   {\n  //         // this.xqc = this.allArr[index].name + \" --- \" + this.allArr[index].val\n  //         //   }\n  //       }\n  //     }\n  //     if(this.allArr.length !== 0)\n  //     {\n  //     let randy1 = Math.floor(Math.random() * (this.allArr.length));\n  //     this.str = \"\";\n  //     this.str = this.allArr[randy1].val\n  //     console.log(\"str \"+this.str)\n  //    }\n  //   }\n  //     else{\n  //     for (let index = 0; index < this.allArr.length; index++) {\n  //       const element = this.allArr[index].val;\n  //       console.log(\"element \" + element + \" index  \" + index)\n  //       console.log(\"str \" + this.str, \"  978908789008790\")\n  //       if(this.str === element)\n  //       {\n  //         this.allArr.splice(index, 1);\n  //         console.log(\" WORK???? YES \" + this.allArr.length)\n  //         // if(this.allArr.length !== 0)\n  //         //  {\n  //         // this.xqc = this.allArr[index].name + \" --- \" + this.allArr[index].val\n  //         //  }\n  //       }\n  //     }\n  //     if(this.allArr.length !== 0)\n  //     {\n  //     let randy1 = Math.floor(Math.random() * (this.allArr.length));\n  //     this.str = \"\";\n  //     this.str = this.allArr[randy1].name\n  //     console.log(\"str \"+this.str)\n  //     }\n  //   }\n    \n    \n  //   if(this.level === 1 || this.level === 2)\n  //   {\n  //     if(this.allArr.length === 0)\n  //     {\n  //       this.levelsMaker(arrChoose, 3, 3, 5000);\n  //     }\n  //     else{\n  //   this.runSeriesWord(0)\n  //   setTimeout(() => {\n  //     this.formsIsHidden = true;\n  //     this.inputForAnswer = true;\n  //   }, 0);//5000 not 0\n  //   }\n  //   }\n  //   if(this.level === 3 || this.level === 4)\n  //   {\n  //     if(this.allArr.length === 0)\n  //     {\n  //       this.levelsMaker(arrChoose, 4, 4, 7000);\n  //     }\n  //     else{\n  //       this.runSeriesWord2(0)\n  //   setTimeout(() => {\n  //     this.formsIsHidden = true;\n  //     this.inputForAnswer = true;\n  //   }, 0);//7000 not 0\n  //     }\n  //   }\n  //   if(this.level === 5 || this.level === 6)\n  //   {\n  //     if(this.allArr.length === 0)\n  //     {\n  //       this.levelsMaker(arrChoose, 5, 5, 9000);\n  //     }\n  //     else{\n  //   this.runSeriesWord3(0)\n  //   setTimeout(() => {\n  //     this.formsIsHidden = true;\n  //     this.inputForAnswer = true;\n  //   }, 0);//9000 not 0\n  //   }\n  //   }\n  //   if(this.level === 7 || this.level === 8)\n  //   {\n  //     if(this.allArr.length === 0)\n  //     {\n  //       this.levelsMaker(arrChoose, 6, 6, 11000);\n  //     }\n  //     else{\n  //     this.runSeriesWord4(0)\n  //     setTimeout(() => {\n  //     this.formsIsHidden = true;\n  //     this.inputForAnswer = true;\n  //   }, 0);//11000 not 0\n    \n  //  }\n  //   }\n  //   if(this.level === 9 || this.level === 10)\n  //     {\n  //       if(this.allArr.length === 0)\n  //      {\n  //       this.levelsMaker(arrChoose, 7, 7, 13000);\n  //       }\n  //       else{\n  //         this.runSeriesWord4(0)\n  //         setTimeout(() => {\n  //         this.formsIsHidden = true;\n  //         this.inputForAnswer = true;\n  //       }, 0);//13000 not 0\n  //       }\n      \n  //     }\n  //  }\n  //  else{}\n  this.winScreen = false;\n  this.loseScreen = false;\n  this.gameHasBegun = true;\n  this.formsIsHidden = false;\n  this.randImage = []\n  this.corrArr = []\n  this.str = \"\"\n  this.choosingArray = []\n  this.allArr = []\n  this.animals = [];\n  this.tryStopClick = [];\n  this.numOfWordPairs = 0;\n\n  //this.xqc = \"\";\n  let timetoshow;\n\n  switch (this.level) {\n    case 1:\n    case 2: this.numOfWordPairs = 3;\n            timetoshow = 5000;\n            break;\n    case 3:\n    case 4: this.numOfWordPairs = 4;\n            timetoshow = 7000;\n            break;\n    case 5:\n    case 6:this.numOfWordPairs = 5;\n            timetoshow = 9000;\n            break;\n\n    case 7:\n    case 8:this.numOfWordPairs = 6;\n           timetoshow = 11000;\n           break;\n\n    case 9:\n    case 10:this.numOfWordPairs = 7;\n            timetoshow = 13000;\n             break;\n\n  }\n  // if issue could come regarding amount of words shown check this line of code\n  this.levelsMaker(arrChoose, this.numOfWordPairs, this.numOfWordPairs+1, timetoshow);\n  // if(this.level === 1 || this.level === 2)\n  // {\n  //       this.numOfWordPairs = 3;\n        \n  //     }\n  //     else if(this.level === 3 || this.level === 4)\n  //     {\n  //       this.levelsMaker(arrChoose, 4, 4, 7000);\n  //     }\n  //     else if(this.level === 5 || this.level === 6)\n  //     {\n  //       this.levelsMaker(arrChoose, 5, 5, 9000);\n  //     }\n  //     else if(this.level === 7 || this.level === 8)\n  //     {\n  //       this.levelsMaker(arrChoose, 6, 6, 11000);\n  //     }\n  //     if(this.level === 9 || this.level === 10)\n  //     {\n  //       this.levelsMaker(arrChoose, 7, 7, 13000);\n  //     }\n\n  //     if(this.level > 10)\n  //     {\n  //       this.doneWithWordPairs = true;\n  //     }\n  //     this.levelsMaker(arrChoose, 3, 3, 5000);\n    \n    \n  \n}\n\ncreateValues(numberofvalues, totalposs) {\n  let possibilities: number[] = []\n  let values: number[] = []\n  for (let i = 0; i < totalposs; i++) {\n    possibilities.push(i)\n  }\n  for (let i = 0; i < numberofvalues; i++) {\n    let value = Math.floor(Math.random()*possibilities.length)\n    values.push(possibilities[value])\n    possibilities.splice(value, 1)\n  }\n  console.log(values)\n  return values\n}\n\nlevelsMaker(arrChoosed, amountOfMemorizedWords, amountOfPossibilities, timeHidden)\n{\n  this.wordsShow = true;\n  this.randImage = []\n  this.corrArr = []\n  this.str = \"\" \n  this.choosingArray = []\n  this.allArr = []\n  this.animals = [];\n  this.tryStopClick = [];\n  this.xqc = \"\"\n  let displayImg:any[] = this.createValues(amountOfPossibilities,arrChoosed.length);\n        this.corrArr = this.createValues( amountOfMemorizedWords, amountOfPossibilities);\n        for(let item of this.corrArr)\n        {\n          this.allArr.push(arrChoosed[displayImg[item]])\n        }\n        for(let i = 0; i < displayImg.length;i++)\n        {\n          displayImg[i] = arrChoosed[displayImg[i]]\n        }\n        this.randImage = this.allArr;\n        this.choosingArray = displayImg\n        for(let i = 0; i < this.allArr.length; i++)\n        {\n          this.animals.push(this.allArr[i].name +\" --- \"+ this.allArr[i].val)\n        }\n        console.log(\"Animals is \"+ this.animals);\n        console.log(this.randImage)\n        let randy = Math.floor(Math.random() * ((amountOfMemorizedWords)));\n        console.log(amountOfMemorizedWords, \"  lololoololoolo     \", randy)\n        if(this.randyVar === 1)//Prints the word the look for when needs to look for its pair\n        {\n          this.str = this.allArr[randy].name\n          for (let index = 0; index < this.allArr.length; index++) {\n            const element = this.allArr[index].val;\n            console.log(\"element \" + element + \" index  \" + index, \" woowoewoppwpwpwpqppqpq\")\n            console.log(\"str \" + this.str)\n            if(this.str === element)\n            {\n              //this.xqc = this.allArr[index].name + \" --- \" + this.allArr[index].val\n              console.log(\" Wooooooooo YES \" + this.allArr.length)\n             \n            }\n          }\n        }\n        else{\n          this.str = this.allArr[randy].val\n          for (let index = 0; index < this.allArr.length; index++) {\n            const element = this.allArr[index].name;\n            console.log(\"element \" + element + \" index  \" + index)\n            console.log(\"str \" + this.str)\n            if(this.str === element)\n            {\n              //this.xqc = this.allArr[index].name + \" --- \" + this.allArr[index].val\n              console.log(\" Wooooooooo YES \" + this.allArr.length)\n            }\n          }\n        }\n        \n       // this.xqc = this.allArr[randy].name + \" --- \" + this.allArr[randy].val\n        console.log(\"str is \" + this.str)\n        this.runSeriesWord(0)\n        setTimeout(() => {\n          this.wordsShow = false;\n          this.formsIsHidden = true;\n          this.inputForAnswer = true;\n        }, timeHidden);\n}\n\n\nrunSeriesWord(i) {\n  this.seriesRun(i, this.animals, 1900)\n}\n\nrunSeriesWord2(i) {\n  this.seriesRun(i, this.animals, 1900)\n}\n\nrunSeriesWord3(i) {\n  this.seriesRun(i, this.animals, 1900)\n}\n\nrunSeriesWord4(i) {\n  this.seriesRun(i, this.animals, 1900)\n}\n\nseriesRunzz(i, array, time) {\n  if (i < array.length) {\n    console.log(i)\n    this.currentItem = array[i].pair1, array[i].pair2;\n    console.log(this.currentItem)\n    setTimeout(() => {\n      this.anime = \"brighten\";\n    }, 100);\n    setTimeout(() => {\n      this.anime = \"faded\";\n    }, 1000)\n    setTimeout(() => {\n      i++\n      this.seriesRunzz(i, array, time)\n    }, time);\n  } \n}\n\nseriesRun(i, array, time) {\n  if (i < array.length) {\n    console.log(i)\n    this.currentItem = array[i];\n    console.log(this.currentItem)\n    setTimeout(() => {\n      this.anime = \"brighten\";\n    }, 100);\n    setTimeout(() => {\n      this.anime = \"faded\";\n    }, 1000)\n    setTimeout(() => {\n      i++\n      this.seriesRun(i, array, time)\n    }, time);\n  } \n}\nradioGroupChange(event) {\n  console.log(\"radioGroupChange\",event.detail);\n  this.selectedRadioGroup = event.detail;\n}\nradioSelect(event : CustomEvent) {\n  console.log(\"radioSelect \",event.detail);\n  this.selectedRadioItem = event.detail;\n}\ninputOff()\n{\n  this.inputForAnswer = false;\n}\nsign()\n{\n  \n  this.inputOff();\n  // you need to integrate scoring with this\n  if(this.tryStopClick.length > 2)\n  {\n    this.tryStopClick.splice(0,this.tryStopClick.length-2)\n  }\n  if(this.tryStopClick.length > 0 && this.tryStopClick.length === 1)\n  {\n    this.tryStopClick.splice(0,this.tryStopClick.length-1)\n  }\n  console.log(this.tryStopClick)\n\n  this.currentWordPair++;\n  console.log(this.tryStopClick[this.tryStopClick.length - 1], \"    look here\")\n  if(this.str === this.tryStopClick[this.tryStopClick.length - 1])\n  {\n    \n    // this.winScreen = true;\n    // this.inputForAnswer = false;\n    // if (this.excerciseMode === true) {\n    //   if (this.level === this.levels[1]) {\n    //     this.eventemitter.onRoundFinished({continue: true, score: this.scoring})\n    //   }\n    //   this.level++\n    }\n    else{\n      this.wrongs++;\n\n    }\n    console.log(this.currentWordPair, \"    cur word pair\")\n  console.log(this.numOfWordPairs, \"    num ofß word pair\")\n  console.log(this.wrongs, \"Wrong\")\n    \n    \n  console.log(this.gameService.getScore(this.numOfWordPairs, this.wrongs) + \" < -------- --- --- -- --\")\n  // else{\n  //   this.loseScreen = true;\n  //   this.inputForAnswer = false;\n  // }\n  if (this.currentWordPair === this.numOfWordPairs) {\n    let right = this.numOfWordPairs - this.wrongs\n    console.log(\"did OT\")\n    this.prevScore = this.scoring\n    this.scoring = this.gameService.getScore(this.numOfWordPairs, this.wrongs) + this.scoring\n    let pointsneeded = this.scoringCap - this.scoring;\n    const alert = this.alertCtrl.create({\n      header: 'Level: ' + this.level,\n      message: 'Correct: ' + right + '<br/>' + 'Incorrect: ' + this.wrongs + '<br/>' +'You need ' + pointsneeded + ' points to go to the next level',\n      buttons: [{\n        text: 'Continue',\n        role: 'Continue',\n        handler: () => {\n          this.randStart();\n      }\n        }]}).then(alert=> alert.present())\n        this.prevLevel = this.level;\n        this.timer = this.gameService.clearTimer()\n        console.log(this.timer, \" <------- Timer\")\n      this.gameService.storeLevelScore(this.gameno, this.gameService.getScore(this.numOfWordPairs, this.wrongs), this.level, this.excerciseMode, this.timer/1000, this.wrongs, this.prevScore, this.prevLevel)\n      this.wrongs = 0\n    this.currentWordPair = 0\n  \n  } else {\n    this.sameRound()\n  }\n  \n  \n}\n\nsameRound()\n{\n  let remain = []\n  console.log(\"the Else was run\")\n    this.gameHasBegun = true;\n    this.formsIsHidden = true;\n    this.inputForAnswer = true;\n    console.log(\"allarr length \" + this.allArr.length)\n    if(this.randyVar === 1)\n    {\n      console.log(\"The randyVar is equal to one\")\n      console.log(this.str, \"    before\")\n      for (let index = 0; index < this.allArr.length; index++) {\n        // const element = this.allArr[index];\n        console.log(this.allArr[index].val, \" <---- before val before name ------>    \",  this.allArr[index].name)\n         if(this.allArr[index].val !== this.str && this.allArr[index].name !== this.str)\n         {\n           remain.push(this.allArr[index])\n           console.log(\"The if is satisfied\")\n         }\n         else{\n           console.log(\"Found\")\n           console.log(this.str)\n           console.log(this.allArr[index])\n         }\n         console.log(\"----> \", remain)\n         \n       }\n       this.allArr = []\n       this.allArr = remain\n       console.log(this.allArr + \"   <------ this is all arr\")\n       if(this.allArr.length > 0)\n       {let randy = Math.floor(Math.random() * ((this.allArr.length)));\n        this.str = this.allArr[randy].val\n        console.log(this.str + \" <------ is the str after the else\")}\n      \n        this.variation = true;// was true\n      for (let index = 0; index < this.allArr.length; index++) {\n        const element = this.allArr[index].name;\n        console.log(\"element \" + element + \" index  \" + index)\n        console.log(\"str \" + this.str, \"  978908789008790\")\n           console.log(remain, \"   <----- remain\")\n        console.log(\" the whole array \" + this.allArr[index].name)\n      }\n      console.log(\"its broken \")\n      \n    }\n      else{\n        console.log(this.str, \"    before\")\n      for (let index = 0; index < this.allArr.length; index++) {\n        // const element = this.allArr[index];\n        console.log(this.allArr[index].val, \" <---- before val before name ------>    \",  this.allArr[index].name)\n         if(this.allArr[index].val !== this.str && this.allArr[index].name !== this.str)\n         {\n           remain.push(this.allArr[index])\n           console.log(\"The if is satisfied\")\n         }\n         else{\n           console.log(\"Found\")\n           console.log(this.str)\n           console.log(this.allArr[index])\n         }\n         console.log(\"----> \", remain)\n         \n       }\n       this.allArr = []\n       this.allArr = remain\n       console.log(this.allArr + \"   <------ this is all arr\")\n       if(this.allArr.length > 0)\n       {let randy = Math.floor(Math.random() * ((this.allArr.length)));\n        this.str = this.allArr[randy].name\n        console.log(this.str + \" <------ is the str after the else\")}\n      \n        this.variation = false;\n      for (let index = 0; index < this.allArr.length; index++) {\n        const element = this.allArr[index].val;\n        console.log(\"element \" + element + \" index  \" + index)\n        console.log(\"str \" + this.str, \"  978908789008790\")\n           console.log(remain, \"   <----- remain\")\n        console.log(\" the whole array \" + this.allArr[index].val)\n      }\n      console.log(\"its broken \")\n    }\n    for (let index = 0; index < this.allArr.length; index++) {\n      const element = this.allArr[index];\n      console.log(\"array NAME is --------> \" + this.allArr[index].name)\n      console.log(\"array VAL is --------> \" + this.allArr[index].val)\n      \n    }\n    \n    \n\n\n    // let arrChoose;\n    // if(this.compatibility === 0)\n    // {\n    //   arrChoose = this.incompatible\n    // }\n    // else if(this.compatibility === 1)\n    // {\n    //   arrChoose = this.compatible\n    // }\n  //   let timetoshow;\n\n  // switch (this.level) {\n  //   case 1:\n  //   case 2: this.numOfWordPairs = 3;\n  //           timetoshow = 5000;\n  //           break;\n  //   case 3:\n  //   case 4: this.numOfWordPairs = 4;\n  //           timetoshow = 7000;\n  //           break;\n  //   case 5:\n  //   case 6:this.numOfWordPairs = 5;\n  //           timetoshow = 9000;\n  //           break;\n\n  //   case 7:\n  //   case 8:this.numOfWordPairs = 6;\n  //          timetoshow = 11000;\n  //          break;\n\n  //   case 9:\n  //   case 10:this.numOfWordPairs = 7;\n  //           timetoshow = 13000;\n  //            break;\n\n  // }\n  // this.levelsMaker(arrChoose, this.numOfWordPairs, this.numOfWordPairs+1, timetoshow);\n}\n\nclearTryStopClick()\n{\n  this.tryStopClick = [];\n  this.tryStopClick.length = 0;\n  this.tryStopClick.splice(0,this.tryStopClick.length);\n  this.tryStopClick.splice(0)\n  console.log(\"the length of try stop click \" + this.tryStopClick.length)\n}\n\n\naTest(i){\n  console.log(this.choosingArray[i].name)\n  this.tryStopClick.push(this.choosingArray[i].name);\n  this.stopDouble.push(this.choosingArray[i].name)\n}\n\naTestVar(i){\n  console.log(this.choosingArray[i].val)\n  this.tryStopClick.push(this.choosingArray[i].val);\n  this.stopDouble.push(this.choosingArray[i].val)\n}\n\ngetName(i) {\n  if (this.choosingArray[i].checked === true) {\n    return 'radio-button-on-outline'\n  } \n  if (this.choosingArray[i].checked === false) {\n    return 'radio-button-off-outline'\n  }\n}\n\ngoAnOtherPage() {\n  this.router.navigate(['/home/main'])\n}\nngOnDestroy() {\n  this.subscription.unsubscribe()\n  this.database.unsubscribe()\n}\n\nionViewDidLeave() {\n  this.subscription.unsubscribe()\n  this.database.unsubscribe()\n}\n\n}\n","export default \".middle {\\n  height: 200px;\\n  width: 400px;\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  margin-top: -100px;\\n  margin-left: -200px;\\n}\\n\\n.middleRed {\\n  height: 200px;\\n  width: 400px;\\n  border-color: #52f721;\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  margin-top: -100px;\\n  margin-left: -200px;\\n}\\n\\n.shadow {\\n  font-family: \\\"Lato-Light\\\";\\n  font-weight: \\\"Bold\\\";\\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\\n  border-radius: 20px;\\n  text-transform: capitalize;\\n}\\n\\n.shadow-answers {\\n  font-family: \\\"Lato-Light\\\";\\n  font-weight: \\\"Bold\\\";\\n  font-size: 25px;\\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\\n  border-radius: 20px;\\n  text-transform: capitalize;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmQtcGFpcnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7RUFHQSxlQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBREo7O0FBSUE7RUFDSSxhQUFBO0VBQ0EsWUFBQTtFQUVBLHFCQUFBO0VBRUEsZUFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtBQUhKOztBQU1BO0VBQ0kseUJBQUE7RUFDQSxtQkFBQTtFQUVBLDJDQUFBO0VBQ0osbUJBQUE7RUFDQSwwQkFBQTtBQUpBOztBQU9BO0VBQ0kseUJBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSwyQ0FBQTtFQUNKLG1CQUFBO0VBQ0EsMEJBQUE7QUFKQSIsImZpbGUiOiJ3b3JkLXBhaXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5taWRkbGUge1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgd2lkdGg6IDQwMHB4O1xuICAgIC8vIGJhY2tncm91bmQ6IGJsYWNrO1xuXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICBtYXJnaW4tdG9wOiAtMTAwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IC0yMDBweDtcbn1cblxuLm1pZGRsZVJlZCB7XG4gICAgaGVpZ2h0OiAyMDBweDtcbiAgICB3aWR0aDogNDAwcHg7XG4gICAgLy8gYmFja2dyb3VuZDogYmxhY2s7XG4gICAgYm9yZGVyLWNvbG9yOiByZ2IoODIsIDI0NywgMzMpO1xuXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICBtYXJnaW4tdG9wOiAtMTAwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IC0yMDBweDtcbn1cblxuLnNoYWRvd3tcbiAgICBmb250LWZhbWlseTogJ0xhdG8tTGlnaHQnO1xuICAgIGZvbnQtd2VpZ2h0OiAnQm9sZCc7XG4gICAgXG4gICAgYm94LXNoYWRvdzogMHB4IDRweCA0cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbmJvcmRlci1yYWRpdXM6IDIwcHg7XG50ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cblxuLnNoYWRvdy1hbnN3ZXJze1xuICAgIGZvbnQtZmFtaWx5OiAnTGF0by1MaWdodCc7XG4gICAgZm9udC13ZWlnaHQ6ICdCb2xkJztcbiAgICBmb250LXNpemU6IDI1cHg7XG4gICAgYm94LXNoYWRvdzogMHB4IDRweCA0cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbmJvcmRlci1yYWRpdXM6IDIwcHg7XG50ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cbiJdfQ== */\";","export default \"<app-header [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-header>\\n<app-score *ngIf=\\\"gameHasBegun\\\" [(level)]=\\\"level\\\" [(score)]=\\\"scoring\\\"></app-score>\\n\\n<ion-content scroll-Y=\\\"true\\\">\\n    <div *ngIf=\\\"gameHasBegun && !formsIsHidden && wordsShow\\\" class = \\\"middle\\\">\\n        <ion-row > \\n          <ion-col [@anime]=\\\"anime\\\" class=\\\"ion-text-center\\\"> \\n            <ion-label> <h1>{{currentItem}}</h1></ion-label>\\n          </ion-col>\\n        </ion-row>\\n      </div>\\n\\n      <!-- <div  *ngIf=\\\"formsIsHidden && inputForAnswer\\\" class = \\\"ion-text-center\\\">\\n        <ion-grid style=\\\"flex: 1; position: sticky;\\\">\\n          <ion-row>\\n            <ion-col> \\n            <img src = \\\"../assets/word-finder/level_icon.png\\\">\\n             <h6 >Level: {{ level }}</h6> \\n          </ion-col>\\n          <ion-col>\\n            <img src = \\\"../assets/word-finder/point_icon.png\\\">\\n             <h6 >Points: {{ scoring }}</h6>\\n          </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </div> -->\\n      <!-- push changes test -->\\n\\n      <div *ngIf=\\\"formsIsHidden && inputForAnswer && !variation \\\">\\n        \\n        <ion-row >\\n            <ion-col class=\\\"ion-text-center\\\">\\n                <!-- <h2 >{{str}}</h2> -->\\n                <ion-button color = \\\"light\\\" style = \\\"width: 80%\\\" [disabled] = \\\"true\\\" size = \\\"large\\\" class = \\\"shadow\\\"><ion-text ><h3>{{str}}</h3></ion-text></ion-button>\\n            </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col *ngFor=\\\"let entry of choosingArray;index as i\\\" size = \\\"6\\\" class = \\\"ion-text-center\\\">\\n          <!-- <ion-list> -->\\n            \\n              <!-- <ion-item *ngFor=\\\"let entry of choosingArray;index as i\\\"> -->\\n                <!-- <label  >{{entry.name}}</label> -->\\n                <!-- <input slot = \\\"end\\\" type=\\\"radio\\\" name=\\\"radAnswer\\\" (click)=\\\"aTestVar(i)\\\" /> -->\\n                <!-- <ion-radio slot=\\\"end\\\" type=\\\"radio\\\" (click)=\\\"aTestVar(i)\\\" ></ion-radio>  -->\\n                <ion-button color = \\\"medium\\\" style = \\\"width: 80%\\\" size = \\\"large\\\" class = \\\"shadow-answers\\\" (click)=\\\"aTest(i)\\\" >{{entry.val}}</ion-button> \\n\\n            <!-- </ion-item> -->\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-center\\\">\\n            <ion-button (click)=\\\"sign()\\\">Submit</ion-button>\\n          </ion-col>\\n        </ion-row>\\n       \\n      </div>\\n  \\n      <div *ngIf=\\\"formsIsHidden && inputForAnswer && variation\\\">\\n        <ion-row>\\n            <ion-col class=\\\"ion-text-center\\\">\\n                <!-- <h2 style = \\\"width: 80%\\\" class=\\\"shadow\\\">{{str}}</h2> -->\\n                <ion-button color = \\\"warning\\\" style = \\\"width: 80%\\\" [disabled] = \\\"false\\\" size = \\\"large\\\" class = \\\"shadow\\\"><ion-text ><h3>{{str}}</h3></ion-text></ion-button>\\n\\n            </ion-col>\\n      </ion-row>\\n      <ion-row>\\n              <ion-col *ngFor=\\\"let entry of choosingArray;index as i\\\" size = \\\"6\\\" class = \\\"ion-text-center\\\">\\n                <!-- <ion-list> -->\\n                  \\n                    <!-- <ion-item *ngFor=\\\"let entry of choosingArray;index as i\\\"> -->\\n                      <!-- <label  >{{entry.name}}</label> -->\\n                      <!-- <input slot = \\\"end\\\" type=\\\"radio\\\" name=\\\"radAnswer\\\" (click)=\\\"aTestVar(i)\\\" /> -->\\n                      <!-- <ion-radio slot=\\\"end\\\" type=\\\"radio\\\" (click)=\\\"aTestVar(i)\\\" ></ion-radio>  -->\\n                      <ion-button color = \\\"medium\\\" style = \\\"width: 80%\\\" size = \\\"large\\\" class = \\\"shadow-answers\\\" (click)=\\\"aTestVar(i)\\\" >{{entry.name}}</ion-button> \\n\\n                  <!-- </ion-item> -->\\n                </ion-col>\\n              </ion-row>\\n                  <!-- <ion-radio-group> </ion-radio-group> -->\\n                <!-- </ion-list> -->\\n        <ion-row>\\n          <ion-col class=\\\"ion-text-center\\\">\\n            <ion-button (click)=\\\"sign()\\\">Submit</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </div>\\n\\n      <!-- <div *ngIf=\\\"winScreen\\\" class = \\\"middle\\\"> \\n        <ion-row> \\n          <ion-col class=\\\"ion-text-center\\\"> \\n            <ion-button (click)=\\\"randStart()\\\">Next Round</ion-button>  \\n          </ion-col> \\n        </ion-row>\\n      </div> \\n\\n      <div *ngIf=\\\"loseScreen\\\" class = \\\"middle\\\"> \\n        <ion-row> \\n            <ion-col class=\\\"ion-text-center\\\"> \\n              <ion-button (click)=\\\"randStart()\\\">Next Round</ion-button>       \\n            </ion-col> \\n          </ion-row>\\n          <ion-row>\\n              <ion-col class=\\\"ion-text-center\\\">\\n                <label>The correct pair was </label>\\n                <p>{{xqc}}</p>\\n              </ion-col>\\n          </ion-row>\\n      </div > -->\\n      \\n      <div *ngIf = \\\"doneWithWordPairs\\\" class = \\\"middleRed\\\">\\n        <ion-row> \\n            <ion-col class=\\\"ion-text-center\\\"> \\n                <label button (click)=\\\"goAnOtherPage()\\\">Go To Home Page </label>    \\n            </ion-col> \\n          </ion-row>\\n      </div>\\n      <app-description [(gameno)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-description>\\n</ion-content>\\n\\n<ion-footer>\\n  <app-menu [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-menu>\\n  <app-start [(gameno)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-start>\\n</ion-footer>\\n\\n\";"]}