{"version":3,"sources":["webpack:///src/app/games-list/trivia/answer.model.ts","webpack:///src/app/games-list/trivia/trivia-routing.module.ts","webpack:///src/app/games-list/trivia/trivia.model.ts","webpack:///src/app/games-list/trivia/trivia.module.ts","webpack:///src/app/games-list/trivia/trivia.page.ts","webpack:///src/app/games-list/trivia/trivia.page.scss","webpack:///src/app/games-list/trivia/trivia.page.html"],"names":["Answer","value","color","disabled","routes","path","component","RiddlesPage","RiddlesPageRoutingModule","NgModule","imports","RouterModule","CommonModule","exports","Riddle","question","answers","correct","TriviaPageModule","FormsModule","IonicModule","HttpClientModule","SharedModule","declarations","providers","router","menu","gameService","eventemitter","alertCtrl","typeArray","riddleArray","answerArray","choices","picked","threshold","multiplier","level","maxLevel","database","Subscription","gameHasBegun","gameno","wrongs","score","passed","gameOn","startButtonIsDisabled","subscription","excerciseSet","gameStateSubj","subscribe","onStart","console","log","onRestart","onResume","onQuit","onPause","databaseemitter","getLevelScore","levels","array","i","length","j","Math","floor","random","temp","toGet","create","header","message","buttons","text","role","handler","createGame","then","alert","present","no","lvl","trivia","getLevel","answer","push","createAnswers","shuffle","x","index","reset","timer","clearTimer","storeLevelScore","levelCheck","navigate","close","unsubscribe","Router","MenuController","GameService","EventemitterService","AlertController","Input","Component","selector","template"],"mappings":"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","file":"default-src_app_games-list_trivia_trivia_module_ts-es5.js","sourcesContent":["export class Answer {\n    public value: string;\n    public color: string;\n    public disabled: boolean;\n    \n    constructor(value: string,  color: string, disabled: boolean) {\n        this.value = value;\n        this.color = color;\n        this.disabled = disabled;\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { RiddlesPage } from './trivia.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RiddlesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), \n            CommonModule],\n  exports: [RouterModule],\n})\nexport class RiddlesPageRoutingModule {}\n","export class Riddle {\n    public question: string;\n    public answers: string[];\n    public correct: string;\n    \n    \n    constructor(question: string,  answers: string[], correct: string) {\n        this.question = question;\n        this.answers = answers;\n        this.correct = correct;\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RiddlesPageRoutingModule } from './trivia-routing.module';\n\nimport { RiddlesPage } from './trivia.page';\nimport { from } from 'rxjs';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RiddlesPageRoutingModule,\n    HttpClientModule, \n    SharedModule\n  ],\n  declarations: [RiddlesPage],\n  providers: [],\n  exports: [RiddlesPage],\n})\nexport class TriviaPageModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Riddle } from './trivia.model';\nimport { Answer } from './answer.model';\nimport { GameService } from '../../shared/game.service';\nimport { MenuController } from '@ionic/angular';\nimport { EventemitterService } from '../../shared/eventemitter.service';\nimport { Subscription } from 'rxjs';\nimport { AlertController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-riddles',\n  templateUrl: './trivia.page.html',\n  styleUrls: ['./trivia.page.scss'],\n})\nexport class RiddlesPage implements OnInit {\n  typeArray: string[] = [\"Arithmetic\",\"GK\",\"Similarity\",\"Vocabulary\"]\n  riddleArray = []\n  answerArray: Answer[] = []\n  question: string;\n  choices: string[] = [];\n  answer: string;\n  picked: boolean = false;\n  index: number;\n  threshold = 200; //Number of points to cross a level\n  multiplier = 10; //Number of points each question is worth\n  level: number = 1;\n  lvl: number;\n  maxLevel = 10;\n  database = new Subscription()\n  gameHasBegun = false;\n  gameno: number = 1\n  toGet: number;\n  wrongs: number = 0;\n  score = 0;\n  passed = 0;\n  gameOn = false;\n  startButtonIsDisabled = false;\n  subscription = new Subscription();\n  @Input('excerciseSet') excerciseSet = false;\n  @Input('levels') levels;\n\n  constructor(\n    private router: Router,\n    private menu: MenuController,\n    private gameService: GameService,\n    private eventemitter: EventemitterService,\n    private alertCtrl: AlertController) {}\n\n  ngOnInit() {\n    this.subscription = this.eventemitter.gameStateSubj.subscribe(value =>{\n      switch(value){\n        case 'start':\n          this.onStart()\n          console.log('start')\n          break\n        case 'restart':\n          this.onRestart()\n          break\n        case 'resume':\n          this.onResume()\n          break\n        case 'quit':\n          this.onQuit()\n          break\n        case 'pause':\n          this.onPause()\n          break\n      }}) \n\n      this.database = this.eventemitter.databaseemitter.subscribe(value => {\n        if (value.level){\n          this.level = value.level}\n        if (value.score){\n          this.score = value.score\n        }\n      })\n\n   this.gameService.getLevelScore(this.gameno, this.excerciseSet)\n\n   if (this.excerciseSet) {\n    this.level = this.levels[0]\n    this.score = 0\n    }\n}\n\n  shuffle(array) { // Common shuffle algorithm used online\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }    \n  return array;\n  } \n\n  onStart(){\n    this.toGet = this.threshold - this.score\n    this.alertCtrl.create({\n      header: 'Level: ' + this.level,\n      message: 'You need' + ' ' + this.toGet +  ' points to go to the next level',\n      buttons: [{\n        text: 'Continue',\n        role: 'Continue',\n        handler: () => {\n          this.gameHasBegun = true\n          this.gameOn = true\n          this.createGame()\n      }}]}).then(alert=> alert.present())\n  }\n\n  getLevel(no: number){\n    if(no % 4 == 0){\n      return 3;\n    }\n    if(no % 4 == 3){\n      return 2;\n    }\n    if(no % 4 == 2){\n      return 1;\n    }\n    if(no % 4 == 1){\n      return 0;\n    }\n  }\n\n  createGame(){\n    //let currentLevel = this.level\n   // this.lvl = Math.floor(currentLevel /= 100);\n    //console.log(\"The level is\", this.lvl)\n   // this.round = this.level % 100\n\n   this.lvl = Math.floor(Math.random() * 34) + 1; //Need to add type-based ranges if required\n\n   this.gameService.trivia()\n\n    this.database = this.eventemitter.databaseemitter.subscribe(value => {\n      if(value.path){\n      if (this.passed == 0){\n        this.passed++\n        console.log(this.typeArray[this.getLevel(this.level)])\n        this.question = (value.value[this.typeArray[this.getLevel(this.level)]]['Q'+ this.lvl]['Question'])\n        this.answer = (value.value[this.typeArray[this.getLevel(this.level)]]['Q'+ this.lvl]['Choices']['C1'])\n        for(let i = 1; i < 5; i++){\n            this.choices.push(value.value[this.typeArray[this.getLevel(this.level)]]['Q'+ this.lvl]['Choices']['C'+ i])\n            }\n            this.riddleArray.push(new Riddle(this.question, this.choices, this.answer))\n            this.createAnswers()\n      }\n    }})\n  }\n \n createAnswers(){\n   this.shuffle((this.riddleArray[0].answers))\n   for(let x = 0; x < 4; x++){\n    this.answerArray.push(new Answer(this.riddleArray[0].answers[x], 'dark', false))\n   }\n }\n\n pick(index: number){\n  console.log(\"Button is picked\")\n  if (this.picked != true){\n  this.picked = true;\n  this.answerArray[index].color = \"light\"\n  this.index = index;\n\n  for(let x = 0; x<4; x++){\n    if(x!=index){\n      this.answerArray[x].disabled = true\n    }\n  }\n\n  }\n  else {\n    this.picked = false;\n    this.answerArray[index].color = \"dark\"\n\n    for(let x = 0; x<4; x++){ \n      this.answerArray[x].disabled = false\n  }\n}}\n\nchecker(){\n  if (this.excerciseSet === true) {\n    this.toGet = null\n    if (this.level > this.levels[1]) {\n      this.level++\n      this.reset()\n      this.createGame()\n    }\n  } else {\n    //this.toGet = this.gameService.scoringconstant - this.cardService.getLevelandScore()[1]\n  }\n\n  if(this.answerArray[this.index].value == this.riddleArray[0].correct){\n    this.score+=this.multiplier\n    this.toGet = this.threshold - this.score\n    let timer = this.gameService.clearTimer()\n    this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n\n    this.alertCtrl.create({\n      header: 'Correct!',\n      message: 'Your Score is' + ' ' + this.score + \" points. You need \" + this.toGet + \" points to finish the level\",\n      buttons: [{\n        text: 'Next Question',\n        role: 'Continue',\n        handler: () => {\n          this.reset()\n          console.log(\"Next Question\")\n          this.levelCheck()\n      }}]}).then(alert=> alert.present())}\n    \n  else{\n    this.toGet = this.threshold - this.score\n    this.alertCtrl.create({\n      header: 'Wrong Answer',\n      message: 'You need' + ' ' + this.toGet +  ' points to go to the next level',\n      buttons: [{\n        text: 'Next Question',\n        role: 'Continue',\n        handler: () => {\n          this.reset()\n          this.wrongs++\n          let timer = this.gameService.clearTimer()\n          this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n          console.log(\"Next Question\")\n          this.levelCheck()\n      }}]}).then(alert=> alert.present())\n  }\n    }\n\nlevelCheck(){\n  if(this.score >= this.threshold){\n    if(this.level >= this.maxLevel){\n      this.alertCtrl.create({\n        header: 'GAME COMPLETE!!',\n        message: 'We hope you enjoyed playing Trivia. The Game is over. Exiting will reset the game',\n        buttons: [{\n          text: 'Next Question',\n          role: 'Continue',\n          handler: () => {\n            this.level = 1;\n            this.score = 0;\n            let timer = this.gameService.clearTimer()\n            this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n            this.onQuit()\n            console.log(\"Game Over\")\n      \n        }}]}).then(alert=> alert.present())\n    }\n    else{\n    this.level++\n    this.score = 0\n    this.wrongs = 0\n    console.log(\"new type\")\n    let timer = this.gameService.clearTimer()\n    this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-this.multiplier , this.level-1)\n     this.alertCtrl.create({\n    header: 'You have completed the level!',\n    message: 'We are switching to the ' +  this.typeArray[this.lvl+1] + ' type of questions. Best of luck!',\n    buttons: [{\n      text: 'Next Question',\n      role: 'Continue',\n      handler: () => {\n        console.log(\"Next Level/Type\")\n  \n    }}]}).then(alert=> alert.present())\n  }}\n  else{\n  }\n  this.createGame()\n}\n  \nreset(){\n  this.riddleArray = []\n  this.picked = false\n  this.answerArray = []\n  this.choices = []\n  this.answer = \"\"\n  //this.round = 0\n  this.lvl = 0\n  this.passed = 0\n}\n\n\n  onQuit() {\n    this.gameOn = false;\n    this.router.navigate(['/home'])\n  }\n\n  onRevealHint() {\n    \n  }\n\n  onRestart(){\n    this.reset()\n    this.score = 0\n    this.wrongs = 0\n    let timer = this.gameService.clearTimer()\n    this.gameService.storeLevelScore(this.gameno, this.score, this.level, this.excerciseSet, timer,this.wrongs ,this.score-10 , this.level-1)\n    this.createGame()\n  }\n\n  onResume() {\n    this.menu.close('pause')\n  }\n\n  onPause(){\n    console.log(\"paused\")\n\n    this.alertCtrl.create({\n      header: 'Game is Paused',\n      message: 'Hope your liking it!',\n      buttons: [{\n        text: 'Resume Game',\n        role: 'Continue',\n        handler: () => {\n          console.log(\"Game Resumed\")\n    \n      }}]}).then(alert=> alert.present())\n  }\n\n  ngOnDestroy() {\n  }\n\n  ionViewDidLeave() {\n    this.subscription.unsubscribe()\n  }\n}\n","export default \".main {\\n  padding: 0 50px;\\n  margin-top: 30px;\\n}\\n\\nion-button {\\n  margin-bottom: 20px;\\n  font-size: 20px;\\n}\\n\\nion-icon {\\n  margin-left: 10px;\\n}\\n\\nh3 {\\n  margin-left: 10px;\\n  margin-right: 10px;\\n}\\n\\n.submit {\\n  padding-top: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyaXZpYS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7QUFBRjs7QUFHQTtFQUNFLG1CQUFBO0VBQ0EsZUFBQTtBQUFGOztBQUdBO0VBQ0UsaUJBQUE7QUFBRjs7QUFHQTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7QUFBRjs7QUFHQTtFQUNFLGlCQUFBO0FBQUYiLCJmaWxlIjoidHJpdmlhLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1haW57XG4gIHBhZGRpbmc6IDAgNTBweDtcbiAgbWFyZ2luLXRvcDogMzBweDtcbn1cblxuaW9uLWJ1dHRvbntcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG5pb24taWNvbntcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG5cbmgzIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cblxuLnN1Ym1pdCB7XG4gIHBhZGRpbmctdG9wOiA1MHB4O1xufVxuXG4iXX0= */\";","export default \"<app-header [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-header>\\n<app-description [(gameHasBegun)]=\\\"gameHasBegun\\\" [(startButtonIsDisabled)]=\\\"startButtonIsDisabled\\\" [(gameno)]=\\\"gameno\\\"></app-description>\\n\\n<app-score *ngIf=\\\"gameHasBegun\\\" [(level)]=\\\"level\\\" [(score)]=\\\"score\\\"></app-score>\\n\\n<ion-content class=\\\"background\\\" *ngIf=\\\"gameHasBegun\\\">\\n\\n  <h3 style=\\\"text-align: center\\\"><strong>{{ question }}</strong></h3>\\n\\n  <div class=\\\"main\\\">\\n    <ion-button\\n      [disabled] = \\\"answer.disabled\\\"\\n      (click) = \\\"pick(ind)\\\"\\n      color = \\\"{{ answer.color }}\\\"\\n      expand = \\\"block\\\"\\n      *ngFor = \\\"let answer of answerArray, index as ind\\\">\\n     {{ answer.value }}\\n    </ion-button>\\n  </div>\\n\\n  <div class=\\\"submit\\\">\\n    <ion-button\\n      *ngIf = \\\"picked\\\"\\n      class=\\\"main\\\"\\n      color=\\\"warning\\\"\\n      expand = \\\"block\\\"\\n      (click)=\\\"checker()\\\">\\n      Submit  \\n   <ion-icon \\n      name=\\\"enter-outline\\\"\\n      size=\\\"large\\\">\\n  </ion-icon>\\n  </ion-button>\\n</div>\\n\\n</ion-content>\\n\\n\\n\\n<ion-footer>\\n  <app-menu [(gamenumber)]=\\\"gameno\\\" [(gameHasBegun)]=\\\"gameHasBegun\\\" ></app-menu>\\n  <app-start [(gameHasBegun)]=\\\"gameHasBegun\\\" [(gameno)]=\\\"gameno\\\"></app-start>\\n</ion-footer>\";"]}